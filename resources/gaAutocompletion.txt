function
class
and
break
do
else
elseif
end
false
for
if
in
local
not
or
repeat
return
then
true
until
while
assert
collectgarbage
dofile
error
getfenv
getmetatable
gcinfo
ipairs
loadfile
loadlib
loadstring
next
pairs
pcall
print
rawequal
rawget
rawset
require
setfenv
setmetatable
type
unpack
self
memarray
char
uchar
short
ushort
int
uint
long
ulong
float
double
setup
update
draw
keyPressed
keyReleased
mousePressed
mouseMoved
mouseReleased
mouseDragged
tonumber
tostring
coroutine.create
coroutine.resume
coroutine.status
coroutine.wrap
coroutine.yield
string.byte
string.char
string.dump
string.find
string.len
string.lower
string.rep
string.sub
string.upper
string.format
string.reverse
string.match
string.gfind
string.gmatch
string.gsub
table.concat
table.foreach
table.foreachi
table.getn
table.sort
table.insert
table.remove
table.setn
math.abs
math.acos
math.asin
math.atan
math.atan2
math.ceil
math.cos
math.deg
math.exp
math.floor
math.fmod
math.log
math.log10
math.max
math.min
math.mod
math.pow
math.rad
math.sin
math.sqrt
math.tan
math.frexp
math.ldexp
math.random
math.randomseed
math.pi
bit.tobit
bit.tohex
bit.bnot
bit.band
bit.bor
bit.bxor
bit.lshift
bit.rshift
bit.arshift
bit.rol
bit.ror
bit.bswap
io.stdin
io.stdout
io.stderr
io.close
io.flush
io.input
io.lines
io.open
io.output
io.read
io.tmpfile
io.type
io.write
os.clock
os.date
os.difftime
os.execute
os.exit
os.getenv
os.remove
os.rename
os.setlocale
os.time
os.tmpname
debug.debug
debug.gethook
debug.getinfo
debug.getlocal
debug.getupvalue
debug.setlocal
debug.setupvalue
debug.sethook
debug.traceback

glBegin
glEnd
glVertex2d
glVertex3d
glVertex4d
glRectd
glEdgeFlag
glRotated
glTranslated
glScaled
glMultMatrixd
glFrustum
glOrtho
glLoadMatrixd
glLoadIdentity
glMatrixMode
glPushMatrix
glPopMatrix
glDepthRange
glViewport
glColor3d
glColor4d
glIndexd
glNormal3d
glLightf
glLightfv
glMaterialf
glMaterialfv
glLightModelf
glShadeModel
glFrontFace
glColorMaterial
glGetLightfv
glGetMaterialfv
glClipPlane
glGetClipPlane
glRasterPos2d
glRasterPos3d
glRasterPos4d
glBitmap
glPointSize
glLineWidth
glLineStipple
glPolygonStipple
glGetPolygonStipple
glCullFace
glPolygonMode
glReadBuffer
glReadPixels
glDrawPixels
glCopyPixels
glPixelStorei
glPixelStoref
glPixelTransferf
glPixelMapfv
glGetPixelMapfv
glPixelZoom
glTexParameterf
glTexEnvf
glTexCoord1d
glTexCoord2d
glTexCoord3d
glTexCoord4d
glTexGend
glTexImage1D
glTexImage2D
glGetTexEnvfv
glGetTexGenfv
glGetTexImage
glGetTexLevelParameterfv
glGetTexParameterfv
glGenTextures
glBindTexture
glDeleteTextures
glFogf
glScissor
glAlphaFunc
glStencilFunc
glStencilOp
glDepthFunc
glBlendFunc
glLogicOp
glClear
glClearAccum
glClearColor
glClearDepth
glClearIndex
glClearStencil
glDrawBuffer
glIndexMask
glColorMask
glDepthMask
glStencilMask
glAccum
glRenderMode
glSelectBuffer
glFeedbackBuffer
glPassThrough
glInitNames
glLoadName
glPushName
glPopName
glNewList
glEndList
glDeleteLists
glCallList
glCallLists
glGenLists
glIsList
glListBase
glEnable
glDisable
glIsEnabled
glFinish
glFlush
glHint
glGetError
glGetString
glGetBooleanv
glGetDoublev
glGetFloatv
glGetIntegerv
glPushAttrib
glPopAttrib

ofDrawAxis(float)
ofDrawGrid(float,float,bool,bool,bool,bool)
ofDrawGridPlane(float,float,bool)
ofDrawArrow(ofVec3f,ofVec3f,float)
ofDrawRotationAxes(float,float,int)
ofSeedRandom()
ofSeedRandom(int)
ofRandom(float)
ofRandom(float,float)
ofRandomf()
ofRandomuf()
ofNextPow2(int)
ofNormalize)
ofMap(float,float,float,float,float,bool)
ofClamp(float,float,float)
ofLerp(float,float,float)
ofDist(float,float,float,float)
ofDistSquared(float,float,float,float)
ofSign(float)
ofInRange(float,float,float)
ofRadToDeg(float)
ofDegToRad(float)
ofLerpDegrees(float,float,float)
ofLerpRadians(float,float,float)
ofAngleDifferenceDegrees(float,float)
ofAngleDifferenceRadians(float,float)
ofWrapRadians(float,float,float)
ofWrapDegrees(float,float,float)
ofNoise(float)
ofNoise(float,float)
ofNoise(float,float,float)
ofNoise(float,float,float,float)
ofSignedNoise(float)
ofSignedNoise(float,float)
ofSignedNoise(float,float,float)
ofSignedNoise(float,float,float,float)
ofInsidePoly(float,float,vector<ofPoint>)
ofInsidePoly(ofPoint,vector<ofPoint>)
ofLineSegmentIntersection(ofPoint,ofPoint,ofPoint,ofPoint,ofPoint)
ofBezierPoint(ofPoint,ofPoint,ofPoint,ofPoint,float)
ofCurvePoint(ofPoint,ofPoint,ofPoint,ofPoint,float)
ofBezierTangent(ofPoint,ofPoint,ofPoint,ofPoint,float)
ofCurveTangent(ofPoint,ofPoint,ofPoint,ofPoint,float)
ofEnableLighting()
ofDisableLighting()
ofEnableSeparateSpecularLight()
ofDisableSeparateSpecularLight()
ofGetLightingEnabled()
ofBufferFromFile(string,bool)
ofBufferToFile(string,ofBuffer,bool)
ofGetElapsedTimeMillis()
ofGetElapsedTimeMicros()
ofGetElapsedTimef()
ofGetSeconds()
ofGetMinutes()
ofGetHours()
ofLaunchBrowser)
ofGetVersionInfo)
ofToInt(string)
ofToFloat(string)
ofSaveScreen)
ofSaveFrame)
ofSaveViewport)
ofSplitString(string,string,bool)
ofGetYear()
ofGetMonth()
ofGetDay()
ofGetWeekday()
ofResetElapsedTimeCounter()
ofGetUnixTime()
ofGetSystemTime()
ofGetSystemTimeMicros()
ofGetTimestampString()
ofGetTimestampString(string)
ofToChar(string)
ofToBool(string)
ofToBinary(string)
ofBinaryToInt(string)
ofBinaryToChar(string)
ofBinaryToFloat(string)
ofBinaryToString(string)
ofJoinString(vector<string>,string)
ofHexToInt(string)
ofHexToChar(string)
ofHexToFloat(string)
ofHexToString(string)
ofStringReplace(string,string,string)
ofIsStringInString(string,string)
ofSleepMillis(int)
ofLoadURL(string)
ofLoadURLAsync(string,string)
ofSaveURLTo(string,string)
ofSaveURLAsync(string,string)
ofRemoveURLRequest(int)
ofRemoveAllURLRequests()
ofLoadImage(ofPixels,string)
ofSaveImage(ofPixels,string,ofImageQualityType)
ofBackground(int)
ofBackground(int,int)
ofBackground(int,int,int)
ofBackground(int,int,int,int)
ofBackgroundGradient(ofColor, ofColor, ofGradientMode)
ofSetCircleResolution(int)
ofSetRectMode(int)
ofGetRectMode()
ofRect(float,float,float,float)
ofTriangle(float,float,float,float,float,float)
ofCircle(float,float,float)
ofEllipse(float,float,float,float)
ofLine(float,float,float,float)
ofCurve(float,float,float,float,float,float,float,float)
ofBezier(float,float,float,float,float,float,float,float)
ofSetPolyMode(int)
ofBeginShape()
ofVertex(float,float)
ofVertex(float,float,float)
ofCurveVertex(float,float)
ofCurveVertex(float,float,float)
ofBezierVertex(float,float,float,float,float,float)
ofBezierVertex(float,float,float,float,float,float,float,float,float)
ofNextContour(bool)
ofEndShape(bool)
ofNoFill()
ofFill()
ofSetColor(int)
ofSetColor(int,int)
ofSetColor(int,int,int)
ofSetColor(int,int,int,int)
ofSetHexColor(int)
ofEnableAlphaBlending()
ofDisableAlphaBlending()
ofEnableSmoothing()
ofDisableSmoothing()
ofDrawBitmapString(string,ofPoint)
ofDrawBitmapString(string,float,float)
ofDrawBitmapString(string,float,float,float)
ofDrawBitmapStringHighlight(string,ofPoint,ofColor,ofColor)
ofDrawBitmapStringHighlight(string,int,int,ofColor,ofColor)
ofRotate(float,float,float,float)
ofRotateX(float)
ofRotateY(float)
ofRotateZ(float)
ofPushStyle()
ofPopStyle()
ofSetStyle(ofStyle)
ofGetStyle(ofStyle)
ofSetLineWidth(float)
ofPushMatrix()
ofPopMatrix()
ofTranslate(float,float,float)
ofScale(float,float,float)
ofBeginSaveScreenAsPDF(string,bool,bool,ofRectangle)
ofEndSaveScreenAsPDF()
ofPushView()
ofPopView()
ofViewport(ofRectangle)
ofViewport(float,float,float,float,bool)
ofGetCurrentViewport()
ofGetViewportWidth()
ofGetViewportHeight()
ofTranslate(ofPoint)
ofRotate(float)
ofSetupGraphicDefaults()
ofSetupScreen()
ofSetCurveResolution(int)
ofSetSphereResolution(int)
ofGetFill()
ofSetColor(ofColor)
ofSetColor(ofColor,int)
ofEnableBlendMode(ofBlendMode)
ofDisableBlendMode()
ofEnablePointSprites()
ofDisablePointSprites()
ofClear(float,float,float,float)
ofClear(float,float)
ofClearAlpha()
ofTriangle(float,float,float,float,float,float,float,float,float)
ofTriangle(ofPoint,ofPoint,ofPoint)
ofCircle(float,float,float,float)
ofCircle(ofPoint,float)
ofEllipse(float,float,float,float,float)
ofEllipse(ofPoint,float,float)
ofLine(float,float,float,float,float,float)
ofLine(ofPoint,ofPoint)
ofRect(ofRectangle)
ofRect(ofPoint,float,float)
ofRect(float,float,float,float,float)
ofVertex(ofPoint)
ofCurveVertex(ofPoint)
ofBezierVertex(ofPoint,ofPoint,ofPoint)
ofSphere(float,float,float,float)
ofSphere(float,float,float)
ofSphere(ofPoint,float)
ofSphere(float)
ofBox(float,float,float,float)
ofBox(float,float,float)
ofBox(ofPoint,float)
ofBox(float)
ofCone(float,float,float,float,float)
ofCone(float,float,float,float)
ofCone(ofPoint,float,float)
ofCone(float,float)
ofSetDrawBitmapMode(ofDrawBitmapMode)
ofSoundUpdate()
ofSoundGetSpectrum(int)

ofNode()
ofNode:setParent(ofNode)
ofNode:clearParent()
ofNode:getParent()
ofNode:getPosition()
ofNode:getX()
ofNode:getY()
ofNode:getZ()
ofNode:getXAxis()
ofNode:getYAxis()
ofNode:getZAxis()
ofNode:getSideDir()
ofNode:getLookAtDir()
ofNode:getUpDir()
ofNode:getPitch()
ofNode:getHeading()
ofNode:getRoll()
ofNode:getOrientationQuat()
ofNode:getOrientationEuler()
ofNode:getScale()
ofNode:getLocalTransformMatrix()
ofNode:getGlobalTransformMatrix()
ofNode:getGlobalPosition()
ofNode:getGlobalOrientation()
ofNode:setTransformMatrix(ofMatrix4x4)
ofNode:setPosition(float,float,float)
ofNode:setPosition(ofVec3f)
ofNode:setGlobalPosition(float,float,float)
ofNode:setGlobalPosition(ofVec3f)
ofNode:setOrientation(ofQuaternion)
ofNode:setOrientation(ofVec3f)
ofNode:setGlobalOrientation(ofQuaternion)
ofNode:setScale(float,float,float)
ofNode:setScale(ofVec3f)
ofNode:move(float,float,float)
ofNode:move(ofVec3f)
ofNode:truck(float)
ofNode:boom(float)
ofNode:dolly(float)
ofNode:tilt(float)
ofNode:pan(float)
ofNode:roll(float)
ofNode:rotate(ofQuaternion)
ofNode:rotate(float,ofVec3f)
ofNode:rotate(float,float,float,float)
ofNode:rotateAround(ofQuaternion,ofVec3f)
ofNode:rotateAround(float,ofVec3f,ofVec3f)
ofNode:lookAt(ofVec3f,ofVec3f)
ofNode:orbit(float,float,float,ofVec3f)
ofNode:orbit(float,float,float,ofNode)
ofNode:transformGL()
ofNode:restoreTransformGL()
ofNode:resetTransform()
ofNode:draw()

ofEasyCam()
ofEasyCam:beginCamera(ofRectangle)
ofEasyCam:endCamera()
ofEasyCam:reset()
ofEasyCam:setTarget(ofVec3f)
ofEasyCam:setTarget(ofNode)
ofEasyCam:getTarget()
ofEasyCam:setDistance(float)
ofEasyCam:getDistance()
ofEasyCam:setDrag(float)
ofEasyCam:getDrag()
ofEasyCam:enableMouseInput()
ofEasyCam:disableMouseInput()
ofEasyCam:getMouseInputEnabled()

ofMesh()
ofMesh:setMode(ofPrimitiveMode)
ofMesh:getMode()
ofMesh:clear()
ofMesh:setupIndicesAuto()
ofMesh:getVertex(int)
ofMesh:removeVertex(ofIndexType)
ofMesh:clearVertices()
ofMesh:getNormal(int)
ofMesh:removeNormal(ofIndexType)
ofMesh:clearNormals()
ofMesh:getColor(int)
ofMesh:removeColor(ofIndexType)
ofMesh:clearColors()
ofMesh:getTexCoord(int)
ofMesh:removeTexCoord(ofIndexType)
ofMesh:clearTexCoords()
ofMesh:getIndex(int)
ofMesh:addIndex(ofIndexType)
ofMesh:removeIndex(ofIndexType)
ofMesh:setIndex(int,ofIndexType)
ofMesh:clearIndices()
ofMesh:addTriangle(ofIndexType,ofIndexType,ofIndexType)
ofMesh:getNumVertices()
ofMesh:getNumColors()
ofMesh:getNumNormals()
ofMesh:getNumTexCoords()
ofMesh:getNumIndices()
ofMesh:getVerticesPointer()
ofMesh:getColorsPointer()
ofMesh:getNormalsPointer()
ofMesh:getTexCoordsPointer()
ofMesh:getIndexPointer()
ofMesh:setName(string)
ofMesh:haveVertsChanged()
ofMesh:haveColorsChanged()
ofMesh:haveNormalsChanged()
ofMesh:haveTexCoordsChanged()
ofMesh:haveIndicesChanged()
ofMesh:hasVertices()
ofMesh:hasColors()
ofMesh:hasNormals()
ofMesh:hasTexCoords()
ofMesh:hasIndices()
ofMesh:drawVertices()
ofMesh:drawWireframe()
ofMesh:drawFaces()
ofMesh:draw()
ofMesh:addVertex(ofVec3f)
ofMesh:setVertex(int,ofVec3f)
ofMesh:addNormal(ofVec3f)
ofMesh:setNormal(int,ofVec3f)
ofMesh:addColor(ofFloatColor)
ofMesh:setColor(int,ofFloatColor)
ofMesh:addTexCoord(ofVec2f)
ofMesh:setTexCoord(int,ofVec2f)
ofMesh:addIndices(ofIndexType*,int)
ofMesh:getCentroid()

ofCamera()
ofCamera:setFov(float)
ofCamera:setNearClip(float)
ofCamera:setFarClip(float)
ofCamera:setLensOffset(ofVec2f)
ofCamera:setAspectRatio(float)
ofCamera:setForceAspectRatio(bool)
ofCamera:getFov()
ofCamera:getNearClip()
ofCamera:getFarClip()
ofCamera:getLensOffset()
ofCamera:getForceAspectRatio()
ofCamera:getAspectRatio()
ofCamera:setupPerspective(bool,float,float,float,ofVec2f)
ofCamera:setupOffAxisViewPortal(ofVec3f,ofVec3f,ofVec3f)
ofCamera:enableOrtho()
ofCamera:disableOrtho()
ofCamera:getOrtho()
ofCamera:getModelViewMatrix()
ofCamera:setPosition(float,float,float)
ofCamera:setPosition(ofVec3f)
ofCamera:setScale(float)
ofCamera:setScale(float,float,float)
ofCamera:setScale(ofVec3f)
ofCamera:move(float,float,float)
ofCamera:move(ofVec3f)
ofCamera:truck(float)
ofCamera:boom(float)
ofCamera:dolly(float)
ofCamera:tilt(float)
ofCamera:pan(float)
ofCamera:roll(float)
ofCamera:rotate(float,ofVec3f)
ofCamera:rotate(float,float,float,float)
ofCamera:lookAt(ofVec3f,ofVec3f)
ofCamera:orbit(float,float,float,ofVec3f)
ofCamera:transformGL()
ofCamera:restoreTransformGL()
ofCamera:resetTransform()
ofCamera:draw()
ofCamera:getImagePlaneDistance(ofRectangle)
ofCamera:getProjectionMatrix(ofRectangle)
ofCamera:getModelViewProjectionMatrix(ofRectangle)
ofCamera:worldToScreen(ofVec3f,ofRectangle)
ofCamera:screenToWorld(ofVec3f,ofRectangle)
ofCamera:worldToCamera(ofVec3f,ofRectangle)
ofCamera:cameraToWorld(ofVec3f,ofRectangle)
ofCamera:beginCamera(ofRectangle)
ofCamera:endCamera()

ofMatrix3x3()
ofMatrix3x3(float,float,float,float,float,float,float,float,float)
ofMatrix3x3:set(float,float,float,float,float,float,float,float,float)
ofMatrix3x3:transpose()
ofMatrix3x3:determinant(ofMatrix3x3)
ofMatrix3x3:invert()
ofMatrix3x3:inverse(ofMatrix3x3)

ofMatrix4x4()
ofMatrix4x4(ofMatrix4x4)
ofMatrix4x4(ofQuaternion)
ofMatrix4x4:getRowAsVec3f(int)
ofMatrix4x4:getRowAsVec4f(int)
ofMatrix4x4:isValid()
ofMatrix4x4:isNaN()
ofMatrix4x4:set(ofMatrix4x4)
ofMatrix4x4:isIdentity()
ofMatrix4x4:makeIdentityMatrix()
ofMatrix4x4:makeScaleMatrix(ofVec3f)
ofMatrix4x4:makeScaleMatrix(float,float,float)
ofMatrix4x4:makeTranslationMatrix(ofVec3f)
ofMatrix4x4:makeTranslationMatrix(float,float,float)
ofMatrix4x4:makeRotationMatrix(float,ofVec3f)
ofMatrix4x4:makeRotationMatrix(float,float,float,float)
ofMatrix4x4:makeRotationMatrix(ofQuaternion)
ofMatrix4x4:makeRotationMatrix(float,ofVec3f,float,ofVec3f,float,ofVec3f)
ofMatrix4x4:makeInvertOf(ofMatrix4x4)
ofMatrix4x4:makeOrthoNormalOf(ofMatrix4x4)
ofMatrix4x4:makeFromMultiplicationOf(ofMatrix4x4,ofMatrix4x4)
ofMatrix4x4:getInverse()
ofMatrix4x4:makeOrthoMatrix(double,double,double,double,double,double)
ofMatrix4x4:makeOrtho2DMatrix(double,double,double,double)
ofMatrix4x4:makeFrustumMatrix(double,double,double,double,double,double)
ofMatrix4x4:makePerspectiveMatrix(double,double,double,double)
ofMatrix4x4:makeLookAtMatrix(ofVec3f,ofVec3f,ofVec3f)
ofMatrix4x4:makeLookAtViewMatrix(ofVec3f,ofVec3f,ofVec3f)
ofMatrix4x4:getOrtho(double,double,double,double,double,double)
ofMatrix4x4:getFrustum(double,double,double,double,double,double)
ofMatrix4x4:getPerspective(double,double,double,double)
ofMatrix4x4:getLookAt(ofVec3f,ofVec3f,ofVec3f,float)
ofMatrix4x4:decompose(ofVec3f,ofQuaternion,ofVec3f,ofQuaternion)
ofMatrix4x4:setRotate(ofQuaternion)
ofMatrix4x4:setTranslation(ofVec3f)
ofMatrix4x4:rotate(ofQuaternion)
ofMatrix4x4:translate(ofVec3f)
ofMatrix4x4:scale(ofVec3f)
ofMatrix4x4:glRotate(ofQuaternion)
ofMatrix4x4:glTranslate(ofVec3f)
ofMatrix4x4:glScale(ofVec3f)
ofMatrix4x4:getRotate()
ofMatrix4x4:getTranslation()
ofMatrix4x4:getScale()

ofQuaternion()
ofQuaternion(float,float,float,float)
ofQuaternion(ofVec4f)
ofQuaternion(ofVec3f)
ofQuaternion(float,ofVec3f,float,ofVec3f,float,ofVec3f)
ofQuaternion:asVec4()
ofQuaternion:asVec3()
ofQuaternion:set(float,float,float,float)
ofQuaternion:set(ofVec4f)
ofQuaternion:set(ofMatrix4x4)
ofQuaternion:get(ofMatrix4x4)
ofQuaternion:zeroRotation()
ofQuaternion:length()
ofQuaternion:length2()
ofQuaternion:conj()
ofQuaternion:inverse()
ofQuaternion:makeRotate(float,float,float,float)
ofQuaternion:makeRotate(float,ofVec3f)
ofQuaternion:makeRotate(float,ofVec3f,float,ofVec3f,float,ofVec3f)
ofQuaternion:makeRotate(ofVec3f,ofVec3f)
ofQuaternion:makeRotate_original(ofVec3f,ofVec3f)
ofQuaternion:getEuler()
ofQuaternion:slerp(float,ofQuaternion,ofQuaternion)

ofVec2f()
ofVec2f(float,float)
ofVec2f(ofVec3f)
ofVec2f(ofVec4f)
ofVec2f:set(float,float)
ofVec2f:set(ofVec2f)
ofVec2f:match(ofVec2f,float)
ofVec2f:align(ofVec2f,float)
ofVec2f:alignRad(ofVec2f,float)
ofVec2f:getScaled(float)
ofVec2f:scale(float)
ofVec2f:rotate(float)
ofVec2f:rotateRad(float)
ofVec2f:rotate(float,ofVec2f)
ofVec2f:rotateRad(float,ofVec2f)
ofVec2f:getMapped(ofVec2f,ofVec2f,ofVec2f)
ofVec2f:map(ofVec2f,ofVec2f,ofVec2f)
ofVec2f:distance(ofVec2f)
ofVec2f:squareDistance(ofVec2f)
ofVec2f:getInterpolated(ofVec2f,float)
ofVec2f:interpolate(ofVec2f,float)
ofVec2f:getMiddle(ofVec2f)
ofVec2f:middle(ofVec2f)
ofVec2f:average(ofVec2f,int)
ofVec2f:getNormalized()
ofVec2f:normalize()
ofVec2f:getLimited(float)
ofVec2f:limit(float)
ofVec2f:getPerpendicular()
ofVec2f:perpendicular()
ofVec2f:length()
ofVec2f:squareLength()
ofVec2f:angle(ofVec2f)
ofVec2f:angleRad(ofVec2f)
ofVec2f:dot(ofVec2f)
ofVec2f:rescaled(float)
ofVec2f:rescale(float)
ofVec2f:normalized()
ofVec2f:limited(float)
ofVec2f:perpendiculared()
ofVec2f:lengthSquared()
ofVec2f:interpolated(ofVec2f,float)
ofVec2f:middled(ofVec2f)
ofVec2f:mapped(ofVec2f,ofVec2f,ofVec2f)
ofVec2f:distanceSquared(ofVec2f)

ofVec3f()
ofVec3f(float,float,float)
ofVec3f(ofVec2f)
ofVec3f(ofVec4f)
ofVec3f:set(float,float,float)
ofVec3f:set(ofVec3f)
ofVec3f:match(ofVec3f,float)
ofVec3f:align(ofVec3f,float)
ofVec3f:alignRad(ofVec3f,float)
ofVec3f:getScaled(float)
ofVec3f:scale(float)
ofVec3f:rotate(float,float,float)
ofVec3f:rotateRad(float,float,float)
ofVec3f:rotate(float,ofVec3f)
ofVec3f:rotateRad(float,ofVec3f)
ofVec3f:getMapped(ofVec3f,ofVec3f,ofVec3f)
ofVec3f:map(ofVec3f,ofVec3f,ofVec3f)
ofVec3f:distance(ofVec3f)
ofVec3f:squareDistance(ofVec3f)
ofVec3f:getInterpolated(ofVec3f,float)
ofVec3f:interpolate(ofVec3f,float)
ofVec3f:getMiddle(ofVec3f)
ofVec3f:middle(ofVec3f)
ofVec3f:average(ofVec3f,int)
ofVec3f:getNormalized()
ofVec3f:normalize()
ofVec3f:getLimited(float)
ofVec3f:limit(float)
ofVec3f:getCrossed(ofVec3f)
ofVec3f:cross(ofVec3f)
ofVec3f:getPerpendicular()
ofVec3f:perpendicular()
ofVec3f:length()
ofVec3f:squareLength()
ofVec3f:angle(ofVec3f)
ofVec3f:angleRad(ofVec3f)
ofVec3f:dot(ofVec3f)
ofVec3f:rescaled(float)
ofVec3f:rescale(float)
ofVec3f:normalized()
ofVec3f:limited(float)
ofVec3f:perpendiculared()
ofVec3f:lengthSquared()
ofVec3f:interpolated(ofVec3f,float)
ofVec3f:middled(ofVec3f)
ofVec3f:mapped(ofVec3f,ofVec3f,ofVec3f)
ofVec3f:distanceSquared(ofVec3f)

ofVec4f()
ofVec4f(float,float,float,float)
ofVec4f(ofVec2f)
ofVec4f(ofVec3f)
ofVec4f:set(float,float,float,float)
ofVec4f:set(ofVec4f)
ofVec4f:match(ofVec4f,float)
ofVec4f:getScaled(float)
ofVec4f:scale(float)
ofVec4f:distance(ofVec4f)
ofVec4f:squareDistance(ofVec4f)
ofVec4f:getInterpolated(ofVec4f,float)
ofVec4f:interpolate(ofVec4f,float)
ofVec4f:getMiddle(ofVec4f)
ofVec4f:middle(ofVec4f)
ofVec4f:average(ofVec4f,int)
ofVec4f:getNormalized()
ofVec4f:normalize()
ofVec4f:getLimited(float)
ofVec4f:limit(float)
ofVec4f:length()
ofVec4f:squareLength()
ofVec4f:dot(ofVec4f)
ofVec4f:rescaled(float)
ofVec4f:rescale(float)
ofVec4f:normalized()
ofVec4f:limited(float)
ofVec4f:lengthSquared()
ofVec4f:interpolated(ofVec4f,float)
ofVec4f:middled(ofVec4f)
ofVec4f:distanceSquared(ofVec4f)

ofMaterial()
ofMaterial:setColors(ofFloatColor,ofFloatColor,ofFloatColor,ofFloatColor)
ofMaterial:setDiffuseColor(ofFloatColor)
ofMaterial:setAmbientColor(ofFloatColor)
ofMaterial:setSpecularColor(ofFloatColor)
ofMaterial:setEmissiveColor(ofFloatColor)
ofMaterial:setShininess(float)
ofMaterial:getDiffuseColor()
ofMaterial:getAmbientColor()
ofMaterial:getSpecularColor()
ofMaterial:getEmissiveColor()
ofMaterial:getShininess()
ofMaterial:beginMaterial()
ofMaterial:endMaterial()

ofFbo()
ofFbo(ofFbo)
ofFbo:allocate(int,int,int,int) 
ofFbo:draw(float,float)
ofFbo:draw(float,float,float,float)
ofFbo:setAnchorPercent(float,float)
ofFbo:setAnchorPoint(float,float)
ofFbo:resetAnchor()
ofFbo:setDefaultTextureIndex(int)
ofFbo:getDefaultTextureIndex()
ofFbo:getTextureReference()
ofFbo:getTextureReference(int)
ofFbo:getDepthTexture()
ofFbo:setUseTexture(bool)
ofFbo:beginFbo()
ofFbo:endFbo()
ofFbo:readToPixels(ofPixels,int)
ofFbo:readToPixels(ofShortPixels,int)
ofFbo:readToPixels(ofFloatPixels,int)
ofFbo:getWidth()
ofFbo:getHeight()
ofFbo:bind()
ofFbo:unbind()
ofFbo:getNumTextures()
ofFbo:getFbo()
ofFbo:getDepthBuffer()
ofFbo:getStencilBuffer()
ofFbo:checkGLSupport()
ofFbo:maxColorAttachments()
ofFbo:maxDrawBuffers()
ofFbo:maxSamples()

ofGLRenderer(bool)
ofGLRenderer:getType()
ofGLRenderer:setCurrentFBO(ofFbo*)
ofGLRenderer:update()
ofGLRenderer:draw(ofMesh,bool,bool,bool)
ofGLRenderer:draw(ofMesh,ofPolyRenderMode,bool,bool,bool)
ofGLRenderer:draw(ofPolyline)
ofGLRenderer:draw(ofPath)
ofGLRenderer:draw(ofImage,float,float,float,float,float,float,float,float,float)
ofGLRenderer:draw(ofFloatImage,float,float,float,float,float,float,float,float,float)
ofGLRenderer:draw(ofShortImage,float,float,float,float,float,float,float,float,float)
ofGLRenderer:rendersPathPrimitives()
ofGLRenderer:pushView()
ofGLRenderer:popView()
ofGLRenderer:viewport(ofRectangle)
ofGLRenderer:viewport(float,float,float,float,bool)
ofGLRenderer:setupScreenPerspective(float,float,ofOrientation,bool,float,float,float)
ofGLRenderer:setupScreenOrtho(float,float,ofOrientation,bool,float,float)
ofGLRenderer:getCurrentViewport()
ofGLRenderer:getViewportWidth()
ofGLRenderer:getViewportHeight()
ofGLRenderer:pushMatrix()
ofGLRenderer:popMatrix()
ofGLRenderer:translate(ofPoint)
ofGLRenderer:translate(float,float,float)
ofGLRenderer:scale(float,float,float)
ofGLRenderer:rotate(float,float,float,float)
ofGLRenderer:rotate(float)
ofGLRenderer:rotateX(float)
ofGLRenderer:rotateY(float)
ofGLRenderer:rotateZ(float)
ofGLRenderer:setupGraphicDefaults()
ofGLRenderer:setupScreen()
ofGLRenderer:setFillMode(ofFillFlag)
ofGLRenderer:getFillMode()
ofGLRenderer:setCircleResolution(int)
ofGLRenderer:setRectMode(ofRectMode)
ofGLRenderer:getRectMode()
ofGLRenderer:setLineWidth(float)
ofGLRenderer:setLineSmoothing(bool)
ofGLRenderer:setBlendMode(ofBlendMode)
ofGLRenderer:enablePointSprites()
ofGLRenderer:disablePointSprites()
ofGLRenderer:setColor(int,int,int)
ofGLRenderer:setColor(int,int,int,int)
ofGLRenderer:setColor(ofColor)
ofGLRenderer:setColor(ofColor,int)
ofGLRenderer:setColor(int)
ofGLRenderer:setHexColor(int)
ofGLRenderer:getBgColor()
ofGLRenderer:bClearBg()
ofGLRenderer:background(ofColor)
ofGLRenderer:background(float)
ofGLRenderer:background(int,float)
ofGLRenderer:background(int,int,int,int)
ofGLRenderer:setBackgroundAuto(bool)
ofGLRenderer:clear(float,float,float,float)
ofGLRenderer:clear(float,float)
ofGLRenderer:clearAlpha()
ofGLRenderer:drawLine(float,float,float,float,float,float)
ofGLRenderer:drawRectangle(float,float,float,float,float)
ofGLRenderer:drawTriangle(float,float,float,float,float,float,float,float,float)
ofGLRenderer:drawCircle(float,float,float,float)
ofGLRenderer:drawSphere(float,float,float,float)
ofGLRenderer:drawEllipse(float,float,float,float,float)
ofGLRenderer:drawString(string,float,float,float,ofDrawBitmapMode)

ofVbo()
ofVbo(ofVbo)
ofVbo:getVertId()
ofVbo:getColorId()
ofVbo:getNormalId()
ofVbo:getTexCoordId()
ofVbo:getIndexId()
ofVbo:getIsAllocated()
ofVbo:getUsingVerts()
ofVbo:getUsingColors()
ofVbo:getUsingNormals()
ofVbo:getUsingTexCoords()
ofVbo:getUsingIndices()
ofVbo:draw(int,int,int)
ofVbo:drawElements(int,int)
ofVbo:bind()
ofVbo:unbind()
ofVbo:clear()
ofVbo:setMesh(ofMesh,int)
ofVbo:setVertex3Data(ofVec3f*,int,int)
ofVbo:setVertex2Data(ofVec2f*,int,int)
ofVbo:setColorData(ofFloatColor*,int,int)
ofVbo:setNormalData(ofVec3f*,int,int)
ofVbo:setTexCoordData(ofVec2f*,int,int)
ofVbo:setIndexData(ofIndexType*,int,int)
ofVbo:setColorData(float*,int,int,int)
ofVbo:setNormalData(float*,int,int,int)
ofVbo:setTexCoordData(float*,int,int,int)
ofVbo:updateMesh(ofMesh)
ofVbo:updateVertex3Data(ofVec3f*,int)
ofVbo:updateVertex2Data(ofVec2f*,int)
ofVbo:updateColorData(ofFloatColor*,int)
ofVbo:updateNormalData(ofVec3f*,int)
ofVbo:updateTexCoordDataF(ofVec2f*,int)
ofVbo:updateIndexData(ofIndexType*,int)
ofVbo:updateVertexDataF(float*,int)
ofVbo:updateColorDataF(float*,int)
ofVbo:updateNormalDataF(float*,int)
ofVbo:updateTexCoordDataF(float*,int)

ofTextureData()

ofShader()
ofShader:load(string)
ofShader:load(string,string,string)
ofShader:beginShader()
ofShader:endShader()
ofShader:setUniformTexture(char*,ofBaseHasTexture,int)
ofShader:setUniformTexture(char*,ofTexture,int)
ofShader:setUniform1i(char*,int)
ofShader:setUniform2i(char*,int,int)
ofShader:setUniform3i(char*,int,int,int)
ofShader:setUniform4i(char*,int,int,int,int)
ofShader:setUniform1f(char*,float)
ofShader:setUniform2f(char*,float,float)
ofShader:setUniform3f(char*,float,float,float)
ofShader:setUniform4f(char*,float,float,float,float)
ofShader:unload()

ofVboMesh()
ofVboMesh(ofMesh)
ofVboMesh:setUsage(int)
ofVboMesh:setMode(ofPrimitiveMode)
ofVboMesh:getMode()
ofVboMesh:clear()
ofVboMesh:setupIndicesAuto()
ofVboMesh:getVertex(int)
ofVboMesh:clearVertices()
ofVboMesh:getNormal(int)
ofVboMesh:clearNormals()
ofVboMesh:getColor(int)
ofVboMesh:clearColors()
ofVboMesh:getTexCoord(int)
ofVboMesh:clearTexCoords()
ofVboMesh:getIndex(int)
ofVboMesh:addIndex(ofIndexType)
ofVboMesh:setIndex(int,ofIndexType)
ofVboMesh:clearIndices()
ofVboMesh:addTriangle(ofIndexType,ofIndexType,ofIndexType)
ofVboMesh:getNumVertices()
ofVboMesh:getNumColors()
ofVboMesh:getNumNormals()
ofVboMesh:getNumTexCoords()
ofVboMesh:getNumIndices()
ofVboMesh:getVerticesPointer()
ofVboMesh:getColorsPointer()
ofVboMesh:getNormalsPointer()
ofVboMesh:getTexCoordsPointer()
ofVboMesh:getIndexPointer()
ofVboMesh:setName(string)
ofVboMesh:haveVertsChanged()
ofVboMesh:haveColorsChanged()
ofVboMesh:haveNormalsChanged()
ofVboMesh:haveTexCoordsChanged()
ofVboMesh:haveIndicesChanged()
ofVboMesh:hasVertices()
ofVboMesh:hasColors()
ofVboMesh:hasNormals()
ofVboMesh:hasTexCoords()
ofVboMesh:hasIndices()
ofVboMesh:drawVertices()
ofVboMesh:drawWireframe()
ofVboMesh:drawFaces()
ofVboMesh:draw()
ofVboMesh:addVertex(ofVec3f)
ofVboMesh:setVertex(int,ofVec3f)
ofVboMesh:addNormal(ofVec3f)
ofVboMesh:setNormal(int,ofVec3f)
ofVboMesh:addColor(ofFloatColor)
ofVboMesh:setColor(int,ofFloatColor)
ofVboMesh:addTexCoord(ofVec2f)
ofVboMesh:setTexCoord(int,ofVec2f)

ofTexture()
ofTexture:allocate(int,int,int)
ofTexture:allocate(int,int,int,bool)
ofTexture:clear()
ofTexture:loadData(ofPixels)
ofTexture:loadScreenData(int,int,int,int)
ofTexture:setAnchorPercent(float,float)
ofTexture:setAnchorPoint(float,float)
ofTexture:resetAnchor()
ofTexture:readToPixels(ofPixels)
ofTexture:draw(ofRectangle)
ofTexture:draw(ofPoint)
ofTexture:draw(ofPoint, float, float)
ofTexture:draw(float,float)
ofTexture:draw(float,float,float)
ofTexture:draw(float,float,float,float)
ofTexture:draw(float,float,float,float,float)
ofTexture:bAllocated()
ofTexture:getCoordFromPoint(float,float)
ofTexture:getCoordFromPercent(float,float)
ofTexture:setTextureWrap(GLint,GLint)
ofTexture:setTextureMinMagFilter(GLint,GLint)
ofTexture:setCompression(ofTexCompression)
ofTexture:isAllocated()
ofTexture:getGlInternalFormat(ofPixels)
ofTexture:getGlFormatAndType(int,int,int)
ofTexture:getImageTypeFromGLType(int)
ofTexture:getGLPolyMode(ofPolyRenderMode)
ofTexture:getOFPolyMode(GLuint)
ofTexture:getGLPrimitiveMode(ofPolyRenderMode)

ofLight()
ofLight(ofLight)
ofLight:destroy()
ofLight:enable()
ofLight:disable()
ofLight:getIsEnabled()
ofLight:setDirectional()
ofLight:getIsDirectional()
ofLight:setSpotlight(float,float)
ofLight:getIsSpotlight()
ofLight:setSpotlightCutOff(float)
ofLight:setSpotConcentration(float)
ofLight:setPointLight()
ofLight:getIsPointLight()
ofLight:setAttenuation(float,float,float)
ofLight:getType()
ofLight:setAmbientColor(ofFloatColor)
ofLight:setDiffuseColor(ofFloatColor)
ofLight:setSpecularColor(ofFloatColor)
ofLight:getAmbientColor()
ofLight:getDiffuseColor()
ofLight:getSpecularColor()
ofLight:getLightID()
ofLight:customDraw()
ofLight:getPosition()
ofLight:getX()
ofLight:getY()
ofLight:getZ()
ofLight:getXAxis()
ofLight:getYAxis()
ofLight:getZAxis()
ofLight:getSideDir()
ofLight:getLookAtDir()
ofLight:getUpDir()
ofLight:getPitch()
ofLight:getHeading()
ofLight:getRoll()
ofLight:getOrientationQuat()
ofLight:getOrientationEuler()
ofLight:getScale()
ofLight:getLocalTransformMatrix()
ofLight:getGlobalTransformMatrix()
ofLight:getGlobalPosition()
ofLight:getGlobalOrientation()
ofLight:setTransformMatrix(ofMatrix4x4)
ofLight:setPosition(float,float,float)
ofLight:setPosition(ofVec3f)
ofLight:setGlobalPosition(float,float,float)
ofLight:setGlobalPosition(ofVec3f)
ofLight:setOrientation(ofQuaternion)
ofLight:setOrientation(ofVec3f)
ofLight:setGlobalOrientation(ofQuaternion)
ofLight:setScale(float,float,float)
ofLight:setScale(ofVec3f)
ofLight:move(float,float,float)
ofLight:move(ofVec3f)
ofLight:truck(float)
ofLight:boom(float)
ofLight:dolly(float)
ofLight:tilt(float)
ofLight:pan(float)
ofLight:roll(float)
ofLight:rotate(ofQuaternion)
ofLight:rotate(float,ofVec3f)
ofLight:rotate(float,float,float,float)
ofLight:rotateAround(ofQuaternion,ofVec3f)
ofLight:rotateAround(float,ofVec3f,ofVec3f)
ofLight:lookAt(ofVec3f,ofVec3f)
ofLight:orbit(float,float,float,ofVec3f)
ofLight:orbit(float,float,float,ofNode)

ofDirectory()
ofDirectory(string)
ofDirectory:open(string)
ofDirectory:close()
ofDirectory:create(bool)
ofDirectory:exists()
ofDirectory:path()
ofDirectory:isDirectory()
ofDirectory:isHidden()
ofDirectory:setWriteable(bool)
ofDirectory:setReadOnly(bool)
ofDirectory:setExecutable(bool)
ofDirectory:setShowHidden(bool)
ofDirectory:copyTo(string,bool,bool)
ofDirectory:moveTo(string,bool,bool)
ofDirectory:renameTo(string,bool,bool)
ofDirectory:remove(bool)
ofDirectory:allowExt(string)
ofDirectory:listDir(string)
ofDirectory:listDir()
ofDirectory:getName(unsigned int)
ofDirectory:getPath(unsigned int)
ofDirectory:getFile(unsigned int,ofFile)
ofDirectory:getFiles()
ofDirectory:getShowHidden()
ofDirectory:reset()
ofDirectory:sort()
ofDirectory:size()
ofDirectory:numFiles()
ofDirectory:createDirectory(string,bool,bool)
ofDirectory:isDirectoryEmpty(string,bool)
ofDirectory:doesDirectoryExist(string,bool)
ofDirectory:removeDirectory(string,bool,bool)
ofDirectory:getFile(unsigned int,ofFile)

ofHttpResponse()
ofHttpResponse(ofHttpRequest,ofBuffer,int,string)
ofHttpResponse(ofHttpRequest,int,string)

ofFileDialogResult()
ofFileDialogResult:getName()
ofFileDialogResult:getPath()

ofSystemAlertDialog(string)

ofBuffer()
ofBuffer(string)
ofBuffer(ofBuffer)
ofBuffer:set(string)
ofBuffer:set(istream)
ofBuffer:writeTo(ostream)
ofBuffer:clear()
ofBuffer:allocate(long)
ofBuffer:setBinaryBuffer(int,char)
ofBuffer:getBinaryBuffer(int)
ofBuffer:getBinaryBuffer()
ofBuffer:getText()
ofBuffer:size()
ofBuffer:getNextLine()
ofBuffer:getFirstLine()
ofBuffer:isLastLine()
ofBuffer:resetLineReader()

ofFile()
ofFile(ofFile)
ofFile:openFile) 
ofFile:close()
ofFile:create()
ofFile:exists()
ofFile:path()
ofFile:getExtension()
ofFile:getFileName()
ofFile:getBaseName()
ofFile:getEnclosingDirectory()
ofFile:getAbsolutePath()
ofFile:canRead()
ofFile:canWrite()
ofFile:canExecute()
ofFile:isFile()
ofFile:isLink()
ofFile:isDirectory()
ofFile:isDevice()
ofFile:isHidden()
ofFile:setWriteable(bool)
ofFile:setReadOnly(bool)
ofFile:setExecutable(bool)
ofFile:copyTo(string,bool,bool)
ofFile:moveTo(string,bool,bool)
ofFile:renameTo(string,bool,bool)
ofFile:remove(bool)
ofFile:getSize()
ofFile:readToBuffer()
ofFile:writeFromBuffer(ofBuffer)
ofFile:copyFromTo(string,string,bool,bool)
ofFile:moveFromTo(string,string,bool,bool)
ofFile:doesFileExist(string,bool)
ofFile:removeFile(string,bool)

ofHttpRequest()
ofHttpRequest(string,string,bool)
ofHttpRequest:getID()

ofThread()
ofThread:isThreadRunning()
ofThread:startThread(bool,bool)
ofThread:lock()
ofThread:unlock()
ofThread:stopThread(bool)
ofThread:waitForThread(bool)

ofURLFileLoader()
ofURLFileLoader:get(string)
ofURLFileLoader:getAsync(string,string)
ofURLFileLoader:saveTo(string,string)
ofURLFileLoader:saveAsync(string,string)
ofURLFileLoader:remove(int)
ofURLFileLoader:clear()

ofVideoPlayer()
ofVideoPlayer:loadMovie(string)
ofVideoPlayer:closeMovie()
ofVideoPlayer:close()
ofVideoPlayer:update()
ofVideoPlayer:idleMovie()
ofVideoPlayer:play()
ofVideoPlayer:stop()
ofVideoPlayer:isFrameNew()
ofVideoPlayer:getPixels()
ofVideoPlayer:getPosition()
ofVideoPlayer:getSpeed()
ofVideoPlayer:getDuration()
ofVideoPlayer:getIsMovieDone()
ofVideoPlayer:setPosition(float)
ofVideoPlayer:setVolume(int)
ofVideoPlayer:setLoopState(ofLoopType)
ofVideoPlayer:getLoopState()
ofVideoPlayer:setSpeed(float)
ofVideoPlayer:setFrame(int)
ofVideoPlayer:setUseTexture(bool)
ofVideoPlayer:getTextureReference()
ofVideoPlayer:draw(float,float)
ofVideoPlayer:draw(float,float,float,float)
ofVideoPlayer:draw(ofPoint)
ofVideoPlayer:draw(ofRectangle)
ofVideoPlayer:setAnchorPercent(float,float)
ofVideoPlayer:setAnchorPoint(float,float)
ofVideoPlayer:resetAnchor()
ofVideoPlayer:setPaused(bool)
ofVideoPlayer:getCurrentFrame()
ofVideoPlayer:getTotalNumFrames()
ofVideoPlayer:firstFrame()
ofVideoPlayer:nextFrame()
ofVideoPlayer:previousFrame()
ofVideoPlayer:getHeight()
ofVideoPlayer:getWidth()
ofVideoPlayer:isPaused()
ofVideoPlayer:isLoaded()
ofVideoPlayer:isPlaying()

ofVideoGrabber()
ofVideoGrabber:isFrameNew()
ofVideoGrabber:update()
ofVideoGrabber:close()
ofVideoGrabber:initGrabber(int,int)
ofVideoGrabber:setPixelFormat(ofPixelFormat)
ofVideoGrabber:getPixelFormat()
ofVideoGrabber:videoSettings()
ofVideoGrabber:getPixels()
ofVideoGrabber:getPixelsRef()
ofVideoGrabber:getTextureReference()
ofVideoGrabber:setVerbose(bool)
ofVideoGrabber:setDeviceID(int)
ofVideoGrabber:setDesiredFrameRate(int)
ofVideoGrabber:setUseTexture(bool)
ofVideoGrabber:draw(float,float,float,float)
ofVideoGrabber:draw(float,float)
ofVideoGrabber:setAnchorPercent(float,float)
ofVideoGrabber:setAnchorPoint(float,float)
ofVideoGrabber:resetAnchor()
ofVideoGrabber:getWidth()
ofVideoGrabber:getHeight()
ofVideoGrabber:isInitialized()

ofPath()
ofPath:clear()
ofPath:newSubPath()
ofPath:close()
ofPath:lineTo(ofPoint)
ofPath:lineTo(float,float,float)
ofPath:moveTo(ofPoint)
ofPath:moveTo(float,float,float)
ofPath:curveTo(ofPoint)
ofPath:curveTo(float,float)
ofPath:curveTo(float,float,float)
ofPath:bezierTo(ofPoint,ofPoint,ofPoint)
ofPath:bezierTo(float,float,float,float,float,float)
ofPath:bezierTo(float,float,float,float,float,float,float,float,float)
ofPath:quadBezierTo(ofPoint,ofPoint,ofPoint)
ofPath:quadBezierTo(float,float,float,float,float,float)
ofPath:quadBezierTo(float,float,float,float,float,float,float,float,float)
ofPath:arc(ofPoint,float,float,float,float)
ofPath:arc(float,float,float,float,float,float)
ofPath:arc(float,float,float,float,float,float,float)
ofPath:setPolyWindingMode(ofPolyWindingMode)
ofPath:setFilled(bool)
ofPath:setStrokeWidth(float)
ofPath:setColor(ofColor)
ofPath:setHexColor(int)
ofPath:setFillColor(ofColor)
ofPath:setFillHexColor(int)
ofPath:setStrokeColor(ofColor)
ofPath:setStrokeHexColor(int)
ofPath:getWindingMode()
ofPath:isFilled()
ofPath:getFillColor()
ofPath:getStrokeColor()
ofPath:getStrokeWidth()
ofPath:hasOutline()
ofPath:draw(float,float)
ofPath:draw()
ofPath:getOutline()
ofPath:getTessellation()
ofPath:simplify(float)
ofPath:flagShapeChanged()
ofPath:setCurveResolution(int)
ofPath:getCurveResolution()
ofPath:setArcResolution(int)
ofPath:getArcResolution()
ofPath:setUseShapeColor(bool)
ofPath:getUseShapeColor()
ofPath:tessellate()
ofPath:translate(ofPoint)
ofPath:rotate(float,ofVec3f)
ofPath:scale(float,float)

ofImage()
ofImage(string)
ofImage:allocate(int,int,int)
ofImage:clear()
ofImage:clone(ofImage)
ofImage:setUseTexture(bool)
ofImage:getTextureReference()
ofImage:loadImage(string)
ofImage:saveImage(string, ofImageQualityType)
ofImage:saveImageBuffer(ofBuffer, ofImageQualityType)
ofImage:getPixels()
ofImage:getPixelsRef()
ofImage:setFromPixels(ofPixels)
ofImage:setImageType(int)
ofImage:resize(int,int)
ofImage:grabScreen(int,int,int,int)
ofImage:update()
ofImage:draw(float,float)
ofImage:draw(float,float,float,float)
ofImage:getWidth()
ofImage:getHeight()
ofImage:getColor(int,int)
ofImage:setColor(int,int,ofColor)
ofImage:setImageType(ofImageType)
ofImage:crop(int,int,int,int)
ofImage:cropFrom(ofImage,int,int,int,int)
ofImage:rotate90(int)
ofImage:mirror(bool,bool)
ofImage:setAnchorPoint(float,float)
ofImage:draw(ofRectangle)
ofImage:draw(ofPoint,float,float)
ofImage:draw(float,float,float)
ofImage:draw(ofPoint)
ofImage:draw(float,float,float,float,float)
ofImage:bAllocated(bool)
ofImage:reloadTexture()

ofFloatImage()
ofFloatImage(string)
ofFloatImage:allocate(int,int,int)
ofFloatImage:clear()
ofFloatImage:clone(ofFloatImage)
ofFloatImage:setUseTexture(bool)
ofFloatImage:getTextureReference()
ofFloatImage:loadImage(string)
ofFloatImage:saveImage(string, ofImageQualityType)
ofFloatImage:saveImageBuffer(ofBuffer, ofImageQualityType)
ofFloatImage:getPixels()
ofFloatImage:setFromPixels(ofPixels)
ofFloatImage:setImageType(int)
ofFloatImage:resize(int,int)
ofFloatImage:grabScreen(int,int,int,int)
ofFloatImage:update()
ofFloatImage:draw(float,float)
ofFloatImage:draw(float,float,float,float)
ofFloatImage:getWidth()
ofFloatImage:getHeight()
ofFloatImage:getColor(int,int)
ofFloatImage:setColor(int,int,ofColor)
ofFloatImage:setImageType(ofImageType)
ofFloatImage:crop(int,int,int,int)
ofFloatImage:cropFrom(ofFloatImage,int,int,int,int)
ofFloatImage:rotate90(int)
ofFloatImage:mirror(bool,bool)
ofFloatImage:setAnchorPoint(float,float)
ofFloatImage:draw(ofRectangle)
ofFloatImage:draw(ofPoint,float,float)
ofFloatImage:draw(float,float,float)
ofFloatImage:draw(ofPoint)
ofFloatImage:draw(float,float,float,float,float)
ofFloatImage:bAllocated(bool)
ofFloatImage:reloadTexture()

ofPixels()
ofPixels:allocate(int,int,int)
ofPixels:set(unsigned char)
ofPixels:setFromPixels(unsigned char*,int,int,int)
ofPixels:setFromPixels(unsigned char*,int,int,ofImageType)
ofPixels:setFromExternalPixels(unsigned char*,int,int,int)
ofPixels:setFromAlignedPixels(unsigned char*,int,int,int,int)
ofPixels:swapRgb()
ofPixels:clear()
ofPixels:getPixels()
ofPixels:getPixelIndex(int,int)
ofPixels:getColor(int,int)
ofPixels:setColor(int,int,ofColor)
ofPixels:isAllocated()
ofPixels:getWidth()
ofPixels:getHeight()
ofPixels:getBytesPerPixel()
ofPixels:getBitsPerPixel()
ofPixels:getImageType()
ofPixels:crop(int,int,int,int)
ofPixels:rotate90(int)
ofPixels:mirror(bool,bool)
ofPixels:resize(int,int)

ofTrueTypeFont()
ofTrueTypeFont:loadFont(string,int)
ofTrueTypeFont:loadFont(string,int,bool,bool)
ofTrueTypeFont:loadFont(string,int,bool,bool,bool)
ofTrueTypeFont:loadFont(string,int,bool,bool,bool,float,float)
ofTrueTypeFont:getLineHeight()
ofTrueTypeFont:setLineHeight(float)
ofTrueTypeFont:stringWidth(string)
ofTrueTypeFont:stringHeight(string)
ofTrueTypeFont:getStringBoundingBox(string,float,float)
ofTrueTypeFont:drawString(string,float,float)
ofTrueTypeFont:drawStringAsShapes(string,float,float)
ofTrueTypeFont:isLoaded()
ofTrueTypeFont:isAntiAliased()
ofTrueTypeFont:hasFullCharacterSet()
ofTrueTypeFont:getSize()
ofTrueTypeFont:getLetterSpacing()
ofTrueTypeFont:setLetterSpacing(float)
ofTrueTypeFont:getSpaceSize()
ofTrueTypeFont:setSpaceSize(float)
ofTrueTypeFont:getNumCharacters()
ofTrueTypeFont:getCharacterAsPoints(int)
ofTrueTypeFont:getStringAsPoints(string)
ofTrueTypeFont:bind()
ofTrueTypeFont:unbind()

ofPolyline()
ofPolyline:clear()
ofPolyline:addVertex(float,float,float)
ofPolyline:addVertexes(vector<ofPoint>)
ofPolyline:lineTo(ofPoint)
ofPolyline:lineTo(float,float,float)
ofPolyline:arc(ofPoint,float,float,float,float,int)
ofPolyline:arc(float,float,float,float,float,float,int)
ofPolyline:arc(float,float,float,float,float,float,float,int)
ofPolyline:curveTo(ofPoint,int)
ofPolyline:curveTo(float,float,float,int) 
ofPolyline:bezierTo(ofPoint,ofPoint,ofPoint,int)
ofPolyline:bezierTo(float,float,float,float,float,float,int)
ofPolyline:bezierTo(float,float,float,float,float,float,float,float,float,int)
ofPolyline:quadBezierTo(ofPoint,ofPoint,ofPoint,int)
ofPolyline:quadBezierTo(float,float,float,float,float,float,int)
ofPolyline:quadBezierTo(float,float,float,float,float,float,float,float,float,int)
ofPolyline:getSmoothed(int,float) 
ofPolyline:getResampledBySpacing(float) 
ofPolyline:getResampledByCount(int) 
ofPolyline:getBoundingBox()
ofPolyline:getClosestPoint
ofPolyline:simplify(float)
ofPolyline:size()
ofPolyline:resize(size_t)
ofPolyline:setClosed(bool)
ofPolyline:isClosed()
ofPolyline:close()
ofPolyline:hasChanged()
ofPolyline:getVertices()
ofPolyline:getPerimeter()
ofPolyline:draw()

ofTessellator()
ofTessellator(ofTessellator)

ofColor()
ofColor(float,float,float,float)
ofColor(ofColor)
ofColor(ofColor,float)
ofColor(float,float)
ofColor:getHex()
ofColor:clamp()
ofColor:invert()
ofColor:normalize()
ofColor:getClamped()
ofColor:getInverted()
ofColor:getNormalized()
ofColor:getHue()
ofColor:getSaturation()
ofColor:getBrightness()
ofColor:getLightness()
ofColor:setHue(float)
ofColor:setSaturation(float)
ofColor:setBrightness(float)
ofColor:setHsb(float,float,float,float)
ofColor:setHsb(float,float,float)
ofColor:set(float,float,float,float)
ofColor:set(float,float)
ofColor:set(ofColor const)
ofColor:setHex(int,float)
ofColor:lerp(ofColor, float)
ofColor:getLerped(ofColor, float)
ofColor:getHsb(float,float,float)

ofFloatColor()
ofFloatColor(float,float,float,float)
ofFloatColor(ofFloatColor)
ofFloatColor(ofFloatColor,float)
ofFloatColor(float,float)
ofFloatColor:getHex()
ofFloatColor:clamp()
ofFloatColor:invert()
ofFloatColor:normalize()
ofFloatColor:getClamped()
ofFloatColor:getInverted()
ofFloatColor:getNormalized()
ofFloatColor:getHue()
ofFloatColor:getSaturation()
ofFloatColor:getBrightness()
ofFloatColor:getLightness()
ofFloatColor:setHue(float)
ofFloatColor:setSaturation(float)
ofFloatColor:setBrightness(float)
ofFloatColor:setHsb(float,float,float,float)
ofFloatColor:setHsb(float,float,float)
ofFloatColor:set(float,float,float,float)
ofFloatColor:set(float,float)
ofFloatColor:set(ofFloatColor const)
ofFloatColor:setHex(int,float)
ofFloatColor:lerp(ofFloatColor, float)
ofFloatColor:getLerped(ofFloatColor, float)
ofFloatColor:getHsb(float,float,float)

ofShortColor()
ofShortColor(float,float,float,float)
ofShortColor(ofShortColor)
ofShortColor(ofShortColor,float)
ofShortColor(float,float)
ofShortColor:getHex()
ofShortColor:clamp()
ofShortColor:invert()
ofShortColor:normalize()
ofShortColor:getClamped()
ofShortColor:getInverted()
ofShortColor:getNormalized()
ofShortColor:getHue()
ofShortColor:getSaturation()
ofShortColor:getBrightness()
ofShortColor:getLightness()
ofShortColor:setHue(float)
ofShortColor:setSaturation(float)
ofShortColor:setBrightness(float)
ofShortColor:setHsb(float,float,float,float)
ofShortColor:setHsb(float,float,float)
ofShortColor:set(float,float,float,float)
ofShortColor:set(float,float)
ofShortColor:set(ofShortColor const)
ofShortColor:setHex(int,float)
ofShortColor:lerp(ofShortColor, float)
ofShortColor:getLerped(ofShortColor, float)
ofShortColor:getHsb(float,float,float)

ofStyle()

ofRectangle()
ofRectangle(float,float,float,float)
ofRectangle(ofRectangle)
ofRectangle:set(float,float,float,float)
ofRectangle:set(ofPoint,float,float)
ofRectangle:set(ofRectangle)
ofRectangle:setX(float)
ofRectangle:setY(float)
ofRectangle:setWidth(float)
ofRectangle:setHeight(float)
ofRectangle:setPosition(float,float)
ofRectangle:setPosition(ofPoint)
ofRectangle:setFromCenter(float,float,float,float)
ofRectangle:setFromCenter(ofPoint,float,float)
ofRectangle:translate(float,float)
ofRectangle:translate(ofPoint)
ofRectangle:translateX(float)
ofRectangle:translateY(float)
ofRectangle:scale(float)
ofRectangle:scale(float,float)
ofRectangle:scale(ofPoint)
ofRectangle:scaleWidth(float)
ofRectangle:scaleHeight(float)
ofRectangle:scaleFromCenter(float)
ofRectangle:scaleFromCenter(float,float)
ofRectangle:scaleFromCenter(ofPoint)
ofRectangle:scaleTo(ofRectangle,ofScaleMode)
ofRectangle:scaleTo(ofRectangle,ofAspectRatioMode,ofAlignHorz,ofAlignVert)
ofRectangle:scaleTo(ofRectangle,ofAspectRatioMode,ofAlignHorz,ofAlignVert,ofAlignHorz,ofAlignVert)
ofRectangle:alignToHorz(float,ofAlignHorz)
ofRectangle:alignToHorz(ofRectangle,ofAlignHorz)
ofRectangle:alignToHorz(ofRectangle,ofAlignHorz,ofAlignHorz)
ofRectangle:alignToVert(float,ofAlignVert)
ofRectangle:alignToVert(ofRectangle,ofAlignVert)
ofRectangle:alignToVert(ofRectangle,ofAlignVert,ofAlignVert)
ofRectangle:alignTo(ofPoint,ofAlignHorz,ofAlignVert)
ofRectangle:alignTo(ofRectangle,ofAlignHorz,ofAlignVert)
ofRectangle:alignTo(ofRectangle,ofAlignHorz,ofAlignVert,ofAlignHorz,ofAlignVert)
ofRectangle:growToInclude(float,float)
ofRectangle:growToInclude(ofPoint)
ofRectangle:growToInclude(ofRectangle)
ofRectangle:growToInclude(ofPoint,ofPoint)
ofRectangle:getIntersection(ofRectangle)
ofRectangle:getUnion(ofRectangle)
ofRectangle:standardize()
ofRectangle:getStandardized()
ofRectangle:isStandardized()
ofRectangle:getArea()
ofRectangle:getPerimeter()
ofRectangle:getAspectRatio()
ofRectangle:isEmpty()
ofRectangle:getMin()
ofRectangle:getMax()
ofRectangle:getMinX()
ofRectangle:getMaxX()
ofRectangle:getMinY()
ofRectangle:getMaxY()
ofRectangle:getLeft()
ofRectangle:getRight()
ofRectangle:getTop()
ofRectangle:getBottom()
ofRectangle:getTopLeft()
ofRectangle:getTopRight()
ofRectangle:getBottomLeft()
ofRectangle:getBottomRight()
ofRectangle:getHorzAnchor(ofAlignHorz)
ofRectangle:getVertAnchor(ofAlignVert)
ofRectangle:getPosition()
ofRectangle:getCenter()
ofRectangle:getX()
ofRectangle:getY()
ofRectangle:getWidth()
ofRectangle:getHeight()

ofSoundPlayer()
ofSoundPlayer:loadSound(string,bool)
ofSoundPlayer:unloadSound()
ofSoundPlayer:play()
ofSoundPlayer:stop()
ofSoundPlayer:setVolume(float)
ofSoundPlayer:setPan(float)
ofSoundPlayer:setSpeed(float)
ofSoundPlayer:setPaused(bool)
ofSoundPlayer:setLoop(bool)
ofSoundPlayer:setMultiPlay(bool)
ofSoundPlayer:setPosition(float)
ofSoundPlayer:setPositionMS(int)
ofSoundPlayer:getPositionMS()
ofSoundPlayer:getPosition()
ofSoundPlayer:getIsPlaying()
ofSoundPlayer:getSpeed()
ofSoundPlayer:getPan()
ofSoundPlayer:getVolume()
ofSoundPlayer:isLoaded()

ofSerial()
ofSerial:listDevices()
ofSerial:close()
ofSerial:setup()
ofSerial:setup(string,int)
ofSerial:setup(int,int)
ofSerial:readBytes(unsigned char*,int)
ofSerial:writeBytes(unsigned char*,int)
ofSerial:writeByte(unsigned char)
ofSerial:readByte()
ofSerial:flush(bool,bool)
ofSerial:available()
ofSerial:drain()

ofx3DBaseLoader()
ofx3DBaseLoader:loadModel(string,float)
ofx3DBaseLoader:loadModel(string)
ofx3DBaseLoader:draw()

ofx3DModelLoader()
ofx3DModelLoader:loadModel(string,float)
ofx3DModelLoader:setPosition(float,float,float)
ofx3DModelLoader:setScale(float,float,float)
ofx3DModelLoader:setRotation(int,float,float,float,float)
ofx3DModelLoader:draw()

ofxAssimpModelLoader()
ofxAssimpModelLoader:loadModel(string,bool)
ofxAssimpModelLoader:loadModel
ofxAssimpModelLoader:createEmptyModel()
ofxAssimpModelLoader:createLightsFromAiModel()
ofxAssimpModelLoader:optimizeScene()
ofxAssimpModelLoader:update()
ofxAssimpModelLoader:hasAnimations()
ofxAssimpModelLoader:getAnimationCount()
ofxAssimpModelLoader:getAnimation(int)
ofxAssimpModelLoader:playAllAnimations()
ofxAssimpModelLoader:stopAllAnimations()
ofxAssimpModelLoader:resetAllAnimations()
ofxAssimpModelLoader:setPausedForAllAnimations(bool)
ofxAssimpModelLoader:setLoopStateForAllAnimations(ofLoopType)
ofxAssimpModelLoader:setPositionForAllAnimations(float)
ofxAssimpModelLoader:hasMeshes()
ofxAssimpModelLoader:getMeshCount()
ofxAssimpModelLoader:getMeshHelper(int)
ofxAssimpModelLoader:clear()
ofxAssimpModelLoader:setScale(float,float,float)
ofxAssimpModelLoader:setPosition(float,float,float)
ofxAssimpModelLoader:setRotation(int,float,float,float,float)
ofxAssimpModelLoader:setScaleNomalization(bool)
ofxAssimpModelLoader:setNormalizationFactor(float)
ofxAssimpModelLoader:getNumMeshes()
ofxAssimpModelLoader:getMesh(string)
ofxAssimpModelLoader:getMesh(int)
ofxAssimpModelLoader:getCurrentAnimatedMesh(string)
ofxAssimpModelLoader:getCurrentAnimatedMesh(int)
ofxAssimpModelLoader:getMaterialForMesh(string)
ofxAssimpModelLoader:getMaterialForMesh(int)
ofxAssimpModelLoader:getTextureForMesh(string)
ofxAssimpModelLoader:getTextureForMesh(int)
ofxAssimpModelLoader:drawWireframe()
ofxAssimpModelLoader:drawFaces()
ofxAssimpModelLoader:drawVertices()
ofxAssimpModelLoader:enableTextures()
ofxAssimpModelLoader:disableTextures()
ofxAssimpModelLoader:enableNormals()
ofxAssimpModelLoader:enableMaterials()
ofxAssimpModelLoader:disableNormals()
ofxAssimpModelLoader:enableColors()
ofxAssimpModelLoader:disableColors()
ofxAssimpModelLoader:disableMaterials()
ofxAssimpModelLoader:draw(ofPolyRenderMode)
ofxAssimpModelLoader:getPosition()
ofxAssimpModelLoader:getSceneCenter()
ofxAssimpModelLoader:getNormalizedScale()
ofxAssimpModelLoader:getScale()
ofxAssimpModelLoader:getModelMatrix()
ofxAssimpModelLoader:getSceneMin(bool)
ofxAssimpModelLoader:getSceneMax(bool)
ofxAssimpModelLoader:getNumRotations()
ofxAssimpModelLoader:getRotationAxis(int)
ofxAssimpModelLoader:getRotationAngle(int)
ofxAssimpModelLoader:calculateDimensions()

ofxTCPClient()
ofxTCPClient:setVerbose(bool)
ofxTCPClient:setup(string,int,bool)
ofxTCPClient:setMessageDelimiter(string)
ofxTCPClient:close()
ofxTCPClient:send(string)
ofxTCPClient:sendRaw(string)
ofxTCPClient:getNumReceivedBytes()
ofxTCPClient:sendRawBytes(char*, int)
ofxTCPClient:receive()
ofxTCPClient:receiveRaw()
ofxTCPClient:receiveRawBytes(char*,int)
ofxTCPClient:isConnected()
ofxTCPClient:getPort()
ofxTCPClient:getIP()
ofxTCPClient:setup(int,bool)

ofxUDPManager()
ofxUDPManager:Close()
ofxUDPManager:Create()
ofxUDPManager:Connect(char*,unsigned short)
ofxUDPManager:ConnectMcast(char*,unsigned short)
ofxUDPManager:Bind(unsigned short)
ofxUDPManager:BindMcast(char*,unsigned short)
ofxUDPManager:Send(char*,int)
ofxUDPManager:SendAll(char*,int)
ofxUDPManager:Receive(char*,int)
ofxUDPManager:SetTimeoutSend(int)
ofxUDPManager:SetTimeoutReceive(int)
ofxUDPManager:GetTimeoutSend()
ofxUDPManager:GetTimeoutReceive()
ofxUDPManager:GetRemoteAddr
ofxUDPManager:SetReceiveBufferSize(int)
ofxUDPManager:SetSendBufferSize(int)
ofxUDPManager:GetReceiveBufferSize()
ofxUDPManager:GetSendBufferSize()
ofxUDPManager:SetReuseAddress(bool)
ofxUDPManager:SetEnableBroadcast(bool)
ofxUDPManager:SetNonBlocking(bool)
ofxUDPManager:GetMaxMsgSize()
ofxUDPManager:GetTTL()
ofxUDPManager:SetTTL(int)

ofxTCPManager()
ofxTCPManager:Close()
ofxTCPManager:Create()
ofxTCPManager:Listen(int)
ofxTCPManager:Connect(char*,unsigned short)
ofxTCPManager:Bind(unsigned short)
ofxTCPManager:Accept(ofxTCPManager)
ofxTCPManager:Send(char*,int)
ofxTCPManager:SendAll(char*,int)
ofxTCPManager:Receive(char*,int)
ofxTCPManager:ReceiveAll(char*,int)
ofxTCPManager:Write(char*,int)
ofxTCPManager:SetTimeoutSend(int)
ofxTCPManager:SetTimeoutReceive(int)
ofxTCPManager:SetTimeoutAccept(int)
ofxTCPManager:GetTimeoutSend()
ofxTCPManager:GetTimeoutReceive()
ofxTCPManager:GetTimeoutAccept()
ofxTCPManager:SetReceiveBufferSize(int)
ofxTCPManager:SetSendBufferSize(int)
ofxTCPManager:GetReceiveBufferSize()
ofxTCPManager:GetSendBufferSize()
ofxTCPManager:GetMaxConnections()
ofxTCPManager:SetNonBlocking(bool)
ofxTCPManager:CheckHost
ofxTCPManager:CleanUp()

ofxTCPServer()
ofxTCPServer:setVerbose(bool)
ofxTCPServer:setup(int,bool)
ofxTCPServer:setMessageDelimiter(string)
ofxTCPServer:close()
ofxTCPServer:disconnectClient(int)
ofxTCPServer:getNumClients()
ofxTCPServer:getLastID()
ofxTCPServer:getPort()
ofxTCPServer:isConnected()
ofxTCPServer:getClientPort(int)
ofxTCPServer:getClientIP(int)
ofxTCPServer:isClientSetup(int)
ofxTCPServer:isClientConnected(int)
ofxTCPServer:send(int,string)
ofxTCPServer:sendToAll(string)
ofxTCPServer:sendRawBytes(int, char*, int)
ofxTCPServer:sendRawBytesToAll(char*, int)
ofxTCPServer:getNumReceivedBytes(int)
ofxTCPServer:receive(int)
ofxTCPServer:receiveRawBytes(int, char*, int)

ofxCvColorImage()
ofxCvColorImage(ofxCvColorImage)
ofxCvColorImage:allocate(int,int)
ofxCvColorImage:clear()
ofxCvColorImage:getCvImage()
ofxCvColorImage:getWidth()
ofxCvColorImage:getHeight()
ofxCvColorImage:setUseTexture(bool)
ofxCvColorImage:getTextureReference()
ofxCvColorImage:flagImageChanged()
ofxCvColorImage:setROI(int,int,int,int)
ofxCvColorImage:setROI(ofRectangle)
ofxCvColorImage:getROI()
ofxCvColorImage:resetROI()
ofxCvColorImage:getIntersectionROI(ofRectangle,ofRectangle)
ofxCvColorImage:setFromPixels(ofPixels)
ofxCvColorImage:setRoiFromPixels(ofPixels)
ofxCvColorImage:updateTexture()
ofxCvColorImage:draw(float,float)
ofxCvColorImage:draw(float,float,float,float)
ofxCvColorImage:draw(ofRectangle)
ofxCvColorImage:drawROI(float,float)
ofxCvColorImage:drawROI(float,float,float,float)
ofxCvColorImage:setAnchorPercent(float,float)
ofxCvColorImage:setAnchorPoint(float,float)
ofxCvColorImage:resetAnchor()
ofxCvColorImage:erode()
ofxCvColorImage:dilate()
ofxCvColorImage:blur(int)
ofxCvColorImage:blurGaussian(int)
ofxCvColorImage:invert()
ofxCvColorImage:mirror(bool,bool)
ofxCvColorImage:translate(float,float)
ofxCvColorImage:rotate(float,float,float)
ofxCvColorImage:scale(float,float)
ofxCvColorImage:transform(float,float,float,float,float,float,float)
ofxCvColorImage:undistort(float,float,float,float,float,float,float,float)
ofxCvColorImage:warpPerspective(ofPoint,ofPoint,ofPoint,ofPoint)
ofxCvColorImage:warpIntoMe(ofxCvImage,ofPoint,ofPoint)
ofxCvColorImage:countNonZeroInRegion(int,int,int,int)
ofxCvColorImage:set(float)
ofxCvColorImage:set(int,int,int)
ofxCvColorImage:setFromGrayscalePlanarImages(ofxCvGrayscaleImage,ofxCvGrayscaleImage,ofxCvGrayscaleImage)
ofxCvColorImage:convertToGrayscalePlanarImages(ofxCvGrayscaleImage,ofxCvGrayscaleImage,ofxCvGrayscaleImage)
ofxCvColorImage:convertToGrayscalePlanarImages(ofxCvGrayscaleImage,int)
ofxCvColorImage:contrastStretch()
ofxCvColorImage:convertToRange(float,float)
ofxCvColorImage:resize(int,int)
ofxCvColorImage:scaleIntoMeColor)
ofxCvColorImage:convertRgbToHsv()
ofxCvColorImage:convertHsvToRgb()

ofxCvContourFinder()
ofxCvContourFinder:getWidth()
ofxCvContourFinder:getHeight()
ofxCvContourFinder:gaFindContours)
ofxCvContourFinder:draw()
ofxCvContourFinder:draw(float,float)
ofxCvContourFinder:draw(float,float,float,float)
ofxCvContourFinder:draw(ofPoint)
ofxCvContourFinder:draw(ofRectangle)
ofxCvContourFinder:setAnchorPercent(float,float)
ofxCvContourFinder:setAnchorPoint(int,int)
ofxCvContourFinder:resetAnchor()

ofxCvFloatImage()
ofxCvFloatImage(ofxCvFloatImage)
ofxCvFloatImage:allocate(int,int)
ofxCvFloatImage:clear()
ofxCvFloatImage:getCvImage()
ofxCvFloatImage:getWidth()
ofxCvFloatImage:getHeight()
ofxCvFloatImage:setUseTexture(bool)
ofxCvFloatImage:getTextureReference()
ofxCvFloatImage:flagImageChanged()
ofxCvFloatImage:setROI(int,int,int,int)
ofxCvFloatImage:setROI(ofRectangle)
ofxCvFloatImage:getROI()
ofxCvFloatImage:resetROI()
ofxCvFloatImage:getIntersectionROI(ofRectangle,ofRectangle)
ofxCvFloatImage:setFromPixels(unsigned char*,int,int)
ofxCvFloatImage:setFromPixels(float*,int,int)
ofxCvFloatImage:setRoiFromPixels(unsigned char*,int,int)
ofxCvFloatImage:setRoiFromPixels(float*,int,int)
ofxCvFloatImage:updateTexture()
ofxCvFloatImage:draw(float,float)
ofxCvFloatImage:draw(float,float,float,float)
ofxCvFloatImage:draw(ofRectangle)
ofxCvFloatImage:drawROI(float,float)
ofxCvFloatImage:drawROI(float,float,float,float)
ofxCvFloatImage:setAnchorPercent(float,float)
ofxCvFloatImage:setAnchorPoint(float,float)
ofxCvFloatImage:resetAnchor()
ofxCvFloatImage:erode()
ofxCvFloatImage:dilate()
ofxCvFloatImage:blur(int)
ofxCvFloatImage:blurGaussian(int)
ofxCvFloatImage:invert()
ofxCvFloatImage:mirror(bool,bool)
ofxCvFloatImage:translate(float,float)
ofxCvFloatImage:rotate(float,float,float)
ofxCvFloatImage:scale(float,float)
ofxCvFloatImage:transform(float,float,float,float,float,float,float)
ofxCvFloatImage:undistort(float,float,float,float,float,float,float,float)
ofxCvFloatImage:warpPerspective(ofPoint,ofPoint,ofPoint,ofPoint)
ofxCvFloatImage:warpIntoMe(ofxCvImage,ofPoint,ofPoint)
ofxCvFloatImage:countNonZeroInRegion(int,int,int,int)
ofxCvFloatImage:set(float)
ofxCvFloatImage:addWeighted(ofxCvGrayscaleImage,float)
ofxCvFloatImage:getPixelsAsFloats()
ofxCvFloatImage:getFloatPixelsRef()
ofxCvFloatImage:getRoiPixelsAsFloats()
ofxCvFloatImage:getRoiFloatPixelsRef()
ofxCvFloatImage:contrastStretch()
ofxCvFloatImage:convertToRange(float,float)
ofxCvFloatImage:resize(int,int)

ofxCvGrayscaleImage()
ofxCvGrayscaleImage(ofxCvGrayscaleImage)
ofxCvGrayscaleImage:allocate(int,int)
ofxCvGrayscaleImage:clear()
ofxCvGrayscaleImage:getCvImage()
ofxCvGrayscaleImage:getWidth()
ofxCvGrayscaleImage:getHeight()
ofxCvGrayscaleImage:setUseTexture(bool)
ofxCvGrayscaleImage:getTextureReference()
ofxCvGrayscaleImage:flagImageChanged()
ofxCvGrayscaleImage:setROI(int,int,int,int)
ofxCvGrayscaleImage:setROI(ofRectangle)
ofxCvGrayscaleImage:getROI()
ofxCvGrayscaleImage:resetROI()
ofxCvGrayscaleImage:getIntersectionROI(ofRectangle,ofRectangle)
ofxCvGrayscaleImage:setFromPixels(ofPixels)
ofxCvGrayscaleImage:setRoiFromPixels(ofPixels)
ofxCvGrayscaleImage:updateTexture()
ofxCvGrayscaleImage:draw(float,float)
ofxCvGrayscaleImage:draw(float,float,float,float)
ofxCvGrayscaleImage:draw(ofRectangle)
ofxCvGrayscaleImage:drawROI(float,float)
ofxCvGrayscaleImage:drawROI(float,float,float,float)
ofxCvGrayscaleImage:setAnchorPercent(float,float)
ofxCvGrayscaleImage:setAnchorPoint(float,float)
ofxCvGrayscaleImage:resetAnchor()
ofxCvGrayscaleImage:erode()
ofxCvGrayscaleImage:dilate()
ofxCvGrayscaleImage:blur(int)
ofxCvGrayscaleImage:blurGaussian(int)
ofxCvGrayscaleImage:invert()
ofxCvGrayscaleImage:mirror(bool,bool)
ofxCvGrayscaleImage:translate(float,float)
ofxCvGrayscaleImage:rotate(float,float,float)
ofxCvGrayscaleImage:scale(float,float)
ofxCvGrayscaleImage:transform(float,float,float,float,float,float,float)
ofxCvGrayscaleImage:undistort(float,float,float,float,float,float,float,float)
ofxCvGrayscaleImage:warpPerspective(ofPoint,ofPoint,ofPoint,ofPoint)
ofxCvGrayscaleImage:warpIntoMe(ofxCvImage,ofPoint,ofPoint)
ofxCvGrayscaleImage:countNonZeroInRegion(int,int,int,int)
ofxCvGrayscaleImage:set(float)
ofxCvGrayscaleImage:setFromCvColorImage(ofxCvColorImage)
ofxCvGrayscaleImage:absDiff(ofxCvGrayscaleImage)
ofxCvGrayscaleImage:absDiff(ofxCvGrayscaleImage,ofxCvGrayscaleImage)
ofxCvGrayscaleImage:contrastStretch()
ofxCvGrayscaleImage:convertToRange(float,float)
ofxCvGrayscaleImage:threshold(int,bool)
ofxCvGrayscaleImage:adaptiveThreshold(int,int,bool,bool)
ofxCvGrayscaleImage:brightnessContrast(float,float)
ofxCvGrayscaleImage:resize(int,int)
ofxCvGrayscaleImage:scaleIntoMeGray)
ofxCvGrayscaleImage:blurHeavily()
ofxCvGrayscaleImage:erode_3x3()
ofxCvGrayscaleImage:dilate_3x3()
ofxCvGrayscaleImage:setFromColorImage(ofxCvFloatImage)

ofxCvHaarFinder()
ofxCvHaarFinder(ofxCvHaarFinder)
ofxCvHaarFinder:setup(string)
ofxCvHaarFinder:setScaleHaar(float)
ofxCvHaarFinder:setNeighbors(unsigned)
ofxCvHaarFinder:findHaarObjects(ofImage,int,int)
ofxCvHaarFinder:findHaarObjects(ofxCvGrayscaleImage,int,int)
ofxCvHaarFinder:findHaarObjects(ofxCvGrayscaleImage,ofRectangle,int,int)
ofxCvHaarFinder:findHaarObjects(ofxCvGrayscaleImage,int,int,int,int,int,int)
ofxCvHaarFinder:getWidth()
ofxCvHaarFinder:getHeight()
ofxCvHaarFinder:draw(float,float)

ofxCvShortImage()
ofxCvShortImage(ofxCvShortImage)
ofxCvShortImage:allocate(int,int)
ofxCvShortImage:clear()
ofxCvShortImage:getCvImage()
ofxCvShortImage:getWidth()
ofxCvShortImage:getHeight()
ofxCvShortImage:setUseTexture(bool)
ofxCvShortImage:getTextureReference()
ofxCvShortImage:flagImageChanged()
ofxCvShortImage:setROI(int,int,int,int)
ofxCvShortImage:setROI(ofRectangle)
ofxCvShortImage:getROI()
ofxCvShortImage:resetROI()
ofxCvShortImage:getIntersectionROI(ofRectangle,ofRectangle)
ofxCvShortImage:setFromPixels(ofPixels)
ofxCvShortImage:setRoiFromPixels(ofPixels)
ofxCvShortImage:updateTexture()
ofxCvShortImage:draw(float,float)
ofxCvShortImage:draw(float,float,float,float)
ofxCvShortImage:draw(ofRectangle)
ofxCvShortImage:drawROI(float,float)
ofxCvShortImage:drawROI(float,float,float,float)
ofxCvShortImage:setAnchorPercent(float,float)
ofxCvShortImage:setAnchorPoint(float,float)
ofxCvShortImage:resetAnchor()
ofxCvShortImage:erode()
ofxCvShortImage:dilate()
ofxCvShortImage:blur(int)
ofxCvShortImage:blurGaussian(int)
ofxCvShortImage:invert()
ofxCvShortImage:mirror(bool,bool)
ofxCvShortImage:translate(float,float)
ofxCvShortImage:rotate(float,float,float)
ofxCvShortImage:scale(float,float)
ofxCvShortImage:transform(float,float,float,float,float,float,float)
ofxCvShortImage:undistort(float,float,float,float,float,float,float,float)
ofxCvShortImage:warpPerspective(ofPoint,ofPoint,ofPoint,ofPoint)
ofxCvShortImage:warpIntoMe(ofxCvImage,ofPoint,ofPoint)
ofxCvShortImage:countNonZeroInRegion(int,int,int,int)
ofxCvShortImage:set(float)
ofxCvShortImage:addWeighted(ofxCvGrayscaleImage,float)
ofxCvShortImage:getShortPixelsRef()
ofxCvShortImage:getRoiShortPixelsRef()
ofxCvShortImage:contrastStretch()
ofxCvShortImage:convertToRange(float,float)
ofxCvShortImage:resize(int,int)

ofxSVG()
ofxSVG:getWidth()
ofxSVG:getHeight()
ofxSVG:load(string)
ofxSVG:draw()
ofxSVG:getNumPath()
ofxSVG:getPathAt(int)

ofxVectorGraphics()
ofxVectorGraphics:beginEPS(string,int,int,int,int)
ofxVectorGraphics:endEPS()
ofxVectorGraphics:enableDraw()
ofxVectorGraphics:disableDraw()
ofxVectorGraphics:enableCenterRect()
ofxVectorGraphics:disableCenterRect()
ofxVectorGraphics:fill()
ofxVectorGraphics:noFill()
ofxVectorGraphics:setLineWidth(float)
ofxVectorGraphics:setColor(int,int,int)
ofxVectorGraphics:setColor(int)
ofxVectorGraphics:changeColor(float,float,float)
ofxVectorGraphics:rect(float,float,float,float)
ofxVectorGraphics:triangle(float,float,float,float,float,float)
ofxVectorGraphics:circle(float,float,float)
ofxVectorGraphics:ellipse(float,float,float,float)
ofxVectorGraphics:line(float,float,float,float)
ofxVectorGraphics:arc(float,float,float,float,float)
ofxVectorGraphics:bezier(float,float,float,float,float,float,float,float)
ofxVectorGraphics:curve(float,float,float,float,float,float,float,float)
ofxVectorGraphics:beginShape()
ofxVectorGraphics:polyVertex(float,float)
ofxVectorGraphics:bezierVertex(float,float,float,float,float,float)
ofxVectorGraphics:curveVertex(float,float)
ofxVectorGraphics:endShape(bool)

ofxXmlSettings()
ofxXmlSettings(string)
ofxXmlSettings:setVerbose(bool)
ofxXmlSettings:loadFile(string)
ofxXmlSettings:saveFile(string)
ofxXmlSettings:saveFile()
ofxXmlSettings:clearTagContents(string,int)
ofxXmlSettings:removeTag(string,int)
ofxXmlSettings:tagExists(string,int)
ofxXmlSettings:clear()
ofxXmlSettings:getValue(string,int,int)
ofxXmlSettings:getValue(string,double,int)
ofxXmlSettings:getValue(string,string,int)
ofxXmlSettings:setValue(string,int,int)
ofxXmlSettings:setValue(string,double,int)
ofxXmlSettings:setValue(string,string,int)
ofxXmlSettings:pushTag(string,int)
ofxXmlSettings:popTag()
ofxXmlSettings:getPushLevel()
ofxXmlSettings:getNumTags(string)
ofxXmlSettings:addValue(string,int)
ofxXmlSettings:addValue(string,double)
ofxXmlSettings:addValue(string,string)
ofxXmlSettings:addTag(string)
ofxXmlSettings:addAttribute(string,string,int,int)
ofxXmlSettings:addAttribute(string,string,double,int)
ofxXmlSettings:addAttribute(string,string,string,int)
ofxXmlSettings:removeAttribute(string,string,int)
ofxXmlSettings:clearTagAttributes(string,int)
ofxXmlSettings:getNumAttributes(string,int)
ofxXmlSettings:attributeExists(string,string,int)
ofxXmlSettings:getAttribute(string,string,int,int)
ofxXmlSettings:getAttribute(string,string,double,int)
ofxXmlSettings:getAttribute(string,string,string,int)
ofxXmlSettings:setAttribute(string,string,int,int)
ofxXmlSettings:setAttribute(string,string,double,int)
ofxXmlSettings:setAttribute(string,string,string,int)
ofxXmlSettings:loadFromBuffer(string)
ofxXmlSettings:copyXmlToString(string)

ofxArcText()
ofxArcText(bool)
ofxArcText:loadFont(string,int)
ofxArcText:loadFont(string,int,bool,bool)
ofxArcText:stringWidth(string)
ofxArcText:stringHeight(string)
ofxArcText:getStringBoundingBox(string,float,float)
ofxArcText:getSize()
ofxArcText:getLetterSpacing()
ofxArcText:setLetterSpacing(float)
ofxArcText:getSpaceSize()
ofxArcText:setSpaceSize(float)
ofxArcText:getNumCharacters()
ofxArcText:getStringAsPoints(string)
ofxArcText:drawString(string,float,float,float)
ofxArcText:getCharacterWidth(char)

ofxBox2d()
ofxBox2d:init()
ofxBox2d:setFPS(float)
ofxBox2d:registerGrabbing()
ofxBox2d:grabShapeDown(float,float)
ofxBox2d:grabShapeUp(float,float)
ofxBox2d:grabShapeDragged(float,float)
ofxBox2d:getWorld()
ofxBox2d:getBodyCount()
ofxBox2d:getJointCount()
ofxBox2d:enableGrabbing()
ofxBox2d:disableGrabbing()
ofxBox2d:setContactListener
ofxBox2d:setIterations(int,int)
ofxBox2d:setGravity(float,float)
ofxBox2d:setGravity(ofPoint)
ofxBox2d:setBounds(ofPoint,ofPoint)
ofxBox2d:createBounds(float,float,float,float)
ofxBox2d:createBounds(ofRectangle)
ofxBox2d:createGround(ofPoint,ofPoint)
ofxBox2d:createGround(float,float,float,float)
ofxBox2d:checkBounds(bool)
ofxBox2d:update()
ofxBox2d:draw()
ofxBox2d:drawGround()

ofxBox2dCircle()
ofxBox2dCircle:isBody()
ofxBox2dCircle:isFixed()
ofxBox2dCircle:getWorld()
ofxBox2dCircle:create()
ofxBox2dCircle:setBounce(float)
ofxBox2dCircle:setDensity(float)
ofxBox2dCircle:setFriction(float)
ofxBox2dCircle:setPhysics(float,float,float)
ofxBox2dCircle:setData
ofxBox2dCircle:getData()
ofxBox2dCircle:setFilterData(b2Filter)
ofxBox2dCircle:enableGravity(bool)
ofxBox2dCircle:setFixedRotation(bool)
ofxBox2dCircle:setRotationFriction(float)
ofxBox2dCircle:getRotation()
ofxBox2dCircle:getPosition()
ofxBox2dCircle:getB2DPosition()
ofxBox2dCircle:setVelocity(float,float)
ofxBox2dCircle:setVelocity(ofVec2f)
ofxBox2dCircle:getVelocity()
ofxBox2dCircle:setDamping(float)
ofxBox2dCircle:setDamping(float,float)
ofxBox2dCircle:addForce(ofVec2f,float)
ofxBox2dCircle:addImpulseForce(ofVec2f,ofVec2f)
ofxBox2dCircle:destroy()
ofxBox2dCircle:update()
ofxBox2dCircle:setup(b2World*,float,float,float)
ofxBox2dCircle:getRadius()
ofxBox2dCircle:setRadius(float)
ofxBox2dCircle:draw()
ofxBox2dCircle:addAttractionPoint(float,float,float)
ofxBox2dCircle:addAttractionPoint(ofVec2f,float)
ofxBox2dCircle:addRepulsionForce(float,float,float)
ofxBox2dCircle:addRepulsionForce(ofVec2f,float)

ofxBox2dJoint()
ofxBox2dJoint:setWorld
ofxBox2dJoint:setup(b2World*,b2Body*,b2Body*,float,float,bool)
ofxBox2dJoint:setup(b2World*,b2Body*,b2Body*,b2Vec2,b2Vec2,float,float,bool)
ofxBox2dJoint:isSetup()
ofxBox2dJoint:draw()
ofxBox2dJoint:destroy()
ofxBox2dJoint:setLength(float)
ofxBox2dJoint:getLength()
ofxBox2dJoint:setFrequency(float)
ofxBox2dJoint:getFrequency()
ofxBox2dJoint:setDamping(float)
ofxBox2dJoint:getDamping()
ofxBox2dJoint:getReactionForce(float)
ofxBox2dJoint:getReactionForceB2D(float)
ofxBox2dJoint:getReactionTorque(float)

ofxBox2dDistanceJoint()
ofxBox2dDistanceJoint:setWorld(b2World*)
ofxBox2dDistanceJoint:isAlive(void)
ofxBox2dDistanceJoint:destroy(void)
ofxBox2dDistanceJoint:setup(b2World*,b2Body*,b2Body*,float,float,float,bool)
ofxBox2dDistanceJoint:setup(b2World*,b2Body*,b2Body*,float,float,bool)
ofxBox2dDistanceJoint:setup(b2World*,b2Body*,b2Body*,b2Vec2,b2Vec2,float,float,float,bool)
ofxBox2dDistanceJoint:setup(b2World*,b2Body*,b2Body*,b2Vec2,b2Vec2,float,float,bool)
ofxBox2dDistanceJoint:setLength(float)
ofxBox2dDistanceJoint:getLength(void)
ofxBox2dDistanceJoint:setFrequency(float)
ofxBox2dDistanceJoint:getFrequency(void)
ofxBox2dDistanceJoint:setDamping(float)
ofxBox2dDistanceJoint:getDamping(void)
ofxBox2dDistanceJoint:getReactionForce(float)
ofxBox2dDistanceJoint:getReactionForceB2D(float)
ofxBox2dDistanceJoint:getReactionTorque(float)

ofxBox2dGearJoint()
ofxBox2dGearJoint:setWorld(b2World*)
ofxBox2dGearJoint:isAlive(void)
ofxBox2dGearJoint:destroy(void)
ofxBox2dGearJoint:setup(b2World*,ofxBox2dRevoluteJoint*,ofxBox2dPrismaticJoint*,float,bool)
ofxBox2dGearJoint:setRatio(float)
ofxBox2dGearJoint:getRatio(void)
ofxBox2dGearJoint:getReactionForce(float)
ofxBox2dGearJoint:getReactionForceB2D(float)
ofxBox2dGearJoint:getReactionTorque(float)

ofxBox2dPrismaticJoint()
ofxBox2dPrismaticJoint:setWorld(b2World*)
ofxBox2dPrismaticJoint:isAlive(void)
ofxBox2dPrismaticJoint:destroy(void)
ofxBox2dPrismaticJoint:setup(b2World*,b2Body*,b2Body*,b2Vec2,b2Vec2,float,float,float,bool,float,float,float,bool)
ofxBox2dPrismaticJoint:getJoint(void)
ofxBox2dPrismaticJoint:getLowerLimit(void)
ofxBox2dPrismaticJoint:getUpperLimit(void)
ofxBox2dPrismaticJoint:setLimits(float,float)
ofxBox2dPrismaticJoint:setEnableLimit(bool)
ofxBox2dPrismaticJoint:isLimitEnabled(void)
ofxBox2dPrismaticJoint:isMotorEnabled(void)
ofxBox2dPrismaticJoint:setEnableMotor(bool)
ofxBox2dPrismaticJoint:setMotorSpeed(float)
ofxBox2dPrismaticJoint:getMotorSpeed(void)
ofxBox2dPrismaticJoint:setMaxMotorForce(float)
ofxBox2dPrismaticJoint:getMotorForce(void)
ofxBox2dPrismaticJoint:getReactionForce(float)
ofxBox2dPrismaticJoint:getReactionForceB2D(float)
ofxBox2dPrismaticJoint:getReactionTorque(float)

ofxBox2dPulleyJoint()
ofxBox2dPulleyJoint:setWorld(b2World*)
ofxBox2dPulleyJoint:isAlive(void)
ofxBox2dPulleyJoint:destroy(void)
ofxBox2dPulleyJoint:setup(b2World*,b2Body*,b2Body*,const b2Vec2&,const b2Vec2&,const b2Vec2&,const b2Vec2&,float,bool)
ofxBox2dPulleyJoint:getLength1(void)
ofxBox2dPulleyJoint:getLength2(void)
ofxBox2dPulleyJoint:getRatio(void)
ofxBox2dPulleyJoint:getReactionForce(float)
ofxBox2dPulleyJoint:getReactionForceB2D(float)
ofxBox2dPulleyJoint:getReactionTorque(float)

ofxBox2dRevoluteJoint()
ofxBox2dRevoluteJoint:setWorld(b2World*)
ofxBox2dRevoluteJoint:isAlive(void)
ofxBox2dRevoluteJoint:destroy(void)
ofxBox2dRevoluteJoint:setup(b2World*,b2Body*,b2Body*,b2Vec2,float,float,float,bool,float,float,bool,bool)
ofxBox2dRevoluteJoint:setup(b2World*,b2Body*,b2Body*,b2Vec2,float,float,bool,float,float,bool,bool)
ofxBox2dRevoluteJoint:getJoint(void)
ofxBox2dRevoluteJoint:getLowerLimit(void)
ofxBox2dRevoluteJoint:getUpperLimit(void)
ofxBox2dRevoluteJoint:getAngle(void)
ofxBox2dRevoluteJoint:setLimits(float,float)
ofxBox2dRevoluteJoint:setEnableLimit(bool)
ofxBox2dRevoluteJoint:isLimitEnabled(void)
ofxBox2dRevoluteJoint:isMotorEnabled(void)
ofxBox2dRevoluteJoint:setEnableMotor(bool)
ofxBox2dRevoluteJoint:setMotorSpeed(float)
ofxBox2dRevoluteJoint:getMotorSpeed(void)
ofxBox2dRevoluteJoint:setMaxMotorTorque(float)
ofxBox2dRevoluteJoint:getMotorTorque(void)
ofxBox2dRevoluteJoint:getReactionForce(float)
ofxBox2dRevoluteJoint:getReactionForceB2D(float)
ofxBox2dRevoluteJoint:getReactionTorque(float)

ofxBox2dWeldJoint()
ofxBox2dWeldJoint:setWorld(b2World*)
ofxBox2dWeldJoint:isAlive(void)
ofxBox2dWeldJoint:destroy(void)
ofxBox2dWeldJoint:setup(b2World*,b2Body*,b2Body*,const b2Vec2&,float,bool)
ofxBox2dWeldJoint:setup(b2World*,b2Body*,b2Body*,const b2Vec2&,bool)
ofxBox2dWeldJoint:getReactionForce(float)
ofxBox2dWeldJoint:getReactionForceB2D(float)
ofxBox2dWeldJoint:getReactionTorque(float)

ofxBox2dPolygon()
ofxBox2dPolygon:clear()
ofxBox2dPolygon:addVertex(float,float,float)
ofxBox2dPolygon:lineTo(ofPoint)
ofxBox2dPolygon:lineTo(float,float,float)
ofxBox2dPolygon:arc(ofPoint,float,float,float,float,int)
ofxBox2dPolygon:arc(float,float,float,float,float,float,int)
ofxBox2dPolygon:arc(float,float,float,float,float,float,float,int)
ofxBox2dPolygon:curveTo(ofPoint,int)
ofxBox2dPolygon:curveTo(float,float,float,int)
ofxBox2dPolygon:bezierTo(ofPoint,ofPoint,ofPoint,int)
ofxBox2dPolygon:bezierTo(float,float,float,float,float,float,int)
ofxBox2dPolygon:bezierTo(float,float,float,float,float,float,float,float,float,int)
ofxBox2dPolygon:quadBezierTo(ofPoint,ofPoint,ofPoint,int)
ofxBox2dPolygon:quadBezierTo(float,float,float,float,float,float,int)
ofxBox2dPolygon:quadBezierTo(float,float,float,float,float,float,float,float,float,int)
ofxBox2dPolygon:getSmoothed(int,float)
ofxBox2dPolygon:getResampledBySpacing(float)
ofxBox2dPolygon:getResampledByCount(int)
ofxBox2dPolygon:getBoundingBox()
ofxBox2dPolygon:getClosestPoint
ofxBox2dPolygon:simplify(float)
ofxBox2dPolygon:size()
ofxBox2dPolygon:resize(size_t)
ofxBox2dPolygon:setClosed(bool)
ofxBox2dPolygon:isClosed()
ofxBox2dPolygon:close()
ofxBox2dPolygon:hasChanged()
ofxBox2dPolygon:getVertices()
ofxBox2dPolygon:getPerimeter()
ofxBox2dPolygon:isBody()
ofxBox2dPolygon:isFixed()
ofxBox2dPolygon:getWorld()
ofxBox2dPolygon:create()
ofxBox2dPolygon:setBounce(float)
ofxBox2dPolygon:setDensity(float)
ofxBox2dPolygon:setFriction(float)
ofxBox2dPolygon:setPhysics(float,float,float)
ofxBox2dPolygon:setData
ofxBox2dPolygon:getData()
ofxBox2dPolygon:setFilterData(b2Filter)
ofxBox2dPolygon:enableGravity(bool)
ofxBox2dPolygon:setFixedRotation(bool)
ofxBox2dPolygon:setRotationFriction(float)
ofxBox2dPolygon:getRotation()
ofxBox2dPolygon:getPosition()
ofxBox2dPolygon:getB2DPosition()
ofxBox2dPolygon:setVelocity(float,float)
ofxBox2dPolygon:setVelocity(ofVec2f)
ofxBox2dPolygon:getVelocity()
ofxBox2dPolygon:setDamping(float)
ofxBox2dPolygon:setDamping(float,float)
ofxBox2dPolygon:addForce(ofVec2f,float)
ofxBox2dPolygon:addImpulseForce(ofVec2f,ofVec2f)
ofxBox2dPolygon:destroy()
ofxBox2dPolygon:update()
ofxBox2dPolygon:setup
ofxBox2dPolygon:addTriangle(ofVec2f,ofVec2f,ofVec2f)
ofxBox2dPolygon:addVertexes(ofPolyline)
ofxBox2dPolygon:simplify(float)
ofxBox2dPolygon:triangulate(float,int)
ofxBox2dPolygon:getCenter()
ofxBox2dPolygon:getArea()
ofxBox2dPolygon:isGoodShape()
ofxBox2dPolygon:setAsEdge(bool)
ofxBox2dPolygon:addAttractionPoint(ofVec2f,float)
ofxBox2dPolygon:addAttractionPoint(float,float,float)
ofxBox2dPolygon:addRepulsionForce(ofVec2f,float)
ofxBox2dPolygon:addRepulsionForce(float,float,float)
ofxBox2dPolygon:updateShape()
ofxBox2dPolygon:create
ofxBox2dPolygon:draw()

ofxBox2dRect()
ofxBox2dRect:isBody()
ofxBox2dRect:isFixed()
ofxBox2dRect:getWorld()
ofxBox2dRect:create()
ofxBox2dRect:setBounce(float)
ofxBox2dRect:setDensity(float)
ofxBox2dRect:setFriction(float)
ofxBox2dRect:setPhysics(float,float,float)
ofxBox2dRect:setData
ofxBox2dRect:getData()
ofxBox2dRect:setFilterData(b2Filter)
ofxBox2dRect:enableGravity(bool)
ofxBox2dRect:setFixedRotation(bool)
ofxBox2dRect:setRotationFriction(float)
ofxBox2dRect:getRotation()
ofxBox2dRect:getPosition()
ofxBox2dRect:getB2DPosition()
ofxBox2dRect:setVelocity(float,float)
ofxBox2dRect:setVelocity(ofVec2f)
ofxBox2dRect:getVelocity()
ofxBox2dRect:setDamping(float)
ofxBox2dRect:setDamping(float,float)
ofxBox2dRect:addForce(ofVec2f,float)
ofxBox2dRect:addImpulseForce(ofVec2f,ofVec2f)
ofxBox2dRect:destroy()
ofxBox2dRect:update()
ofxBox2dRect:setup(b2World*,ofRectangle)
ofxBox2dRect:setup(b2World*,float,float,float,float)
ofxBox2dRect:draw()
ofxBox2dRect:getWidth()
ofxBox2dRect:getHeight()
ofxBox2dRect:addAttractionPoint(float,float,float)
ofxBox2dRect:addAttractionPoint(ofVec2f,float)
ofxBox2dRect:addRepulsionForce(float,float,float)
ofxBox2dRect:addRepulsionForce(ofVec2f,float)

ofxChromaKey()
ofxChromaKey:setPixels(ofPixelsRef)
ofxChromaKey:learnBgColor(ofPixelsRef)
ofxChromaKey:setBgColor(ofColor)
ofxChromaKey:getBgColor()
ofxChromaKey:setThreshold(float)
ofxChromaKey:drawBgColor(int,int,int,int)
ofxChromaKey:draw(int,int,int,int,bool)
ofxChromaKey:getThreshold()

ofxCLD()
ofxCLD:setup(int,int)
ofxCLD:getCLDTextureRef(ofPixels,int,float,float,float,float)

ofxControlPanel()
ofxControlPanel:setup(float,float,float,float)
ofxControlPanel:setWhichPanel(int)
ofxControlPanel:setWhichColumn(int)
ofxControlPanel:addPanel(int)
ofxControlPanel:addLabel(string)
ofxControlPanel:addToggle(string,bool)
ofxControlPanel:addSlider(string,float,float,float,bool)
ofxControlPanel:getValueB(string)
ofxControlPanel:getValueF(string)
ofxControlPanel:getValueI(string)
ofxControlPanel:loadSettings(string)
ofxControlPanel:saveSettings(string)
ofxControlPanel:mousePressed()
ofxControlPanel:mouseDragged()
ofxControlPanel:mouseReleased()
ofxControlPanel:update()
ofxControlPanel:draw()

ofxCrypto()
ofxCrypto:md5(string)
ofxCrypto:sha1(string)
ofxCrypto:base64_encode(string)
ofxCrypto:base64_decode(string)
ofxCrypto:base64_encode(ofBuffer)
ofxCrypto:base64_decode_to_buffer(string)

ofxDelaunay()
ofxDelaunay:setMaxPoints(int)
ofxDelaunay:reset()
ofxDelaunay:addPoint(ofPoint)
ofxDelaunay:addPoint(float,float,float)
ofxDelaunay:triangulate()
ofxDelaunay:getNumTriangles()
ofxDelaunay:getTriangle(int)
ofxDelaunay:getPoint(int)
ofxDelaunay:draw()
ofxDelaunay:drawTriangle(int)
ofxDelaunay:drawCenter(int)

ofxDither()
ofxDither:floyd_steinberg(ofImage,ofImage)
ofxDither:atkinson(ofImage,ofImage)

ofxDmx()
ofxDmx:connect(int,unsigned int)
ofxDmx:connect(string,unsigned int)
ofxDmx:disconnect()
ofxDmx:setLevel(unsigned int,unsigned char)
ofxDmx:clear()
ofxDmx:getLevel(unsigned int)
ofxDmx:update(bool)
ofxDmx:setChannels(unsigned int)
ofxDmx:isConnected()

ofxDOF()
ofxDOF:setup(int,int)
ofxDOF:setShaderPath(string)
ofxDOF:reloadShader()
ofxDOF:setBlurAmount(float)
ofxDOF:getBlurAmount()
ofxDOF:setFocalRange(float)
ofxDOF:getFocalRange()
ofxDOF:setFocalDistance(float)
ofxDOF:getFocalDistance()
ofxDOF:getWidth()
ofxDOF:getHeight()
ofxDOF:getDimensions()
ofxDOF:beginDOF()
ofxDOF:endDOF()
ofxDOF:getFbo()
ofxDOF:drawFocusAssist(int,int)
ofxDOF:drawFocusAssist(int,int,int,int)
ofxDOF:drawFocusAssist(ofRectangle)

ofxFXObject()
ofxFXObject:allocate(int,int,int)
ofxFXObject:allocate(int,int)
ofxFXObject:set(ofRectangle const)
ofxFXObject:setCode(string)
ofxFXObject:load(string)
ofxFXObject:compileCode()
ofxFXObject:setPasses(int)
ofxFXObject:setInternalFormat(int)
ofxFXObject:setTexture(ofTexture,int)
ofxFXObject:beginFx(int)
ofxFXObject:endFx(int)
ofxFXObject:compiled()
ofxFXObject:getCode()
ofxFXObject:getWidth()
ofxFXObject:getHeight()
ofxFXObject:getPasses()
ofxFXObject:getResolution()
ofxFXObject:getInternalFormat()
ofxFXObject:getNumberOfCalledTextures()
ofxFXObject:getBackBuffer()
ofxFXObject:getTextureReference()
ofxFXObject:clear(int)
ofxFXObject:update()
ofxFXObject:draw(ofRectangle)
ofxFXObject:draw(int,int,float,float)

ofxAbsDiff()
ofxAbsDiff:allocate(int,int,int)
ofxAbsDiff:allocate(int,int)
ofxAbsDiff:set(ofRectangle const)
ofxAbsDiff:setCode(string)
ofxAbsDiff:load(string)
ofxAbsDiff:compileCode()
ofxAbsDiff:setPasses(int)
ofxAbsDiff:setInternalFormat(int)
ofxAbsDiff:setTexture(ofTexture,int)
ofxAbsDiff:beginFx(int)
ofxAbsDiff:endFx(int)
ofxAbsDiff:compiled()
ofxAbsDiff:getCode()
ofxAbsDiff:getWidth()
ofxAbsDiff:getHeight()
ofxAbsDiff:getPasses()
ofxAbsDiff:getResolution()
ofxAbsDiff:getInternalFormat()
ofxAbsDiff:getNumberOfCalledTextures()
ofxAbsDiff:getBackBuffer()
ofxAbsDiff:getTextureReference()
ofxAbsDiff:clear(int)
ofxAbsDiff:update()
ofxAbsDiff:draw(ofRectangle)
ofxAbsDiff:draw(int,int,float,float)

ofxBlend()
ofxBlend:allocate(int,int,int)
ofxBlend:allocate(int,int)
ofxBlend:set(ofRectangle const)
ofxBlend:setCode(string)
ofxBlend:load(string)
ofxBlend:compileCode()
ofxBlend:setPasses(int)
ofxBlend:setInternalFormat(int)
ofxBlend:setTexture(ofTexture,int)
ofxBlend:beginFx(int)
ofxBlend:endFx(int)
ofxBlend:compiled()
ofxBlend:getCode()
ofxBlend:getWidth()
ofxBlend:getHeight()
ofxBlend:getPasses()
ofxBlend:getResolution()
ofxBlend:getInternalFormat()
ofxBlend:getNumberOfCalledTextures()
ofxBlend:getBackBuffer()
ofxBlend:getTextureReference()
ofxBlend:clear(int)
ofxBlend:update()
ofxBlend:draw(ofRectangle)
ofxBlend:draw(int,int,float,float)
ofxBlend:setBlendMode(PSBlendMode)
ofxBlend:addLayer(ofTexture,PSBlendMode)
ofxBlend:beginBackground()
ofxBlend:endBackground()
ofxBlend:draw(int,int)

ofxClone()
ofxClone:allocate(int,int,int)
ofxClone:allocate(int,int)
ofxClone:set(ofRectangle const)
ofxClone:setCode(string)
ofxClone:load(string)
ofxClone:compileCode()
ofxClone:setPasses(int)
ofxClone:setInternalFormat(int)
ofxClone:setTexture(ofTexture,int)
ofxClone:beginFx(int)
ofxClone:endFx(int)
ofxClone:compiled()
ofxClone:getCode()
ofxClone:getWidth()
ofxClone:getHeight()
ofxClone:getPasses()
ofxClone:getResolution()
ofxClone:getInternalFormat()
ofxClone:getNumberOfCalledTextures()
ofxClone:getBackBuffer()
ofxClone:getTextureReference()
ofxClone:clear(int)
ofxClone:update()
ofxClone:draw(ofRectangle)
ofxClone:draw(int,int,float,float)
ofxClone:setStrength(int)

ofxMask()
ofxMask:allocate(int,int,int)
ofxMask:allocate(int,int)
ofxMask:set(ofRectangle const)
ofxMask:setCode(string)
ofxMask:load(string)
ofxMask:compileCode()
ofxMask:setPasses(int)
ofxMask:setInternalFormat(int)
ofxMask:setTexture(ofTexture,int)
ofxMask:beginFx(int)
ofxMask:endFx(int)
ofxMask:compiled()
ofxMask:getCode()
ofxMask:getWidth()
ofxMask:getHeight()
ofxMask:getPasses()
ofxMask:getResolution()
ofxMask:getInternalFormat()
ofxMask:getNumberOfCalledTextures()
ofxMask:getBackBuffer()
ofxMask:getTextureReference()
ofxMask:clear(int)
ofxMask:update()
ofxMask:draw(ofRectangle)
ofxMask:draw(int,int,float,float)

ofxMultiTexture()
ofxMultiTexture:allocate(int,int,int)
ofxMultiTexture:allocate(int,int)
ofxMultiTexture:set(ofRectangle const)
ofxMultiTexture:setCode(string)
ofxMultiTexture:load(string)
ofxMultiTexture:compileCode()
ofxMultiTexture:setPasses(int)
ofxMultiTexture:setInternalFormat(int)
ofxMultiTexture:setTexture(ofTexture,int)
ofxMultiTexture:beginFx(int)
ofxMultiTexture:endFx(int)
ofxMultiTexture:compiled()
ofxMultiTexture:getCode()
ofxMultiTexture:getWidth()
ofxMultiTexture:getHeight()
ofxMultiTexture:getPasses()
ofxMultiTexture:getResolution()
ofxMultiTexture:getInternalFormat()
ofxMultiTexture:getNumberOfCalledTextures()
ofxMultiTexture:getBackBuffer()
ofxMultiTexture:getTextureReference()
ofxMultiTexture:clear(int)
ofxMultiTexture:update()
ofxMultiTexture:draw(ofRectangle)
ofxMultiTexture:draw(int,int,float,float)

ofxSubstract()
ofxSubstract:allocate(int,int,int)
ofxSubstract:allocate(int,int)
ofxSubstract:set(ofRectangle const)
ofxSubstract:setCode(string)
ofxSubstract:load(string)
ofxSubstract:compileCode()
ofxSubstract:setPasses(int)
ofxSubstract:setInternalFormat(int)
ofxSubstract:setTexture(ofTexture,int)
ofxSubstract:beginFx(int)
ofxSubstract:endFx(int)
ofxSubstract:compiled()
ofxSubstract:getCode()
ofxSubstract:getWidth()
ofxSubstract:getHeight()
ofxSubstract:getPasses()
ofxSubstract:getResolution()
ofxSubstract:getInternalFormat()
ofxSubstract:getNumberOfCalledTextures()
ofxSubstract:getBackBuffer()
ofxSubstract:getTextureReference()
ofxSubstract:clear(int)
ofxSubstract:update()
ofxSubstract:draw(ofRectangle)
ofxSubstract:draw(int,int,float,float)

ofxBloom()
ofxBloom:allocate(int,int,int)
ofxBloom:allocate(int,int)
ofxBloom:set(ofRectangle const)
ofxBloom:setCode(string)
ofxBloom:load(string)
ofxBloom:compileCode()
ofxBloom:setPasses(int)
ofxBloom:setInternalFormat(int)
ofxBloom:setTexture(ofTexture,int)
ofxBloom:beginFx(int)
ofxBloom:endFx(int)
ofxBloom:compiled()
ofxBloom:getCode()
ofxBloom:getWidth()
ofxBloom:getHeight()
ofxBloom:getPasses()
ofxBloom:getResolution()
ofxBloom:getInternalFormat()
ofxBloom:getNumberOfCalledTextures()
ofxBloom:getBackBuffer()
ofxBloom:getTextureReference()
ofxBloom:clear(int)
ofxBloom:update()
ofxBloom:draw(ofRectangle)
ofxBloom:draw(int,int,float,float)

ofxBlur()
ofxBlur:allocate(int,int,int)
ofxBlur:allocate(int,int)
ofxBlur:set(ofRectangle const)
ofxBlur:setCode(string)
ofxBlur:load(string)
ofxBlur:compileCode()
ofxBlur:setPasses(int)
ofxBlur:setInternalFormat(int)
ofxBlur:setTexture(ofTexture,int)
ofxBlur:beginFx(int)
ofxBlur:endFx(int)
ofxBlur:compiled()
ofxBlur:getCode()
ofxBlur:getWidth()
ofxBlur:getHeight()
ofxBlur:getPasses()
ofxBlur:getResolution()
ofxBlur:getInternalFormat()
ofxBlur:getNumberOfCalledTextures()
ofxBlur:getBackBuffer()
ofxBlur:getTextureReference()
ofxBlur:clear(int)
ofxBlur:update()
ofxBlur:draw(ofRectangle)
ofxBlur:draw(int,int,float,float)
ofxBlur:setFade(float)

ofxBokeh()
ofxBokeh:allocate(int,int,int)
ofxBokeh:allocate(int,int)
ofxBokeh:set(ofRectangle const)
ofxBokeh:setCode(string)
ofxBokeh:load(string)
ofxBokeh:compileCode()
ofxBokeh:setPasses(int)
ofxBokeh:setInternalFormat(int)
ofxBokeh:setTexture(ofTexture,int)
ofxBokeh:beginFx(int)
ofxBokeh:endFx(int)
ofxBokeh:compiled()
ofxBokeh:getCode()
ofxBokeh:getWidth()
ofxBokeh:getHeight()
ofxBokeh:getPasses()
ofxBokeh:getResolution()
ofxBokeh:getInternalFormat()
ofxBokeh:getNumberOfCalledTextures()
ofxBokeh:getBackBuffer()
ofxBokeh:getTextureReference()
ofxBokeh:clear(int)
ofxBokeh:update()
ofxBokeh:draw(ofRectangle)
ofxBokeh:draw(int,int,float,float)
ofxBokeh:setRadius(float)

ofxChromaAb()
ofxChromaAb:allocate(int,int,int)
ofxChromaAb:allocate(int,int)
ofxChromaAb:set(ofRectangle const)
ofxChromaAb:setCode(string)
ofxChromaAb:load(string)
ofxChromaAb:compileCode()
ofxChromaAb:setPasses(int)
ofxChromaAb:setInternalFormat(int)
ofxChromaAb:setTexture(ofTexture,int)
ofxChromaAb:beginFx(int)
ofxChromaAb:endFx(int)
ofxChromaAb:compiled()
ofxChromaAb:getCode()
ofxChromaAb:getWidth()
ofxChromaAb:getHeight()
ofxChromaAb:getPasses()
ofxChromaAb:getResolution()
ofxChromaAb:getInternalFormat()
ofxChromaAb:getNumberOfCalledTextures()
ofxChromaAb:getBackBuffer()
ofxChromaAb:getTextureReference()
ofxChromaAb:clear(int)
ofxChromaAb:update()
ofxChromaAb:draw(ofRectangle)
ofxChromaAb:draw(int,int,float,float)

ofxContrast()
ofxContrast:allocate(int,int,int)
ofxContrast:allocate(int,int)
ofxContrast:set(ofRectangle const)
ofxContrast:setCode(string)
ofxContrast:load(string)
ofxContrast:compileCode()
ofxContrast:setPasses(int)
ofxContrast:setInternalFormat(int)
ofxContrast:setTexture(ofTexture,int)
ofxContrast:beginFx(int)
ofxContrast:endFx(int)
ofxContrast:compiled()
ofxContrast:getCode()
ofxContrast:getWidth()
ofxContrast:getHeight()
ofxContrast:getPasses()
ofxContrast:getResolution()
ofxContrast:getInternalFormat()
ofxContrast:getNumberOfCalledTextures()
ofxContrast:getBackBuffer()
ofxContrast:getTextureReference()
ofxContrast:clear(int)
ofxContrast:update()
ofxContrast:draw(ofRectangle)
ofxContrast:draw(int,int,float,float)

ofxGaussianBlur()
ofxGaussianBlur:allocate(int,int,int)
ofxGaussianBlur:allocate(int,int)
ofxGaussianBlur:set(ofRectangle const)
ofxGaussianBlur:setCode(string)
ofxGaussianBlur:load(string)
ofxGaussianBlur:setPasses(int)
ofxGaussianBlur:setInternalFormat(int)
ofxGaussianBlur:setTexture(ofTexture,int)
ofxGaussianBlur:beginFx(int)
ofxGaussianBlur:endFx(int)
ofxGaussianBlur:compiled()
ofxGaussianBlur:getCode()
ofxGaussianBlur:getWidth()
ofxGaussianBlur:getHeight()
ofxGaussianBlur:getPasses()
ofxGaussianBlur:getResolution()
ofxGaussianBlur:getInternalFormat()
ofxGaussianBlur:getNumberOfCalledTextures()
ofxGaussianBlur:getBackBuffer()
ofxGaussianBlur:getTextureReference()
ofxGaussianBlur:clear(int)
ofxGaussianBlur:update()
ofxGaussianBlur:draw(ofRectangle)
ofxGaussianBlur:draw(int,int,float,float)
ofxGaussianBlur:setRadius(float)

ofxGlow()
ofxGlow:allocate(int,int,int)
ofxGlow:allocate(int,int)
ofxGlow:set(ofRectangle const)
ofxGlow:setCode(string)
ofxGlow:load(string)
ofxGlow:setPasses(int)
ofxGlow:setInternalFormat(int)
ofxGlow:setTexture(ofTexture,int)
ofxGlow:beginFx(int)
ofxGlow:endFx(int)
ofxGlow:compiled()
ofxGlow:getCode()
ofxGlow:getWidth()
ofxGlow:getHeight()
ofxGlow:getPasses()
ofxGlow:getResolution()
ofxGlow:getInternalFormat()
ofxGlow:getNumberOfCalledTextures()
ofxGlow:getBackBuffer()
ofxGlow:getTextureReference()
ofxGlow:clear(int)
ofxGlow:update()
ofxGlow:draw(ofRectangle)
ofxGlow:draw(int,int,float,float)
ofxGlow:setRadius(float)

ofxGrayscale()
ofxGrayscale:allocate(int,int,int)
ofxGrayscale:allocate(int,int)
ofxGrayscale:set(ofRectangle const)
ofxGrayscale:setCode(string)
ofxGrayscale:load(string)
ofxGrayscale:compileCode()
ofxGrayscale:setPasses(int)
ofxGrayscale:setInternalFormat(int)
ofxGrayscale:setTexture(ofTexture,int)
ofxGrayscale:beginFx(int)
ofxGrayscale:endFx(int)
ofxGrayscale:compiled()
ofxGrayscale:getCode()
ofxGrayscale:getWidth()
ofxGrayscale:getHeight()
ofxGrayscale:getPasses()
ofxGrayscale:getResolution()
ofxGrayscale:getInternalFormat()
ofxGrayscale:getNumberOfCalledTextures()
ofxGrayscale:getBackBuffer()
ofxGrayscale:getTextureReference()
ofxGrayscale:clear(int)
ofxGrayscale:update()
ofxGrayscale:draw(ofRectangle)
ofxGrayscale:draw(int,int,float,float)

ofxInverse()
ofxInverse:allocate(int,int,int)
ofxInverse:allocate(int,int)
ofxInverse:set(ofRectangle const)
ofxInverse:setCode(string)
ofxInverse:load(string)
ofxInverse:compileCode()
ofxInverse:setPasses(int)
ofxInverse:setInternalFormat(int)
ofxInverse:setTexture(ofTexture,int)
ofxInverse:beginFx(int)
ofxInverse:endFx(int)
ofxInverse:compiled()
ofxInverse:getCode()
ofxInverse:getWidth()
ofxInverse:getHeight()
ofxInverse:getPasses()
ofxInverse:getResolution()
ofxInverse:getInternalFormat()
ofxInverse:getNumberOfCalledTextures()
ofxInverse:getBackBuffer()
ofxInverse:getTextureReference()
ofxInverse:clear(int)
ofxInverse:update()
ofxInverse:draw(ofRectangle)
ofxInverse:draw(int,int,float,float)

ofxLUT()
ofxLUT:allocate(int,int,int)
ofxLUT:allocate(int,int)
ofxLUT:set(ofRectangle const)
ofxLUT:setCode(string)
ofxLUT:load(string)
ofxLUT:compileCode()
ofxLUT:setPasses(int)
ofxLUT:setInternalFormat(int)
ofxLUT:setTexture(ofTexture,int)
ofxLUT:beginFx(int)
ofxLUT:endFx(int)
ofxLUT:compiled()
ofxLUT:getCode()
ofxLUT:getWidth()
ofxLUT:getHeight()
ofxLUT:getPasses()
ofxLUT:getResolution()
ofxLUT:getInternalFormat()
ofxLUT:getNumberOfCalledTextures()
ofxLUT:getBackBuffer()
ofxLUT:getTextureReference()
ofxLUT:clear(int)
ofxLUT:update()
ofxLUT:draw(ofRectangle)
ofxLUT:draw(int,int,float,float)
ofxLUT:loadLUT(ofBuffer)
ofxLUT:loadLUT(string)

ofxMedian()
ofxMedian:allocate(int,int,int)
ofxMedian:allocate(int,int)
ofxMedian:set(ofRectangle const)
ofxMedian:setCode(string)
ofxMedian:load(string)
ofxMedian:compileCode()
ofxMedian:setPasses(int)
ofxMedian:setInternalFormat(int)
ofxMedian:setTexture(ofTexture,int)
ofxMedian:beginFx(int)
ofxMedian:endFx(int)
ofxMedian:compiled()
ofxMedian:getCode()
ofxMedian:getWidth()
ofxMedian:getHeight()
ofxMedian:getPasses()
ofxMedian:getResolution()
ofxMedian:getInternalFormat()
ofxMedian:getNumberOfCalledTextures()
ofxMedian:getBackBuffer()
ofxMedian:getTextureReference()
ofxMedian:clear(int)
ofxMedian:update()
ofxMedian:draw(ofRectangle)
ofxMedian:draw(int,int,float,float)

ofxOldTv()
ofxOldTv:allocate(int,int,int)
ofxOldTv:allocate(int,int)
ofxOldTv:set(ofRectangle const)
ofxOldTv:setCode(string)
ofxOldTv:load(string)
ofxOldTv:compileCode()
ofxOldTv:setPasses(int)
ofxOldTv:setInternalFormat(int)
ofxOldTv:setTexture(ofTexture,int)
ofxOldTv:beginFx(int)
ofxOldTv:endFx(int)
ofxOldTv:compiled()
ofxOldTv:getCode()
ofxOldTv:getWidth()
ofxOldTv:getHeight()
ofxOldTv:getPasses()
ofxOldTv:getResolution()
ofxOldTv:getInternalFormat()
ofxOldTv:getNumberOfCalledTextures()
ofxOldTv:getBackBuffer()
ofxOldTv:getTextureReference()
ofxOldTv:clear(int)
ofxOldTv:update()
ofxOldTv:draw(ofRectangle)
ofxOldTv:draw(int,int,float,float)

ofxFire()
ofxFire:allocate(int,int,int)
ofxFire:allocate(int,int)
ofxFire:set(ofRectangle const)
ofxFire:setCode(string)
ofxFire:load(string)
ofxFire:compileCode()
ofxFire:setPasses(int)
ofxFire:setInternalFormat(int)
ofxFire:setTexture(ofTexture,int)
ofxFire:beginFx(int)
ofxFire:endFx(int)
ofxFire:compiled()
ofxFire:getCode()
ofxFire:getWidth()
ofxFire:getHeight()
ofxFire:getPasses()
ofxFire:getResolution()
ofxFire:getInternalFormat()
ofxFire:getNumberOfCalledTextures()
ofxFire:getBackBuffer()
ofxFire:getTextureReference()
ofxFire:clear(int)
ofxFire:update()
ofxFire:draw(ofRectangle)
ofxFire:draw(int,int,float,float)
ofxFire:setZoom(float)
ofxFire:clear()

ofxGrayScott()
ofxGrayScott:allocate(int,int,int)
ofxGrayScott:allocate(int,int)
ofxGrayScott:set(ofRectangle const)
ofxGrayScott:setCode(string)
ofxGrayScott:load(string)
ofxGrayScott:compileCode()
ofxGrayScott:setPasses(int)
ofxGrayScott:setInternalFormat(int)
ofxGrayScott:setTexture(ofTexture,int)
ofxGrayScott:beginFx(int)
ofxGrayScott:endFx(int)
ofxGrayScott:compiled()
ofxGrayScott:getCode()
ofxGrayScott:getWidth()
ofxGrayScott:getHeight()
ofxGrayScott:getPasses()
ofxGrayScott:getResolution()
ofxGrayScott:getInternalFormat()
ofxGrayScott:getNumberOfCalledTextures()
ofxGrayScott:getBackBuffer()
ofxGrayScott:getTextureReference()
ofxGrayScott:clear(int)
ofxGrayScott:update()
ofxGrayScott:draw(ofRectangle)
ofxGrayScott:draw(int,int,float,float)
ofxGrayScott:setPasses(int)
ofxGrayScott:setDiffU(float)
ofxGrayScott:setDiffV(float)
ofxGrayScott:setK(float)
ofxGrayScott:setF(float)
ofxGrayScott:getDiffU()
ofxGrayScott:getDiffV()
ofxGrayScott:getK()
ofxGrayScott:getF()

ofxNoise()
ofxNoise:allocate(int,int,int)
ofxNoise:allocate(int,int)
ofxNoise:set(ofRectangle const)
ofxNoise:setCode(string)
ofxNoise:load(string)
ofxNoise:compileCode()
ofxNoise:setPasses(int)
ofxNoise:setInternalFormat(int)
ofxNoise:setTexture(ofTexture,int)
ofxNoise:beginFx(int)
ofxNoise:endFx(int)
ofxNoise:compiled()
ofxNoise:getCode()
ofxNoise:getWidth()
ofxNoise:getHeight()
ofxNoise:getPasses()
ofxNoise:getResolution()
ofxNoise:getInternalFormat()
ofxNoise:getNumberOfCalledTextures()
ofxNoise:getBackBuffer()
ofxNoise:getTextureReference()
ofxNoise:clear(int)
ofxNoise:update()
ofxNoise:draw(ofRectangle)
ofxNoise:draw(int,int,float,float)
ofxNoise:setZoom(float)
ofxNoise:clear()

ofxTint()
ofxTint:allocate(int,int,int)
ofxTint:allocate(int,int)
ofxTint:set(ofRectangle const)
ofxTint:setCode(string)
ofxTint:load(string)
ofxTint:compileCode()
ofxTint:setPasses(int)
ofxTint:setInternalFormat(int)
ofxTint:setTexture(ofTexture,int)
ofxTint:beginFx(int)
ofxTint:endFx(int)
ofxTint:compiled()
ofxTint:getCode()
ofxTint:getWidth()
ofxTint:getHeight()
ofxTint:getPasses()
ofxTint:getResolution()
ofxTint:getInternalFormat()
ofxTint:getNumberOfCalledTextures()
ofxTint:getBackBuffer()
ofxTint:getTextureReference()
ofxTint:clear(int)
ofxTint:update()
ofxTint:draw(ofRectangle)
ofxTint:draw(int,int,float,float)
ofxTint:setZoom(float)
ofxTint:setFade(float)
ofxTint:clear()

ofxFlocking()
ofxFlocking:allocate(int,int,int)
ofxFlocking:allocate(int,int)
ofxFlocking:set(ofRectangle const)
ofxFlocking:setCode(string)
ofxFlocking:load(string)
ofxFlocking:compileCode()
ofxFlocking:setPasses(int)
ofxFlocking:setInternalFormat(int)
ofxFlocking:setTexture(ofTexture,int)
ofxFlocking:beginFx(int)
ofxFlocking:endFx(int)
ofxFlocking:compiled()
ofxFlocking:getCode()
ofxFlocking:getWidth()
ofxFlocking:getHeight()
ofxFlocking:getPasses()
ofxFlocking:getResolution()
ofxFlocking:getInternalFormat()
ofxFlocking:getNumberOfCalledTextures()
ofxFlocking:getBackBuffer()
ofxFlocking:getTextureReference()
ofxFlocking:clear(int)
ofxFlocking:update()
ofxFlocking:draw(ofRectangle)
ofxFlocking:draw(int,int,float,float)
ofxFlocking:setParticleSize(float)
ofxFlocking:setTimpeStep(float)

ofxFluid()
ofxFluid:allocate(int,int,int)
ofxFluid:allocate(int,int)
ofxFluid:set(ofRectangle const)
ofxFluid:setCode(string)
ofxFluid:load(string)
ofxFluid:compileCode()
ofxFluid:setPasses(int)
ofxFluid:setInternalFormat(int)
ofxFluid:setTexture(ofTexture,int)
ofxFluid:beginFx(int)
ofxFluid:endFx(int)
ofxFluid:compiled()
ofxFluid:getCode()
ofxFluid:getWidth()
ofxFluid:getHeight()
ofxFluid:getPasses()
ofxFluid:getResolution()
ofxFluid:getInternalFormat()
ofxFluid:getNumberOfCalledTextures()
ofxFluid:getBackBuffer()
ofxFluid:getTextureReference()
ofxFluid:clear(int)
ofxFluid:update()
ofxFluid:draw(ofRectangle)
ofxFluid:draw(int,int,float,float)
ofxFluid:setTexture(ofTexture)
ofxFluid:setVelocity(ofTexture)
ofxFluid:setTemperature(ofTexture)
ofxFluid:setGravity(ofPoint)
ofxFluid:allocate(int,int,float)
ofxFluid:addTemporalForce(ofPoint,ofPoint,ofFloatColor,float,float,float)
ofxFluid:addConstantForce(ofPoint,ofPoint,ofFloatColor,float,float,float)

ofxBounce()
ofxBounce:allocate(int,int,int)
ofxBounce:allocate(int,int)
ofxBounce:set(ofRectangle const)
ofxBounce:setCode(string)
ofxBounce:load(string)
ofxBounce:compileCode()
ofxBounce:setPasses(int)
ofxBounce:setInternalFormat(int)
ofxBounce:setTexture(ofTexture,int)
ofxBounce:beginFx(int)
ofxBounce:endFx(int)
ofxBounce:compiled()
ofxBounce:getCode()
ofxBounce:getWidth()
ofxBounce:getHeight()
ofxBounce:getPasses()
ofxBounce:getResolution()
ofxBounce:getInternalFormat()
ofxBounce:getNumberOfCalledTextures()
ofxBounce:getBackBuffer()
ofxBounce:getTextureReference()
ofxBounce:clear(int)
ofxBounce:update()
ofxBounce:draw(ofRectangle)
ofxBounce:draw(int,int,float,float)

ofxDisplacePixels()
ofxDisplacePixels:allocate(int,int,int)
ofxDisplacePixels:allocate(int,int)
ofxDisplacePixels:set(ofRectangle const)
ofxDisplacePixels:setCode(string)
ofxDisplacePixels:load(string)
ofxDisplacePixels:compileCode()
ofxDisplacePixels:setPasses(int)
ofxDisplacePixels:setInternalFormat(int)
ofxDisplacePixels:setTexture(ofTexture,int)
ofxDisplacePixels:beginFx(int)
ofxDisplacePixels:endFx(int)
ofxDisplacePixels:compiled()
ofxDisplacePixels:getCode()
ofxDisplacePixels:getWidth()
ofxDisplacePixels:getHeight()
ofxDisplacePixels:getPasses()
ofxDisplacePixels:getResolution()
ofxDisplacePixels:getInternalFormat()
ofxDisplacePixels:getNumberOfCalledTextures()
ofxDisplacePixels:getBackBuffer()
ofxDisplacePixels:getTextureReference()
ofxDisplacePixels:clear(int)
ofxDisplacePixels:update()
ofxDisplacePixels:draw(ofRectangle)
ofxDisplacePixels:draw(int,int,float,float)

ofxNormals()
ofxNormals:allocate(int,int,int)
ofxNormals:allocate(int,int)
ofxNormals:set(ofRectangle const)
ofxNormals:setCode(string)
ofxNormals:load(string)
ofxNormals:compileCode()
ofxNormals:setPasses(int)
ofxNormals:setInternalFormat(int)
ofxNormals:setTexture(ofTexture,int)
ofxNormals:beginFx(int)
ofxNormals:endFx(int)
ofxNormals:compiled()
ofxNormals:getCode()
ofxNormals:getWidth()
ofxNormals:getHeight()
ofxNormals:getPasses()
ofxNormals:getResolution()
ofxNormals:getInternalFormat()
ofxNormals:getNumberOfCalledTextures()
ofxNormals:getBackBuffer()
ofxNormals:getTextureReference()
ofxNormals:clear(int)
ofxNormals:update()
ofxNormals:draw(ofRectangle)
ofxNormals:draw(int,int,float,float)

ofxRipples()
ofxRipples:allocate(int,int,int)
ofxRipples:allocate(int,int)
ofxRipples:set(ofRectangle const)
ofxRipples:setCode(string)
ofxRipples:load(string)
ofxRipples:compileCode()
ofxRipples:setPasses(int)
ofxRipples:setInternalFormat(int)
ofxRipples:setTexture(ofTexture,int)
ofxRipples:beginFx(int)
ofxRipples:endFx(int)
ofxRipples:compiled()
ofxRipples:getCode()
ofxRipples:getWidth()
ofxRipples:getHeight()
ofxRipples:getPasses()
ofxRipples:getResolution()
ofxRipples:getInternalFormat()
ofxRipples:getNumberOfCalledTextures()
ofxRipples:getBackBuffer()
ofxRipples:getTextureReference()
ofxRipples:clear(int)
ofxRipples:update()
ofxRipples:draw(ofRectangle)
ofxRipples:draw(int,int,float,float)
ofxRipples:beginFx()
ofxRipples:endFx()

ofxThreshold()
ofxThreshold:allocate(int,int,int)
ofxThreshold:allocate(int,int)
ofxThreshold:set(ofRectangle const)
ofxThreshold:setCode(string)
ofxThreshold:load(string)
ofxThreshold:compileCode()
ofxThreshold:setPasses(int)
ofxThreshold:setInternalFormat(int)
ofxThreshold:setTexture(ofTexture,int)
ofxThreshold:beginFx(int)
ofxThreshold:endFx(int)
ofxThreshold:compiled()
ofxThreshold:getCode()
ofxThreshold:getWidth()
ofxThreshold:getHeight()
ofxThreshold:getPasses()
ofxThreshold:getResolution()
ofxThreshold:getInternalFormat()
ofxThreshold:getNumberOfCalledTextures()
ofxThreshold:getBackBuffer()
ofxThreshold:getTextureReference()
ofxThreshold:clear(int)
ofxThreshold:update()
ofxThreshold:draw(ofRectangle)
ofxThreshold:draw(int,int,float,float)

ofxRotate()
ofxRotate:allocate(int,int,int)
ofxRotate:allocate(int,int)
ofxRotate:set(ofRectangle const)
ofxRotate:setCode(string)
ofxRotate:load(string)
ofxRotate:compileCode()
ofxRotate:setPasses(int)
ofxRotate:setInternalFormat(int)
ofxRotate:setTexture(ofTexture,int)
ofxRotate:beginFx(int)
ofxRotate:endFx(int)
ofxRotate:compiled()
ofxRotate:getCode()
ofxRotate:getWidth()
ofxRotate:getHeight()
ofxRotate:getPasses()
ofxRotate:getResolution()
ofxRotate:getInternalFormat()
ofxRotate:getNumberOfCalledTextures()
ofxRotate:getBackBuffer()
ofxRotate:getTextureReference()
ofxRotate:clear(int)
ofxRotate:update()
ofxRotate:draw(ofRectangle)
ofxRotate:draw(int,int,float,float)
ofxRotate:setRotation(float)

ofxKaleidoscope()
ofxKaleidoscope:allocate(int,int,int)
ofxKaleidoscope:allocate(int,int)
ofxKaleidoscope:set(ofRectangle const)
ofxKaleidoscope:setCode(string)
ofxKaleidoscope:load(string)
ofxKaleidoscope:compileCode()
ofxKaleidoscope:setPasses(int)
ofxKaleidoscope:setInternalFormat(int)
ofxKaleidoscope:setTexture(ofTexture,int)
ofxKaleidoscope:beginFx(int)
ofxKaleidoscope:endFx(int)
ofxKaleidoscope:compiled()
ofxKaleidoscope:getCode()
ofxKaleidoscope:getWidth()
ofxKaleidoscope:getHeight()
ofxKaleidoscope:getPasses()
ofxKaleidoscope:getResolution()
ofxKaleidoscope:getInternalFormat()
ofxKaleidoscope:getNumberOfCalledTextures()
ofxKaleidoscope:getBackBuffer()
ofxKaleidoscope:getTextureReference()
ofxKaleidoscope:clear(int)
ofxKaleidoscope:update()
ofxKaleidoscope:draw(ofRectangle)
ofxKaleidoscope:draw(int,int,float,float)
ofxKaleidoscope:setRotation(float)
ofxKaleidoscope:setFacesRotation(float)
ofxKaleidoscope:setTotalFaces(float)

ofxGameCamera()
ofxGameCamera:setFov(float)
ofxGameCamera:setNearClip(float)
ofxGameCamera:setFarClip(float)
ofxGameCamera:setLensOffset(ofVec2f)
ofxGameCamera:setAspectRatio(float)
ofxGameCamera:setForceAspectRatio(bool)
ofxGameCamera:getFov()
ofxGameCamera:getNearClip()
ofxGameCamera:getFarClip()
ofxGameCamera:getLensOffset()
ofxGameCamera:getForceAspectRatio()
ofxGameCamera:getAspectRatio()
ofxGameCamera:setupPerspective(bool,float,float,float,ofVec2f)
ofxGameCamera:setupOffAxisViewPortal(ofVec3f,ofVec3f,ofVec3f)
ofxGameCamera:enableOrtho()
ofxGameCamera:disableOrtho()
ofxGameCamera:getOrtho()
ofxGameCamera:getModelViewMatrix()
ofxGameCamera:setPosition(float,float,float)
ofxGameCamera:setPosition(ofVec3f)
ofxGameCamera:setScale(float)
ofxGameCamera:setScale(float,float,float)
ofxGameCamera:setScale(ofVec3f)
ofxGameCamera:move(float,float,float)
ofxGameCamera:move(ofVec3f)
ofxGameCamera:truck(float)
ofxGameCamera:boom(float)
ofxGameCamera:dolly(float)
ofxGameCamera:tilt(float)
ofxGameCamera:pan(float)
ofxGameCamera:roll(float)
ofxGameCamera:rotate(float,ofVec3f)
ofxGameCamera:rotate(float,float,float,float)
ofxGameCamera:lookAt(ofVec3f,ofVec3f)
ofxGameCamera:orbit(float,float,float,ofVec3f)
ofxGameCamera:transformGL()
ofxGameCamera:restoreTransformGL()
ofxGameCamera:resetTransform()
ofxGameCamera:draw()
ofxGameCamera:getImagePlaneDistance(ofRectangle)
ofxGameCamera:getProjectionMatrix(ofRectangle)
ofxGameCamera:getModelViewProjectionMatrix(ofRectangle)
ofxGameCamera:worldToScreen(ofVec3f,ofRectangle)
ofxGameCamera:screenToWorld(ofVec3f,ofRectangle)
ofxGameCamera:worldToCamera(ofVec3f,ofRectangle)
ofxGameCamera:cameraToWorld(ofVec3f,ofRectangle)
ofxGameCamera:beginCamera(ofRectangle)
ofxGameCamera:endCamera()
ofxGameCamera:setup()
ofxGameCamera:updateRotation()
ofxGameCamera:saveCameraPosition()
ofxGameCamera:loadCameraPosition()
ofxGameCamera:setAnglesFromOrientation()
ofxGameCamera:reset()

ofxGaussian()

ofx1DExtruder()
ofx1DExtruder(float)
ofx1DExtruder:setPhysics(float,float,float)
ofx1DExtruder:setDamping(float)
ofx1DExtruder:setAccLimit(float)
ofx1DExtruder:setVelLimit(float)
ofx1DExtruder:getDamping()
ofx1DExtruder:getVelLimit()
ofx1DExtruder:getAccLimit()
ofx1DExtruder:update()
ofx1DExtruder:goHome()
ofx1DExtruder:draw()
ofx1DExtruder:getPos()
ofx1DExtruder:setPos(float)
ofx1DExtruder:setHome(float)
ofx1DExtruder:getHome()
ofx1DExtruder:setPosAndHome(float)
ofx1DExtruder:addForce(float)

ofxBehavior()
ofxBehavior:update()
ofxBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxBehavior:isEnabled()
ofxBehavior:getMagnitude()
ofxBehavior:setMagnitude(float)

ofxBoidParticle()
ofxBoidParticle(ofVec3f)
ofxBoidParticle:setBorders(float,float)
ofxBoidParticle:update(float)
ofxBoidParticle:draw()
ofxBoidParticle:drawVertex()
ofxBoidParticle:borders()
ofxBoidParticle:elasticBorder(float)
ofxBoidParticle:circleborders()
ofxBoidParticle:setRadius(float)
ofxBoidParticle:setPos(ofVec3f)
ofxBoidParticle:setVel(ofVec3f)
ofxBoidParticle:setAcc(ofVec3f)
ofxBoidParticle:setHome(ofVec3f)
ofxBoidParticle:setHome(float,float,float)
ofxBoidParticle:setColor(ofColor)
ofxBoidParticle:setDamping(float)
ofxBoidParticle:setAccerationLimit(float)
ofxBoidParticle:setVelocityLimit(float)
ofxBoidParticle:addExternalForce(ofVec3f)
ofxBoidParticle:addSpringForce(ofVec3f)
ofxBoidParticle:setFixed(bool)
ofxBoidParticle:isFixed()
ofxBoidParticle:addForce(ofVec3f)
ofxBoidParticle:getPos()
ofxBoidParticle:getHome()
ofxBoidParticle:getPpos()
ofxBoidParticle:getVel()
ofxBoidParticle:getAcc()
ofxBoidParticle:getColor()
ofxBoidParticle:setColorAlpha(float)
ofxBoidParticle:getColorAlpha()
ofxBoidParticle:getRadius()
ofxBoidParticle:getID()
ofxBoidParticle:setID(int)
ofxBoidParticle:decay(float)
ofxBoidParticle:getLifeTime()
ofxBoidParticle:isDead()
ofxBoidParticle:setZoneRadius(float)
ofxBoidParticle:separation()
ofxBoidParticle:drawDebug()
ofxBoidParticle:borders(float,float)
ofxBoidParticle:addNeighborPos(ofVec3f)

ofxBoidSystem()
ofxBoidSystem:clear()
ofxBoidSystem:update(float)
ofxBoidSystem:updateAndDecay(float,float)
ofxBoidSystem:setDamping(float)
ofxBoidSystem:setVelocityLimit(float)
ofxBoidSystem:setAccerationLimit(float)
ofxBoidSystem:randomize(float)
ofxBoidSystem:draw()
ofxBoidSystem:addParticle
ofxBoidSystem:getCount()
ofxBoidSystem:getParticle(int)
ofxBoidSystem:angleSigned(ofVec3f,ofVec3f)
ofxBoidSystem:setZoneRadius(float)
ofxBoidSystem:setThreshLow(float)
ofxBoidSystem:setThreshHigh(float)
ofxBoidSystem:setAttractForceConstant(float)
ofxBoidSystem:setRepelForceConstant(float)
ofxBoidSystem:setCohesionForceConstant(float)
ofxBoidSystem:setAlignForceConstant(float)
ofxBoidSystem:setPerlinForceConstant(float)
ofxBoidSystem:setVelLimitLow(float)
ofxBoidSystem:setVelLimitHigh(float)
ofxBoidSystem:setVelLimitLowAndHigh(float,float)
ofxBoidSystem:setAccLimitHigh(float)

ofxBufferEffectorBehavior()
ofxBufferEffectorBehavior:update()
ofxBufferEffectorBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxBufferEffectorBehavior:isEnabled()
ofxBufferEffectorBehavior:getMagnitude()
ofxBufferEffectorBehavior:setMagnitude(float)
ofxBufferEffectorBehavior:setup()
ofxBufferEffectorBehavior:getBuffer()
ofxBufferEffectorBehavior:setBuffer(float*,int)
ofxBufferEffectorBehavior:getBufferSize()

ofxCircle()
ofxCircle(float,int,ofVec3f)
ofxCircle:setRadius(float)
ofxCircle:reset()

ofxDamperBehavior()
ofxDamperBehavior:update()
ofxDamperBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxDamperBehavior:isEnabled()
ofxDamperBehavior:getMagnitude()
ofxDamperBehavior:setMagnitude(float)
ofxDamperBehavior:setup()

ofxDistorterBehavior()
ofxDistorterBehavior:update()
ofxDistorterBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxDistorterBehavior:isEnabled()
ofxDistorterBehavior:getMagnitude()
ofxDistorterBehavior:setMagnitude(float)
ofxDistorterBehavior:setup()
ofxDistorterBehavior:getPosition()
ofxDistorterBehavior:setPosition(ofVec3f)
ofxDistorterBehavior:getRadius()
ofxDistorterBehavior:setRadius(float)
ofxDistorterBehavior:getExpFactor()
ofxDistorterBehavior:setExpFactor(float)

ofxElectroStaticBehavior()
ofxElectroStaticBehavior:update()
ofxElectroStaticBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxElectroStaticBehavior:isEnabled()
ofxElectroStaticBehavior:getMagnitude()
ofxElectroStaticBehavior:setMagnitude(float)
ofxElectroStaticBehavior:setup()

ofxField2D()
ofxField2D:init(int,int,int,int)
ofxField2D:resize(int,int)
ofxField2D:reset()
ofxField2D:randomize()
ofxField2D:update()
ofxField2D:input(float,float,float,float,float)
ofxField2D:setViscosity(float)
ofxField2D:setDensityDecay(float)
ofxField2D:setDifferential(float)
ofxField2D:setDt(float)
ofxField2D:setIterations(int)
ofxField2D:setPointSize(float)
ofxField2D:setLineWidth(float)
ofxField2D:getPointSize()
ofxField2D:getLineWidth()
ofxField2D:getViscosity()
ofxField2D:getDensityDecay()
ofxField2D:getDifferential()
ofxField2D:getDt()
ofxField2D:getIterations()
ofxField2D:getVector(int,int,bool)
ofxField2D:getDensity(int,int)
ofxField2D:adaptFromImage(ofPixels,float)
ofxField2D:draw()
ofxField2D:getRenderType()
ofxField2D:setRenderType(int)
ofxField2D:getWidth()
ofxField2D:getHeight()

ofxFieldAgitator()
ofxFieldAgitator(ofVec3f)
ofxFieldAgitator:update()
ofxFieldAgitator:getAngle()
ofxFieldAgitator:getDistance()
ofxFieldAgitator:draw()

ofxGenericShape()
ofxGenericShape(ofPolyline,int,float,ofVec3f)
ofxGenericShape:init(ofPolyline,int,float,ofVec3f)
ofxGenericShape:update()
ofxGenericShape:setVelocityLimit(float)
ofxGenericShape:setAccerationLimit(float)
ofxGenericShape:setDamping(float)
ofxGenericShape:setRadius(float,bool)
ofxGenericShape:setOffset(float,float,bool)

ofxHomingBehavior()
ofxHomingBehavior:update()
ofxHomingBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxHomingBehavior:isEnabled()
ofxHomingBehavior:getMagnitude()
ofxHomingBehavior:setMagnitude(float)
ofxHomingBehavior:setup()

ofxParticle()
ofxParticle(ofVec3f)
ofxParticle:setBorders(float,float)
ofxParticle:update(float)
ofxParticle:draw()
ofxParticle:drawVertex()
ofxParticle:borders()
ofxParticle:elasticBorder(float)
ofxParticle:circleborders()
ofxParticle:setRadius(float)
ofxParticle:setPos(ofVec3f)
ofxParticle:setVel(ofVec3f)
ofxParticle:setAcc(ofVec3f)
ofxParticle:setHome(ofVec3f)
ofxParticle:setHome(float,float,float)
ofxParticle:setColor(ofColor)
ofxParticle:setDamping(float)
ofxParticle:setAccerationLimit(float)
ofxParticle:setVelocityLimit(float)
ofxParticle:addExternalForce(ofVec3f)
ofxParticle:addSpringForce(ofVec3f)
ofxParticle:setFixed(bool)
ofxParticle:isFixed()
ofxParticle:addForce(ofVec3f)
ofxParticle:getPos()
ofxParticle:getHome()
ofxParticle:getPpos()
ofxParticle:getVel()
ofxParticle:getAcc()
ofxParticle:getColor()
ofxParticle:setColorAlpha(float)
ofxParticle:getColorAlpha()
ofxParticle:getRadius()
ofxParticle:getID()
ofxParticle:setID(int)
ofxParticle:decay(float)
ofxParticle:getLifeTime()
ofxParticle:isDead()

ofxParticleSystem()
ofxParticleSystem:clear()
ofxParticleSystem:update(float)
ofxParticleSystem:updateAndDecay(float,float)
ofxParticleSystem:setDamping(float)
ofxParticleSystem:setVelocityLimit(float)
ofxParticleSystem:setAccerationLimit(float)
ofxParticleSystem:randomize(float)
ofxParticleSystem:draw()
ofxParticleSystem:addParticle
ofxParticleSystem:getCount()
ofxParticleSystem:getParticle(int)

ofxPerlinBehavior()
ofxPerlinBehavior:update()
ofxPerlinBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxPerlinBehavior:isEnabled()
ofxPerlinBehavior:getMagnitude()
ofxPerlinBehavior:setMagnitude(float)
ofxPerlinBehavior:setup()

ofxRezaParticle()
ofxRezaParticle(ofVec3f)
ofxRezaParticle:setBorders(float,float)
ofxRezaParticle:update(float)
ofxRezaParticle:draw()
ofxRezaParticle:drawVertex()
ofxRezaParticle:borders()
ofxRezaParticle:elasticBorder(float)
ofxRezaParticle:circleborders()
ofxRezaParticle:setRadius(float)
ofxRezaParticle:setPos(ofVec3f)
ofxRezaParticle:setVel(ofVec3f)
ofxRezaParticle:setAcc(ofVec3f)
ofxRezaParticle:setHome(ofVec3f)
ofxRezaParticle:setHome(float,float,float)
ofxRezaParticle:setColor(ofColor)
ofxRezaParticle:setDamping(float)
ofxRezaParticle:setAccerationLimit(float)
ofxRezaParticle:setVelocityLimit(float)
ofxRezaParticle:addExternalForce(ofVec3f)
ofxRezaParticle:addSpringForce(ofVec3f)
ofxRezaParticle:setFixed(bool)
ofxRezaParticle:isFixed()
ofxRezaParticle:addForce(ofVec3f)
ofxRezaParticle:getPos()
ofxRezaParticle:getHome()
ofxRezaParticle:getPpos()
ofxRezaParticle:getVel()
ofxRezaParticle:getAcc()
ofxRezaParticle:getColor()
ofxRezaParticle:setColorAlpha(float)
ofxRezaParticle:getColorAlpha()
ofxRezaParticle:getRadius()
ofxRezaParticle:getID()
ofxRezaParticle:setID(int)
ofxRezaParticle:decay(float)
ofxRezaParticle:getLifeTime()
ofxRezaParticle:isDead()
ofxRezaParticle:goSpherical()
ofxRezaParticle:goHome()
ofxRezaParticle:addDistortion()
ofxRezaParticle:setCenterPos(ofVec3f)
ofxRezaParticle:setTargetHome(bool)
ofxRezaParticle:toggleTargetHome()
ofxRezaParticle:setTargetSphere(bool)
ofxRezaParticle:toggleTargetSphere()
ofxRezaParticle:setRandomizeVel()
ofxRezaParticle:setRandomizeVel(float)
ofxRezaParticle:setSphericalRadius(float)
ofxRezaParticle:getSphericalRadius()
ofxRezaParticle:setDistortion(bool)
ofxRezaParticle:toggleDistortion()
ofxRezaParticle:setDistortVector(ofVec3f)
ofxRezaParticle:goSphericalCenter()
ofxRezaParticle:repulse()
ofxRezaParticle:setRepulsion(bool)
ofxRezaParticle:toggleRepulsion()
ofxRezaParticle:setAbsCenter(ofVec3f)
ofxRezaParticle:toggleAbsCenter()
ofxRezaParticle:setCenterTargeting(bool)
ofxRezaParticle:setSAMulti(float)

ofxRezaParticleSystem()
ofxRezaParticleSystem:clear()
ofxRezaParticleSystem:update()
ofxRezaParticleSystem:updateAndDecay(float,float)
ofxRezaParticleSystem:setDamping(float)
ofxRezaParticleSystem:setVelocityLimit(float)
ofxRezaParticleSystem:setAccerationLimit(float)
ofxRezaParticleSystem:randomize(float)
ofxRezaParticleSystem:draw()
ofxRezaParticleSystem:addParticle
ofxRezaParticleSystem:getCount()
ofxRezaParticleSystem:getParticle(int)
ofxRezaParticleSystem:setCenter
ofxRezaParticleSystem:setTargetHome(bool)
ofxRezaParticleSystem:getTargetHome()
ofxRezaParticleSystem:toggleTargetHome()
ofxRezaParticleSystem:setTargetSphere(bool)
ofxRezaParticleSystem:getTargetSphere()
ofxRezaParticleSystem:toggleTargetSphere()
ofxRezaParticleSystem:setSphericalRadius(float)
ofxRezaParticleSystem:getSphericalRadius()
ofxRezaParticleSystem:setRandomizeVel()
ofxRezaParticleSystem:setRandomizeVel(float)
ofxRezaParticleSystem:toggleDistortion()
ofxRezaParticleSystem:setDistortion(bool)
ofxRezaParticleSystem:setDistortVector
ofxRezaParticleSystem:setRepulsion(bool)
ofxRezaParticleSystem:getRepulsion()
ofxRezaParticleSystem:toggleRepulsion()
ofxRezaParticleSystem:billBoard(ofVec3f,ofVec3f)
ofxRezaParticleSystem:setCameraRef(ofEasyCam)
ofxRezaParticleSystem:setGlowImage(ofImage)

ofxRParticle()
ofxRParticle(ofVec3f)
ofxRParticle:calculateAcceleration(ofVec3f,ofVec3f,float)
ofxRParticle:setRadius(float)
ofxRParticle:setPos(ofVec3f)
ofxRParticle:setPpos(ofVec3f)
ofxRParticle:setVel(ofVec3f)
ofxRParticle:setAcc(ofVec3f)
ofxRParticle:setHome(ofVec3f)
ofxRParticle:setHome(float,float,float)
ofxRParticle:setColor(ofColor)
ofxRParticle:setDamping(float)
ofxRParticle:setRestitution(float)
ofxRParticle:setAccerationLimit(float)
ofxRParticle:setVelocityLimit(float)
ofxRParticle:addExternalForce(ofVec3f)
ofxRParticle:addSpringForce(ofVec3f)
ofxRParticle:setFixed(bool)
ofxRParticle:isFixed()
ofxRParticle:addForce(ofVec3f)
ofxRParticle:getPos()
ofxRParticle:getHome()
ofxRParticle:getPpos()
ofxRParticle:getVel()
ofxRParticle:getAcc()
ofxRParticle:getColor()
ofxRParticle:setColorAlpha(float)
ofxRParticle:getColorAlpha()
ofxRParticle:getRadius()
ofxRParticle:getID()
ofxRParticle:setID(int)
ofxRParticle:getLifeTime()
ofxRParticle:isDead()
ofxRParticle:setParticleData(ofxRParticleData*)

ofxRParticleData()

ofxRParticleGlowieRenderer()
ofxRParticleGlowieRenderer:setup()
ofxRParticleGlowieRenderer:draw()
ofxRParticleGlowieRenderer:setPointSize(float)
ofxRParticleGlowieRenderer:setAdditiveBlending(bool)
ofxRParticleGlowieRenderer:setAxisAngleOffsets(ofx1DExtruder,ofx1DExtruder,ofx1DExtruder)
ofxRParticleGlowieRenderer:setCamPtr(ofEasyCam)
ofxRParticleGlowieRenderer:setGlowImage(ofImage)

ofxRParticleRenderer()
ofxRParticleRenderer:setup()
ofxRParticleRenderer:draw()
ofxRParticleRenderer:setPointSize(float)
ofxRParticleRenderer:setAdditiveBlending(bool)

ofxRParticleSystem()
ofxRParticleSystem:clear()
ofxRParticleSystem:update()
ofxRParticleSystem:draw()
ofxRParticleSystem:addBehavior(ofxBehavior)
ofxRParticleSystem:addParticle(ofxRParticle)
ofxRParticleSystem:setDt(float)
ofxRParticleSystem:getDt()
ofxRParticleSystem:setDamping(float)
ofxRParticleSystem:getDamping()
ofxRParticleSystem:setRestitution(float)
ofxRParticleSystem:getRestitution()
ofxRParticleSystem:setVelocityLimit(float)
ofxRParticleSystem:getVelocityLimit()
ofxRParticleSystem:setAccelerationLimit(float)
ofxRParticleSystem:getAccelerationLimit()
ofxRParticleSystem:setCount(int)
ofxRParticleSystem:getCount()
ofxRParticleSystem:getParticle(int)
ofxRParticleSystem:setRenderer(ofxRParticleRenderer)
ofxRParticleSystem:setSolver(ofxSolver)
ofxRParticleSystem:randomize(float)

ofxSmartParticle()
ofxSmartParticle(ofVec3f)
ofxSmartParticle:setBorders(float,float)
ofxSmartParticle:update(float)
ofxSmartParticle:draw()
ofxSmartParticle:drawVertex()
ofxSmartParticle:borders()
ofxSmartParticle:elasticBorder(float)
ofxSmartParticle:circleborders()
ofxSmartParticle:setRadius(float)
ofxSmartParticle:setPos(ofVec3f)
ofxSmartParticle:setVel(ofVec3f)
ofxSmartParticle:setAcc(ofVec3f)
ofxSmartParticle:setHome(ofVec3f)
ofxSmartParticle:setHome(float,float,float)
ofxSmartParticle:setColor(ofColor)
ofxSmartParticle:setDamping(float)
ofxSmartParticle:setAccerationLimit(float)
ofxSmartParticle:setVelocityLimit(float)
ofxSmartParticle:addExternalForce(ofVec3f)
ofxSmartParticle:addSpringForce(ofVec3f)
ofxSmartParticle:setFixed(bool)
ofxSmartParticle:isFixed()
ofxSmartParticle:addForce(ofVec3f)
ofxSmartParticle:getPos()
ofxSmartParticle:getHome()
ofxSmartParticle:getPpos()
ofxSmartParticle:getVel()
ofxSmartParticle:getAcc()
ofxSmartParticle:getColor()
ofxSmartParticle:setColorAlpha(float)
ofxSmartParticle:getColorAlpha()
ofxSmartParticle:getRadius()
ofxSmartParticle:getID()
ofxSmartParticle:setID(int)
ofxSmartParticle:decay(float)
ofxSmartParticle:getLifeTime()
ofxSmartParticle:isDead()
ofxSmartParticle:goSpherical()
ofxSmartParticle:goHome()
ofxSmartParticle:addDistortion()
ofxSmartParticle:setCenterPos(ofVec3f)
ofxSmartParticle:setTargetHome(bool)
ofxSmartParticle:toggleTargetHome()
ofxSmartParticle:setTargetSphere(bool)
ofxSmartParticle:toggleTargetSphere()
ofxSmartParticle:setRandomizeVel()
ofxSmartParticle:setRandomizeVel(float)
ofxSmartParticle:setSphericalRadius(float)
ofxSmartParticle:getSphericalRadius()
ofxSmartParticle:setDistortion(bool)
ofxSmartParticle:toggleDistortion()
ofxSmartParticle:setDistortVector(ofVec3f)

ofxSmartParticleSystem()
ofxSmartParticleSystem:clear()
ofxSmartParticleSystem:update()
ofxSmartParticleSystem:updateAndDecay(float,float)
ofxSmartParticleSystem:setDamping(float)
ofxSmartParticleSystem:setVelocityLimit(float)
ofxSmartParticleSystem:setAccerationLimit(float)
ofxSmartParticleSystem:randomize(float)
ofxSmartParticleSystem:draw()
ofxSmartParticleSystem:addParticle
ofxSmartParticleSystem:getCount()
ofxSmartParticleSystem:getParticle(int)
ofxSmartParticleSystem:setCenter(ofVec3f*)
ofxSmartParticleSystem:setTargetHome(bool)
ofxSmartParticleSystem:getTargetHome()
ofxSmartParticleSystem:toggleTargetHome()
ofxSmartParticleSystem:setTargetSphere(bool)
ofxSmartParticleSystem:getTargetSphere()
ofxSmartParticleSystem:toggleTargetSphere()
ofxSmartParticleSystem:setSphericalRadius(float)
ofxSmartParticleSystem:getSphericalRadius()
ofxSmartParticleSystem:setRandomizeVel()
ofxSmartParticleSystem:setRandomizeVel(float)
ofxSmartParticleSystem:toggleDistortion()
ofxSmartParticleSystem:setDistortion(bool)
ofxSmartParticleSystem:setDistortVector(ofVec3f*)

ofxSolver(float)
ofxSolver:update(ofxRParticle)
ofxSolver:getDt()

ofxSphericalAttractionBehavior()
ofxSphericalAttractionBehavior:update()
ofxSphericalAttractionBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxSphericalAttractionBehavior:isEnabled()
ofxSphericalAttractionBehavior:getMagnitude()
ofxSphericalAttractionBehavior:setMagnitude(float)
ofxSphericalAttractionBehavior:setup()
ofxSphericalAttractionBehavior:getPosition()
ofxSphericalAttractionBehavior:setPosition(ofVec3f)
ofxSphericalAttractionBehavior:getRadius()
ofxSphericalAttractionBehavior:setRadius(float)

ofxSpring()
ofxSpring:update(float)
ofxSpring:draw()
ofxSpring:getForce(int)
ofxSpring:setRestDistance(float)
ofxSpring:getRestDistance()
ofxSpring:getK()
ofxSpring:setK(float)
ofxSpring:getPos(int)
ofxSpring:setID(int)
ofxSpring:getID()
ofxSpring:getDelta()
ofxSpring:setColor(ofColor)
ofxSpring:getColor()
ofxSpring:setColorAlpha(float)
ofxSpring:getColorAlpha()

ofxSpringSystem()
ofxSpringSystem:clear()
ofxSpringSystem:update(float)
ofxSpringSystem:draw()
ofxSpringSystem:addSpring(ofxSpring)
ofxSpringSystem:getCount()
ofxSpringSystem:getSpring(int)
ofxSpringSystem:setRestDistance(float)

ofxSuperShape()
ofxSuperShape:update()
ofxSuperShape:setVelocityLimit(float)
ofxSuperShape:setAccerationLimit(float)
ofxSuperShape:setDamping(float)
ofxSuperShape:setRadius(float,bool)
ofxSuperShape:setA(float,bool)
ofxSuperShape:setB(float,bool)
ofxSuperShape:setM(float,bool)
ofxSuperShape:setN1(float,bool)
ofxSuperShape:setN2(float,bool)
ofxSuperShape:setN3(float,bool)
ofxSuperShape:reset()

ofxSwarmBehavior()
ofxSwarmBehavior:update()
ofxSwarmBehavior:actUpon(ofxRParticle,ofVec3f,ofVec3f,ofVec3f,float)
ofxSwarmBehavior:isEnabled()
ofxSwarmBehavior:getMagnitude()
ofxSwarmBehavior:setMagnitude(float)
ofxSwarmBehavior:setup()

ofxTrailParticle()
ofxTrailParticle(ofVec3f)
ofxTrailParticle(ofVec3f,int)
ofxTrailParticle:setBorders(float,float)
ofxTrailParticle:update()
ofxTrailParticle:draw()
ofxTrailParticle:drawVertex(int)
ofxTrailParticle:borders()
ofxTrailParticle:elasticBorder(float)
ofxTrailParticle:circleborders()
ofxTrailParticle:setRadius(float)
ofxTrailParticle:setPos(ofVec3f)
ofxTrailParticle:setVel(ofVec3f)
ofxTrailParticle:setAcc(ofVec3f)
ofxTrailParticle:setHome(ofVec3f)
ofxTrailParticle:setHome(float,float,float)
ofxTrailParticle:setColor(ofColor)
ofxTrailParticle:setDamping(float)
ofxTrailParticle:setAccerationLimit(float)
ofxTrailParticle:setVelocityLimit(float)
ofxTrailParticle:addExternalForce(ofVec3f)
ofxTrailParticle:addSpringForce(ofVec3f)
ofxTrailParticle:setFixed(bool)
ofxTrailParticle:isFixed()
ofxTrailParticle:addForce(ofVec3f)
ofxTrailParticle:getPos()
ofxTrailParticle:getHome()
ofxTrailParticle:getPpos()
ofxTrailParticle:getVel()
ofxTrailParticle:getAcc()
ofxTrailParticle:getColor()
ofxTrailParticle:setColorAlpha(float)
ofxTrailParticle:getColorAlpha()
ofxTrailParticle:getRadius()
ofxTrailParticle:getID()
ofxTrailParticle:setID(int)
ofxTrailParticle:decay(float)
ofxTrailParticle:getLifeTime()
ofxTrailParticle:isDead()

ofxVerletSolver(float)
ofxVerletSolver:update(ofxRParticle)
ofxVerletSolver:getDt()

IPCameraDef()
IPCameraDef(string)
IPCameraDef(string,string,string,string)

ofxIpVideoGrabber()
ofxIpVideoGrabber:update()
ofxIpVideoGrabber:connect()
ofxIpVideoGrabber:disconnect()
ofxIpVideoGrabber:waitForDisconnect()
ofxIpVideoGrabber:isFrameNew()
ofxIpVideoGrabber:close()
ofxIpVideoGrabber:reset()
ofxIpVideoGrabber:getPixelsRef()
ofxIpVideoGrabber:getTextureReference()
ofxIpVideoGrabber:setUseTexture(bool)
ofxIpVideoGrabber:draw(float,float)
ofxIpVideoGrabber:draw(float,float,float,float)
ofxIpVideoGrabber:draw(ofPoint)
ofxIpVideoGrabber:draw(ofRectangle)
ofxIpVideoGrabber:setAnchorPercent(float,float)
ofxIpVideoGrabber:setAnchorPoint(float,float)
ofxIpVideoGrabber:resetAnchor()
ofxIpVideoGrabber:getWidth()
ofxIpVideoGrabber:getHeight()
ofxIpVideoGrabber:getNumFramesReceived()
ofxIpVideoGrabber:getNumBytesReceived()
ofxIpVideoGrabber:getFrameRate()
ofxIpVideoGrabber:getBitRate()
ofxIpVideoGrabber:getCameraName()
ofxIpVideoGrabber:setCameraName(string)
ofxIpVideoGrabber:setURI(string)
ofxIpVideoGrabber:getURI()
ofxIpVideoGrabber:getHost()
ofxIpVideoGrabber:getQuery()
ofxIpVideoGrabber:getPort()
ofxIpVideoGrabber:getFragment()
ofxIpVideoGrabber:setCookie(string,string)
ofxIpVideoGrabber:eraseCookie(string)
ofxIpVideoGrabber:getCookie(string)
ofxIpVideoGrabber:setUsername(string)
ofxIpVideoGrabber:setPassword(string)
ofxIpVideoGrabber:getUsername()
ofxIpVideoGrabber:getPassword()
ofxIpVideoGrabber:setUseProxy(bool)
ofxIpVideoGrabber:setProxyUsername(string)
ofxIpVideoGrabber:setProxyPassword(string)
ofxIpVideoGrabber:setProxyHost(string)
ofxIpVideoGrabber:setProxyPort(UInt16)
ofxIpVideoGrabber:getUseProxy()
ofxIpVideoGrabber:getProxyUsername()
ofxIpVideoGrabber:getProxyPassword()
ofxIpVideoGrabber:getProxyHost()
ofxIpVideoGrabber:getProxyPort()
ofxIpVideoGrabber:isConnected()
ofxIpVideoGrabber:hasConnectionFailed()
ofxIpVideoGrabber:setReconnectTimeout(unsigned long)
ofxIpVideoGrabber:getReconnectTimeout()
ofxIpVideoGrabber:getNeedsReconnect()
ofxIpVideoGrabber:getAutoReconnect()
ofxIpVideoGrabber:getReconnectCount()
ofxIpVideoGrabber:getMaxReconnects()
ofxIpVideoGrabber:setMaxReconnects(unsigned long)
ofxIpVideoGrabber:getAutoRetryDelay()
ofxIpVideoGrabber:setAutoRetryDelay(unsigned long)
ofxIpVideoGrabber:getNextAutoRetryTime()
ofxIpVideoGrabber:getTimeTillNextAutoRetry()
ofxIpVideoGrabber:setDefaultBoundaryMarker(string)
ofxIpVideoGrabber:getDefaultBoundaryMarker()

ofxJitterNetworkSender()
ofxJitterNetworkSender:setVerbose(bool)
ofxJitterNetworkSender:setup(string,int,bool)
ofxJitterNetworkSender:setMessageDelimiter(string)
ofxJitterNetworkSender:close()
ofxJitterNetworkSender:send(string)
ofxJitterNetworkSender:sendRaw(string)
ofxJitterNetworkSender:getNumReceivedBytes()
ofxJitterNetworkSender:sendRawBytes(char*, int)
ofxJitterNetworkSender:receive()
ofxJitterNetworkSender:receiveRaw()
ofxJitterNetworkSender:receiveRawBytes(char*,int)
ofxJitterNetworkSender:isConnected()
ofxJitterNetworkSender:getPort()
ofxJitterNetworkSender:getIP()
ofxJitterNetworkSender:setup(int,bool)
ofxJitterNetworkSender:sendFrame(ofPixelsRef)
ofxJitterNetworkSender:sendText(string)

ofxKinect()
ofxKinect:init(bool,bool,bool)
ofxKinect:clear()
ofxKinect:setRegistration(bool)
ofxKinect:open(int)
ofxKinect:open(string)
ofxKinect:close()
ofxKinect:isConnected()
ofxKinect:isFrameNew()
ofxKinect:update()
ofxKinect:getDistanceAt(int,int)
ofxKinect:getDistanceAt(ofPoint)
ofxKinect:getWorldCoordinateAt(int,int)
ofxKinect:getWorldCoordinateAt(float,float,float)
ofxKinect:getColorAt(int,int)
ofxKinect:getColorAt(ofPoint)
ofxKinect:getRawAccel()
ofxKinect:getMksAccel()
ofxKinect:getAccelPitch()
ofxKinect:getAccelRoll()
ofxKinect:getPixels()
ofxKinect:getDepthPixels()
ofxKinect:getRawDepthPixels()
ofxKinect:getDistancePixels()
ofxKinect:getPixelsRef()
ofxKinect:getDepthPixelsRef()
ofxKinect:getRawDepthPixelsRef()
ofxKinect:getDistancePixelsRef()
ofxKinect:getTextureReference()
ofxKinect:getDepthTextureReference()
ofxKinect:enableDepthNearValueWhite(bool)
ofxKinect:isDepthNearValueWhite()
ofxKinect:setDepthClipping(float,float)
ofxKinect:getNearClipping()
ofxKinect:getFarClipping()
ofxKinect:setCameraTiltAngle(float)
ofxKinect:getCurrentCameraTiltAngle()
ofxKinect:getTargetCameraTiltAngle()
ofxKinect:setLed(LedMode)
ofxKinect:setUseTexture(bool)
ofxKinect:draw(float,float,float,float)
ofxKinect:draw(float,float)
ofxKinect:draw(ofPoint)
ofxKinect:draw(ofRectangle)
ofxKinect:drawDepth(float,float,float,float)
ofxKinect:drawDepth(float,float)
ofxKinect:drawDepth(ofPoint)
ofxKinect:drawDepth(ofRectangle)
ofxKinect:getDeviceId()
ofxKinect:getSerial()
ofxKinect:getHeight()
ofxKinect:getWidth()
ofxKinect:listDevices()
ofxKinect:numTotalDevices()
ofxKinect:numAvailableDevices()
ofxKinect:numConnectedDevices()
ofxKinect:isDeviceConnected(int)
ofxKinect:isDeviceConnected(string)
ofxKinect:nextAvailableId()
ofxKinect:nextAvailableSerial()

ofxGetDateTimeAsString(string)
ofxMD5(string)

ofxOpticalFlowLK()
ofxOpticalFlowLK:setup(ofRectangle)
ofxOpticalFlowLK:setup(int,int)
ofxOpticalFlowLK:setup(int,int,double,int,int,int,int,double,bool,bool)
ofxOpticalFlowLK:reset()
ofxOpticalFlowLK:destroy()
ofxOpticalFlowLK:update(ofImage)
ofxOpticalFlowLK:update(ofxCvColorImage)
ofxOpticalFlowLK:update(ofxCvGrayscaleImage)
ofxOpticalFlowLK:update(ofVideoPlayer)
ofxOpticalFlowLK:update(ofVideoGrabber)
ofxOpticalFlowLK:getVelAtNorm(float,float)
ofxOpticalFlowLK:getVelAtPixel(int,int)
ofxOpticalFlowLK:draw(int,int,float,int)
ofxOpticalFlowLK:drawColored(int,int,float,int)
ofxOpticalFlowLK:setMirror(bool,bool)
ofxOpticalFlowLK:isInitialized()
ofxOpticalFlowLK:getPyramidScale()
ofxOpticalFlowLK:getPyramidLevels()
ofxOpticalFlowLK:getWindowSize()
ofxOpticalFlowLK:getIterationsPerLevel()
ofxOpticalFlowLK:getExpansionArea()
ofxOpticalFlowLK:getExpansionSigma()
ofxOpticalFlowLK:getFlowFeedback()
ofxOpticalFlowLK:getGaussianFiltering()
ofxOpticalFlowLK:setPyramidScale(double)
ofxOpticalFlowLK:setPyramidLevels(int)
ofxOpticalFlowLK:setWindowSize(int)
ofxOpticalFlowLK:setIterationsPerLevel(int)
ofxOpticalFlowLK:setExpansionArea(int)
ofxOpticalFlowLK:setExpansionSigma(double)
ofxOpticalFlowLK:setFlowFeedback(bool)
ofxOpticalFlowLK:setGaussianFiltering(bool)

ofxPBO()
ofxPBO:allocate(ofTexture,int)
ofxPBO:loadData(ofPixels)
ofxPBO:updateTexture()

ofxPBOVideoPlayer()
ofxPBOVideoPlayer:load(string)
ofxPBOVideoPlayer:play()
ofxPBOVideoPlayer:update()
ofxPBOVideoPlayer:draw()
ofxPBOVideoPlayer:isFrameNew()

ofxQRCodeGenerator()
ofxQRCodeGenerator:generate(string,int)

ofxQTKitAVScreenRecorder()
ofxQTKitAVScreenRecorder:setup(string,string)
ofxQTKitAVScreenRecorder:update()
ofxQTKitAVScreenRecorder:exit()
ofxQTKitAVScreenRecorder:initAudio(string,string)
ofxQTKitAVScreenRecorder:initAVRecording(string)
ofxQTKitAVScreenRecorder:startNewRecording(string)
ofxQTKitAVScreenRecorder:finishMovie(bool)
ofxQTKitAVScreenRecorder:addFrame(ofPixels)
ofxQTKitAVScreenRecorder:listAudioDevices()
ofxQTKitAVScreenRecorder:listAudioCodecs()
ofxQTKitAVScreenRecorder:getIsRecording()

ofxSlitScan()
ofxSlitScan:setup(int,int,int)
ofxSlitScan:setup(int,int,int,int)
ofxSlitScan:isSetup()
ofxSlitScan:setDelayMap(ofImage)
ofxSlitScan:addImage(ofImage)
ofxSlitScan:addImage
ofxSlitScan:getOutputImage()
ofxSlitScan:getDelayMap()
ofxSlitScan:pixelsForFrame
ofxSlitScan:setCapacity(int)
ofxSlitScan:setTimeDelayAndWidth(int,int)
ofxSlitScan:setTimeDelay(int)
ofxSlitScan:setTimeWidth(int)
ofxSlitScan:setBlending(bool)
ofxSlitScan:toggleBlending()
ofxSlitScan:getTimeDelay()
ofxSlitScan:getTimeWidth()
ofxSlitScan:getWidth()
ofxSlitScan:getHeight()
ofxSlitScan:getCapacity()
ofxSlitScan:getType()
ofxSlitScan:isBlending()

ofxSubtitles()
ofxSubtitles:load(string)
ofxSubtitles:save(string)
ofxSubtitles:add(float,string)
ofxSubtitles:add(float,float,string)
ofxSubtitles:getHowMany(float,float)
ofxSubtitles:getFirstSubN(float)
ofxSubtitles:getLineAt(float)
ofxSubtitles:isStringAt(string,float)
ofxSubtitles:replace(string,string,float)
ofxSubtitles:loadfont(string,int)
ofxSubtitles:setScreen(int,int)
ofxSubtitles:setColor(int,int,int)
ofxSubtitles:setColor(int,int,int,int)
ofxSubtitles:draw(float)
ofxSubtitles:draw(int,int,float)
ofxSubtitles:draw(int,int,int,int,float)

ofxSyphonClient()
ofxSyphonClient:setup()
ofxSyphonClient:setServerName(string)
ofxSyphonClient:getWidth()
ofxSyphonClient:getHeight()
ofxSyphonClient:draw(float,float)
ofxSyphonClient:draw(float,float,float,float)

ofxSyphonServer()
ofxSyphonServer:setName(string)
ofxSyphonServer:getName()
ofxSyphonServer:publishScreen()
ofxSyphonServer:publishTexture(ofTexture)

ofxTextBlock()
ofxTextBlock:init(string,float)
ofxTextBlock:setText(string)
ofxTextBlock:wrapTextX(float)
ofxTextBlock:wrapTextArea(float,float)
ofxTextBlock:wrapTextForceLines(int)
ofxTextBlock:setLineHeight(float)
ofxTextBlock:setColor(int,int,int,int)
ofxTextBlock:draw(float,float)
ofxTextBlock:drawLeft(float,float)
ofxTextBlock:drawRight(float,float)
ofxTextBlock:drawCenter(float,float)
ofxTextBlock:drawJustified(float,float,float)
ofxTextBlock:forceScale(float)
ofxTextBlock:getWidth()
ofxTextBlock:getHeight()

ofxThermitrack()
ofxThermitrack:setup(string,int,int)
ofxThermitrack:update()
ofxThermitrack:flushCameraBuffer()
ofxThermitrack:getVersion()
ofxThermitrack:setBaudRate()
ofxThermitrack:factoryReset()
ofxThermitrack:clearRequestedPacketTypes()
ofxThermitrack:addRequestedPacketType(char,int)
ofxThermitrack:updateRequestedPacketTypeOnCamera()
ofxThermitrack:setRequestedPacketTypeNone()
ofxThermitrack:getStatus()
ofxThermitrack:isCamOK()
ofxThermitrack:isSerialOK()
ofxThermitrack:setDefaultPacket(thermitrackPacketList)
ofxThermitrack:setDefaultPacketNone()
ofxThermitrack:setParameters(int,int)
ofxThermitrack:sendPacketType(thermitrackPacketList)
ofxThermitrack:reset()
ofxThermitrack:getPackets()
ofxThermitrack:waitForPackets()

ofxThermitrackImage()
ofxThermitrackImage:setup(int)
ofxThermitrackImage:update
ofxThermitrackImage:draw(int,int,int,int)

ofxTrueTypeFontUC()
ofxTrueTypeFontUC:loadFont(string,int)
ofxTrueTypeFontUC:loadFont(string,int,bool,bool)
ofxTrueTypeFontUC:loadFont(string,int,bool,bool,float,int)
ofxTrueTypeFontUC:isLoaded()
ofxTrueTypeFontUC:isAntiAliased()
ofxTrueTypeFontUC:getLineHeight()
ofxTrueTypeFontUC:setLineHeight(float)
ofxTrueTypeFontUC:getLetterSpacing()
ofxTrueTypeFontUC:setLetterSpacing(float)
ofxTrueTypeFontUC:getSpaceSize()
ofxTrueTypeFontUC:setSpaceSize(float)
ofxTrueTypeFontUC:stringWidth(string)
ofxTrueTypeFontUC:stringHeight(string)
ofxTrueTypeFontUC:getStringBoundingBox(string,float,float)
ofxTrueTypeFontUC:drawString(string,float,float)
ofxTrueTypeFontUC:drawStringAsShapes(string,float,float)

ofxTwitter()
ofxTwitter:setup()
ofxTwitter:startTwitterQuery(string,int,int)
ofxTwitter:getResponse(int)
ofxTwitter:getTotalResponse()
ofxTwitter:clear()

ofxTweet()
ofxTweet:ofxTweet(string)
ofxTweet:getTitle()
ofxTweet:getLink()
ofxTweet:getDate()
ofxTweet:getUpdated()
ofxTweet:getID()
ofxTweet:getLanguage()
ofxTweet:getAuthorName()
ofxTweet:getAvatar()
ofxTweet:getAuthorUrl()

ofxVectorField()
ofxVectorField:setup(int,int,int)
ofxVectorField:deallocate()
ofxVectorField:draw()
ofxVectorField:setFromImage(ofImage)
ofxVectorField:randomize()
ofxVectorField:animate(float)
ofxVectorField:getVector(int,int)
ofxVectorField:getVectorInterpolated(int,int,int,int)
ofxVectorField:normalize(bool)
ofxVectorField:map(float,float,bool)
ofxVectorField:scale(float)
ofxVectorField:bias(float)
ofxVectorField:bias(float,float)
ofxVectorField:blur()
ofxVectorField:smudge(ofVec2f,ofVec2f)

gaCameraTracking()
gaCameraTracking:setup(int,int,int)
gaCameraTracking:update()
gaCameraTracking:draw()
gaCameraTracking:setHaarFile(string)
gaCameraTracking:setMovieFile(string)
gaCameraTracking:setGuiSettingsFile(string)
gaCameraTracking:mousePressed(int,int)
gaCameraTracking:mouseDragged(int,int)
gaCameraTracking:mouseReleased(int,int)
gaCameraTracking:getCameraTexture()
gaCameraTracking:getCameraTextureMod()
gaCameraTracking:getCameraPixels()
gaCameraTracking:captureBackground()
gaCameraTracking:getMotionQ()
gaCameraTracking:getMotionX()
gaCameraTracking:getMotionY()
gaCameraTracking:getNumBlobs()
gaCameraTracking:getBlobX(int)
gaCameraTracking:getBlobY(int)
gaCameraTracking:getBlobW(int)
gaCameraTracking:getBlobH(int)
gaCameraTracking:getBlobAngle(int)
gaCameraTracking:getBlobContourSize(int)
gaCameraTracking:getBlobCPointX(int,int)
gaCameraTracking:getBlobCPointY(int,int)
gaCameraTracking:getBlobGeometrySize(int)
gaCameraTracking:getBlobGLineX1(int,int)
gaCameraTracking:getBlobGLineY1(int,int)
gaCameraTracking:getBlobGLineX2(int,int)
gaCameraTracking:getBlobGLineY2(int,int)
gaCameraTracking:getOpticalFlowX(int)
gaCameraTracking:getOpticalFlowY(int)
gaCameraTracking:getOpticalFlowVX(int)
gaCameraTracking:getOpticalFlowVY(int)
gaCameraTracking:getNumHaars()
gaCameraTracking:getHaarX(int)
gaCameraTracking:getHaarY(int)
gaCameraTracking:getHaarW(int)
gaCameraTracking:getHaarH(int)
gaCameraTracking:getTrigger(int)

gaKey()
gaMouseX()
gaMouseY()
gaSystem(string)
gaLog(string)
gaImportFile(string)
gaDataPath(string)
gaSendingOscTo()
gaGetFrameNum()
gaStringReplace(string,string,string)
gaBackground(float,float)
gaBackground(float,float,float,float)
gaSaveFrame(string)
gaSaveFrame(string,ofTexture)
gaGetOutputPixels()
gaGetOutputTexture()
gaDrawAxis(float,ofColor,bool)
gaDrawXAxis(float,ofColor,bool)
gaDrawYAxis(float,ofColor,bool)
gaDrawZAxis(float,ofColor,bool)
gaGaussianFn(float,float,float,float)
gaTimelineSetup(string,string)
gaTimelineSetPageName(string)
gaTimelineSetCurrentPage(string)
gaTimelinePlay()
gaTimelineStop()
gaTimelineDurationInFrames(int)
gaTimelineDurationInSeconds(int)
gaTimelineEnableKeySnap(bool)
gaTimelineSetLoopType(int)
gaTimelineSetFrameRate(int)
gaTimelineSetBPM(int)
gaTimelineEnableBPMSnap(bool)
gaTimelineShowBPMGrid(bool)
gaTimelineSetTimecontrolTrack(string)
gaTimelineBringTrackToTop(string)
gaTimelineBringVideoTrackToTop(string)
gaTimelineBringAudioTrackToTop(string)
gaTimelineAddPage(string)
gaTimelineAddCurves(string,int,int)
gaTimelineAddBangs(string)
gaTimelineAddFlags(string)
gaTimelineAddColors(string)
gaTimelineAddLFO(string)
gaTimelineAddSwitches(string)
gaTimelineAddNotes(string)
gaTimelineAddAudioTrack(string,string)
gaTimelineAddVideoTrack(string,string)
gaTimelineAddCameraTrack(string)
gaTimelineGetValue(string)
gaTimelineGetSwitch(string)
gaTimelineGetNote(string)
gaTimelineGetNotePitch(string)
gaTimelineGetNoteVelocity(string)
gaTimelineGetColor(string)
gaTimelineGetBang()
gaTimelineGetINFrame()
gaTimelineSetINFrame(float)
gaTimelineGetOUTFrame()
gaTimelineSetOUTFrame(float)
gaTimelineClearINOUT()
gaTimelineGetVideoTrack(string)
gaTimelineGetAudioTrack(string)
gaTimelineGetCameraTrack(string)
gaTimelineSetCameraTrackCamera(string,ofCamera)
gaTimelineGetAudioTrackDuration(string)
gaTimelineGetAudioTrackFFTSize(string)
gaTimelineGetAudioTrackFFTBin(string,int)
gaTimelineGetVideoTrackPosition(string)
gaTimelineGetVideoTrackDuration(string)
gaTimelineGetVideoTrackNumFrames(string)
gaTimelineGetVideoTrackCurrentFrame(string)
gaTimelineVideoPlayerNextFrame(string)
gaTimelineVideoPlayerUpdate(string)
gaTimelineVideoPlayerDraw(string)
gaGetVolume(int)
gaGetPitch(int)
gaGetBin(int,int)
gaGetFFT(int,int)
gaGetInputBuffer(int,int)
gaGetOutputBuffer(int)
gaGetSoundSpectrum(int,int)
gaWave(int,float)
gaMonoWave(int,float,int)
gaWaveVolume(int,float)
gaWaveFrequency(int,float)
gaWaveType(int,int)
gaWaveTuning(int,int)
gaNToF(int)
gaStartRec(int)
gaStopRec()
gaRecSamplePlay(int)
gaRecSampleStop(int)
gaRecSampleVolume(int,float)
gaRecSampleLooping(int,bool)
gaRecSamplePaused(int,bool)
gaRecSampleSpeed(int,float)
gaDrawRecHead(int,int,int,int,int)
gaGetMidiChannel()
gaGetMidiByteOne()
gaGetMidiByteTwo()
gaGetMidiPitch()
gaGetMidiVelocity()
gaGetMidiValue(int,int)
gaGetOSCMessage(string,int)
gaGetOSCValue(string,int)
gaGetOSCNumVars(string)
gaSetOSCMessage(string,int)
gaSetOSCValue(string,string)
gaSetOSCActive(string,bool)
pdAddToSearchPath(string)
pdOpenPatch(string)
pdClosePatch(string)
pdStart()
pdStop()
pdComputeAudio(bool)
pdSendBang(string)
pdSendFloat(string,float)
pdSendSymbol(string,string)
pdStartMessage()
pdAddFloat(float)
pdAddSymbol(string)
pdFinishList(string)
pdFinishMessage(string,string)
pdSendNoteOn(int,int,int)
pdSendControlChange(int,int,int)
pdSendProgramChange(int,int)
pdSendPitchBend(int,int)
pdSendAftertouch(int,int)
pdSendPolyAftertouch(int,int,int)
auAddPlugin(string)
auAddPluginFromPreset(string)
auPluginSetParam(string,string,float)
auListPlugins()
gaSerialDevice()
gaAnalogRead(int)
gaDigitalRead(int)
gaDigitalWrite(int,int)
gaSetServoPin(int,bool)
gaServoWrite(int,int)

HALF_PI
PI
TWO_PI
FOUR_PI
DEG_TO_RAD
RAD_TO_DEG
OF_KEY_RETURN
OF_KEY_ESC
OF_KEY_F1
OF_KEY_F2
OF_KEY_F3
OF_KEY_F4
OF_KEY_F5
OF_KEY_F6
OF_KEY_F7
OF_KEY_F8
OF_KEY_F9
OF_KEY_F10
OF_KEY_F11
OF_KEY_F12
OF_KEY_LEFT
OF_KEY_UP
OF_KEY_RIGHT
OF_KEY_DOWN
OF_KEY_PAGE_UP
OF_KEY_PAGE_DOWN
OF_KEY_HOME
OF_KEY_END
OF_KEY_INSERT
OF_KEY_BACKSPACE
OF_KEY_DEL
OF_RECTMODE_CENTER
OF_RECTMODE_CORNER
OF_LOOP_NONE
OF_LOOP_NORMAL
OF_LOOP_PALINDROME
OF_PIXELS_MONO
OF_PIXELS_RGB
OF_PIXELS_RGBA
OF_PIXELS_BGRA
OF_PIXELS_RGB565
OF_GRADIENT_CIRCULAR
OF_GRADIENT_LINEAR
OF_GRADIENT_BAR
OF_SCALEMODE_FIT
OF_SCALEMODE_FILL
OF_SCALEMODE_CENTER
OF_SCALEMODE_STRETCH_TO_FILL
OF_OUTLINE
OF_FILLED
OF_ASPECT_RATIO_IGNORE
OF_ASPECT_RATIO_KEEP
OF_ASPECT_RATIO_KEEP_BY_EXPANDING
OF_ALIGN_VERT_IGNORE
OF_ALIGN_VERT_TOP
OF_ALIGN_VERT_BOTTOM
OF_ALIGN_VERT_CENTER
OF_ALIGN_HORZ_IGNORE
OF_ALIGN_HORZ_LEFT
OF_ALIGN_HORZ_RIGHT
OF_ALIGN_HORZ_CENTER
OF_IMAGE_GRAYSCALE
OF_IMAGE_COLOR
OF_IMAGE_COLOR_ALPHA
OF_IMAGE_UNDEFINED
OF_IMAGE_QUALITY_BEST
OF_IMAGE_QUALITY_HIGH
OF_IMAGE_QUALITY_MEDIUM
OF_IMAGE_QUALITY_LOW
OF_IMAGE_QUALITY_WORST
OF_IMAGE_FORMAT_BMP
OF_IMAGE_FORMAT_ICO
OF_IMAGE_FORMAT_JPEG
OF_IMAGE_FORMAT_JNG
OF_IMAGE_FORMAT_KOALA
OF_IMAGE_FORMAT_LBM
OF_IMAGE_FORMAT_IFF
OF_IMAGE_FORMAT_MNG
OF_IMAGE_FORMAT_PBM
OF_IMAGE_FORMAT_PBMRAW
OF_IMAGE_FORMAT_PCD
OF_IMAGE_FORMAT_PCX
OF_IMAGE_FORMAT_PGM
OF_IMAGE_FORMAT_PGMRAW
OF_IMAGE_FORMAT_PNG
OF_IMAGE_FORMAT_PPM
OF_IMAGE_FORMAT_PPMRAW
OF_IMAGE_FORMAT_RAS
OF_IMAGE_FORMAT_TARGA
OF_IMAGE_FORMAT_TIFF
OF_IMAGE_FORMAT_WBMP
OF_IMAGE_FORMAT_PSD
OF_IMAGE_FORMAT_CUT
OF_IMAGE_FORMAT_XBM
OF_IMAGE_FORMAT_XPM
OF_IMAGE_FORMAT_DDS
OF_IMAGE_FORMAT_GIF
OF_IMAGE_FORMAT_HDR
OF_IMAGE_FORMAT_FAXG3
OF_IMAGE_FORMAT_SGI
OF_IMAGE_FORMAT_EXR
OF_IMAGE_FORMAT_J2K
OF_IMAGE_FORMAT_JP2
OF_IMAGE_FORMAT_PFM
OF_IMAGE_FORMAT_PICT
OF_IMAGE_FORMAT_RAW
OF_POLY_WINDING_ODD
OF_POLY_WINDING_NONZERO
OF_POLY_WINDING_POSITIVE
OF_POLY_WINDING_NEGATIVE
OF_POLY_WINDING_ABS_GEQ_TWO
OF_PRIMITIVE_TRIANGLES
OF_PRIMITIVE_TRIANGLE_STRIP
OF_PRIMITIVE_TRIANGLE_FAN
OF_PRIMITIVE_LINES
OF_PRIMITIVE_LINE_STRIP
OF_PRIMITIVE_LINE_LOOP
OF_PRIMITIVE_POINTS
OF_TRIANGLES_MODE
OF_TRIANGLE_STRIP_MODE
OF_TRIANGLE_FAN_MODE
OF_LINES_MODE
OF_LINE_STRIP_MODE
OF_LINE_LOOP_MODE
OF_POINTS_MODE
OF_MESH_POINTS
OF_MESH_WIREFRAME
OF_MESH_FILL
OF_BLENDMODE_DISABLED
OF_BLENDMODE_ALPHA
OF_BLENDMODE_ADD
OF_BLENDMODE_SUBTRACT
OF_BLENDMODE_MULTIPLY
OF_BLENDMODE_SCREEN
OF_BITMAPMODE_SIMPLE
OF_BITMAPMODE_SCREEN
OF_BITMAPMODE_VIEWPORT
OF_BITMAPMODE_MODEL
OF_BITMAPMODE_MODEL_BILLBOARD
BLEND_NORMAL
BLEND_MULTIPLY
BLEND_AVERAGE
BLEND_ADD
BLEND_SUBSTRACT
BLEND_DIFFERENCE
BLEND_NEGATION
BLEND_EXCLUSION
BLEND_SCREEN
BLEND_OVERLAY
BLEND_SOFTLIGHT
BLEND_HARDLIGHT
BLEND_COLORDODGE
BLEND_COLORBURN
BLEND_LINEARLIGHT
BLEND_VIVIDLIGHT
BLEND_PINLIGHT
BLEND_HARDMIX
BLEND_REGLECT
BLEND_GLOW
BLEND_PHOENIX
BLEND_HUE
BLEND_SATURATION
BLEND_COLOR
BLEND_LUMINOSITY
LED_DEFAULT
LED_OFF
LED_GREEN
LED_RED
LED_YELLOW
LED_BLINK_GREEN
LED_BLINK_YELLOW_RED
OUTPUT_W
OUTPUT_H
OSC_SENDING_PORT
OSC_RECEIVING_PORT
OSC_INT
OSC_FLOAT
OSC_STRING
MAX_BLOBS
OPTICAL_FLOW_COLS_STEP
OPTICAL_FLOW_ROWS_STEP
AUDIO_INPUT_CHANNELS
AUDIO_OUTPUT_CHANNELS
BUFFER_SIZE
FFT_BANDS
GA_SINE
GA_COSINE
GA_SAW
GA_TRI
GA_RECT
GA_NOISE
GA_PINK
GA_BROWN
GA_PHASOR
GA_PULSE
DO_0
DOB_0
RE_0
REB_0
MI_0
FA_0
FAB_0
SOL_0
SOLB_0
LA_0
LAB_0
SI_0
DO_1
DOB_1
RE_1
REB_1
MI_1
FA_1
FAB_1
SOL_1
SOLB_1
LA_1
LAB_1
SI_1
DO_2
DOB_2
RE_2
REB_2
MI_2
FA_2
FAB_2
SOL_2
SOLB_2
LA_2
LAB_2
SI_2
DO_3
DOB_3
RE_3
REB_3
MI_3
FA_3
FAB_3
SOL_3
SOLB_3
LA_3
LAB_3
SI_3
DO_4
DOB_4
RE_4
REB_4
MI_4
FA_4
FAB_4
SOL_4
SOLB_4
LA_4
LAB_4
SI_4
DO_5
DOB_5
RE_5
REB_5
MI_5
FA_5
FAB_5
SOL_5
SOLB_5
LA_5
LAB_5
SI_5
DO_6
DOB_6
RE_6
REB_6
MI_6
FA_6
FAB_6
SOL_6
SOLB_6
LA_6
LAB_6
SI_6
DO_7
DOB_7
RE_7
REB_7
MI_7
FA_7
FAB_7
SOL_7
SOLB_7
LA_7
LAB_7
SI_7
DO_8
DOB_8
RE_8
REB_8
MI_8
FA_8
FAB_8
SOL_8
SOLB_8
LA_8
LAB_8
SI_8

GL_FALSE
GL_TRUE
GL_BYTE
GL_UNSIGNED_BYTE
GL_SHORT
GL_UNSIGNED_SHORT
GL_INT
GL_UNSIGNED_INT
GL_FLOAT
GL_DOUBLE
GL_2_BYTES
GL_3_BYTES
GL_4_BYTES
GL_POINTS
GL_LINES
GL_LINE_LOOP
GL_LINE_STRIP
GL_TRIANGLES
GL_TRIANGLE_STRIP
GL_TRIANGLE_FAN
GL_QUADS
GL_QUAD_STRIP
GL_POLYGON
GL_VERTEX_ARRAY
GL_NORMAL_ARRAY
GL_COLOR_ARRAY
GL_INDEX_ARRAY
GL_TEXTURE_COORD_ARRAY
GL_EDGE_FLAG_ARRAY
GL_VERTEX_ARRAY_SIZE
GL_VERTEX_ARRAY_TYPE
GL_VERTEX_ARRAY_STRIDE
GL_NORMAL_ARRAY_TYPE
GL_NORMAL_ARRAY_STRIDE
GL_COLOR_ARRAY_SIZE
GL_COLOR_ARRAY_TYPE
GL_COLOR_ARRAY_STRIDE
GL_INDEX_ARRAY_TYPE
GL_INDEX_ARRAY_STRIDE
GL_TEXTURE_COORD_ARRAY_SIZE
GL_TEXTURE_COORD_ARRAY_TYPE
GL_TEXTURE_COORD_ARRAY_STRIDE
GL_EDGE_FLAG_ARRAY_STRIDE
GL_VERTEX_ARRAY_POINTER
GL_NORMAL_ARRAY_POINTER
GL_COLOR_ARRAY_POINTER
GL_INDEX_ARRAY_POINTER
GL_TEXTURE_COORD_ARRAY_POINTER
GL_EDGE_FLAG_ARRAY_POINTER
GL_V2F
GL_V3F
GL_C4UB_V2F
GL_C4UB_V3F
GL_C3F_V3F
GL_N3F_V3F
GL_C4F_N3F_V3F
GL_T2F_V3F
GL_T4F_V4F
GL_T2F_C4UB_V3F
GL_T2F_C3F_V3F
GL_T2F_N3F_V3F
GL_T2F_C4F_N3F_V3F
GL_T4F_C4F_N3F_V4F
GL_MATRIX_MODE
GL_MODELVIEW
GL_PROJECTION
GL_TEXTURE
GL_POINT_SMOOTH
GL_POINT_SIZE
GL_POINT_SIZE_GRANULARITY
GL_POINT_SIZE_RANGE
GL_LINE_SMOOTH
GL_LINE_STIPPLE
GL_LINE_STIPPLE_PATTERN
GL_LINE_STIPPLE_REPEAT
GL_LINE_WIDTH
GL_LINE_WIDTH_GRANULARITY
GL_LINE_WIDTH_RANGE
GL_POINT
GL_LINE
GL_FILL
GL_CW
GL_CCW
GL_FRONT
GL_BACK
GL_POLYGON_MODE
GL_POLYGON_SMOOTH
GL_POLYGON_STIPPLE
GL_EDGE_FLAG
GL_CULL_FACE
GL_CULL_FACE_MODE
GL_FRONT_FACE
GL_POLYGON_OFFSET_FACTOR
GL_POLYGON_OFFSET_UNITS
GL_POLYGON_OFFSET_POINT
GL_POLYGON_OFFSET_LINE
GL_POLYGON_OFFSET_FILL
GL_COMPILE
GL_COMPILE_AND_EXECUTE
GL_LIST_BASE
GL_LIST_INDEX
GL_LIST_MODE
GL_NEVER
GL_LESS
GL_EQUAL
GL_LEQUAL
GL_GREATER
GL_NOTEQUAL
GL_GEQUAL
GL_ALWAYS
GL_DEPTH_TEST
GL_DEPTH_BITS
GL_DEPTH_CLEAR_VALUE
GL_DEPTH_FUNC
GL_DEPTH_RANGE
GL_DEPTH_WRITEMASK
GL_DEPTH_COMPONENT
GL_LIGHTING
GL_LIGHT0
GL_LIGHT1
GL_LIGHT2
GL_LIGHT3
GL_LIGHT4
GL_LIGHT5
GL_LIGHT6
GL_LIGHT7
GL_SPOT_EXPONENT
GL_SPOT_CUTOFF
GL_CONSTANT_ATTENUATION
GL_LINEAR_ATTENUATION
GL_QUADRATIC_ATTENUATION
GL_AMBIENT
GL_DIFFUSE
GL_SPECULAR
GL_SHININESS
GL_EMISSION
GL_POSITION
GL_SPOT_DIRECTION
GL_AMBIENT_AND_DIFFUSE
GL_COLOR_INDEXES
GL_LIGHT_MODEL_TWO_SIDE
GL_LIGHT_MODEL_LOCAL_VIEWER
GL_LIGHT_MODEL_AMBIENT
GL_FRONT_AND_BACK
GL_SHADE_MODEL
GL_FLAT
GL_SMOOTH
GL_COLOR_MATERIAL
GL_COLOR_MATERIAL_FACE
GL_COLOR_MATERIAL_PARAMETER
GL_NORMALIZE
GL_ACCUM_RED_BITS
GL_ACCUM_GREEN_BITS
GL_ACCUM_BLUE_BITS
GL_ACCUM_ALPHA_BITS
GL_ACCUM_CLEAR_VALUE
GL_ACCUM
GL_ADD
GL_LOAD
GL_MULT
GL_RETURN
GL_ALPHA_TEST
GL_ALPHA_TEST_REF
GL_ALPHA_TEST_FUNC
GL_BLEND
GL_BLEND_SRC
GL_BLEND_DST
GL_ZERO
GL_ONE
GL_SRC_COLOR
GL_ONE_MINUS_SRC_COLOR
GL_SRC_ALPHA
GL_ONE_MINUS_SRC_ALPHA
GL_DST_ALPHA
GL_ONE_MINUS_DST_ALPHA
GL_DST_COLOR
GL_ONE_MINUS_DST_COLOR
GL_SRC_ALPHA_SATURATE
GL_CONSTANT_COLOR
GL_ONE_MINUS_CONSTANT_COLOR
GL_CONSTANT_ALPHA
GL_ONE_MINUS_CONSTANT_ALPHA
GL_FEEDBACK
GL_RENDER
GL_SELECT
GL_2D
GL_3D
GL_3D_COLOR
GL_3D_COLOR_TEXTURE
GL_4D_COLOR_TEXTURE
GL_POINT_TOKEN
GL_LINE_TOKEN
GL_LINE_RESET_TOKEN
GL_POLYGON_TOKEN
GL_BITMAP_TOKEN
GL_DRAW_PIXEL_TOKEN
GL_COPY_PIXEL_TOKEN
GL_PASS_THROUGH_TOKEN
GL_FEEDBACK_BUFFER_POINTER
GL_FEEDBACK_BUFFER_SIZE
GL_FEEDBACK_BUFFER_TYPE
GL_SELECTION_BUFFER_POINTER
GL_SELECTION_BUFFER_SIZE
GL_FOG
GL_FOG_MODE
GL_FOG_DENSITY
GL_FOG_COLOR
GL_FOG_INDEX
GL_FOG_START
GL_FOG_END
GL_LINEAR
GL_EXP
GL_EXP2
GL_LOGIC_OP
GL_INDEX_LOGIC_OP
GL_COLOR_LOGIC_OP
GL_LOGIC_OP_MODE
GL_CLEAR
GL_SET
GL_COPY
GL_COPY_INVERTED
GL_NOOP
GL_INVERT
GL_AND
GL_NAND
GL_OR
GL_NOR
GL_XOR
GL_EQUIV
GL_AND_REVERSE
GL_AND_INVERTED
GL_OR_REVERSE
GL_OR_INVERTED
GL_STENCIL_TEST
GL_STENCIL_WRITEMASK
GL_STENCIL_BITS
GL_STENCIL_FUNC
GL_STENCIL_VALUE_MASK
GL_STENCIL_REF
GL_STENCIL_FAIL
GL_STENCIL_PASS_DEPTH_PASS
GL_STENCIL_PASS_DEPTH_FAIL
GL_STENCIL_CLEAR_VALUE
GL_STENCIL_INDEX
GL_KEEP
GL_REPLACE
GL_INCR
GL_DECR
GL_NONE
GL_LEFT
GL_RIGHT
GL_FRONT_LEFT
GL_FRONT_RIGHT
GL_BACK_LEFT
GL_BACK_RIGHT
GL_AUX0
GL_AUX1
GL_AUX2
GL_AUX3
GL_COLOR_INDEX
GL_RED
GL_GREEN
GL_BLUE
GL_ALPHA
GL_LUMINANCE
GL_LUMINANCE_ALPHA
GL_ALPHA_BITS
GL_RED_BITS
GL_GREEN_BITS
GL_BLUE_BITS
GL_INDEX_BITS
GL_SUBPIXEL_BITS
GL_AUX_BUFFERS
GL_READ_BUFFER
GL_DRAW_BUFFER
GL_DOUBLEBUFFER
GL_STEREO
GL_BITMAP
GL_COLOR
GL_DEPTH
GL_STENCIL
GL_DITHER
GL_RGB
GL_RGBA
GL_MAX_LIST_NESTING
GL_MAX_ATTRIB_STACK_DEPTH
GL_MAX_MODELVIEW_STACK_DEPTH
GL_MAX_NAME_STACK_DEPTH
GL_MAX_PROJECTION_STACK_DEPTH
GL_MAX_TEXTURE_STACK_DEPTH
GL_MAX_EVAL_ORDER
GL_MAX_LIGHTS
GL_MAX_CLIP_PLANES
GL_MAX_TEXTURE_SIZE
GL_MAX_PIXEL_MAP_TABLE
GL_MAX_VIEWPORT_DIMS
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
GL_ATTRIB_STACK_DEPTH
GL_CLIENT_ATTRIB_STACK_DEPTH
GL_COLOR_CLEAR_VALUE
GL_COLOR_WRITEMASK
GL_CURRENT_INDEX
GL_CURRENT_COLOR
GL_CURRENT_NORMAL
GL_CURRENT_RASTER_COLOR
GL_CURRENT_RASTER_DISTANCE
GL_CURRENT_RASTER_INDEX
GL_CURRENT_RASTER_POSITION
GL_CURRENT_RASTER_TEXTURE_COORDS
GL_CURRENT_RASTER_POSITION_VALID
GL_CURRENT_TEXTURE_COORDS
GL_INDEX_CLEAR_VALUE
GL_INDEX_MODE
GL_INDEX_WRITEMASK
GL_MODELVIEW_MATRIX
GL_MODELVIEW_STACK_DEPTH
GL_NAME_STACK_DEPTH
GL_PROJECTION_MATRIX
GL_PROJECTION_STACK_DEPTH
GL_RENDER_MODE
GL_RGBA_MODE
GL_TEXTURE_MATRIX
GL_TEXTURE_STACK_DEPTH
GL_VIEWPORT
GL_AUTO_NORMAL
GL_MAP1_COLOR_4
GL_MAP1_GRID_DOMAIN
GL_MAP1_GRID_SEGMENTS
GL_MAP1_INDEX
GL_MAP1_NORMAL
GL_MAP1_TEXTURE_COORD_1
GL_MAP1_TEXTURE_COORD_2
GL_MAP1_TEXTURE_COORD_3
GL_MAP1_TEXTURE_COORD_4
GL_MAP1_VERTEX_3
GL_MAP1_VERTEX_4
GL_MAP2_COLOR_4
GL_MAP2_GRID_DOMAIN
GL_MAP2_GRID_SEGMENTS
GL_MAP2_INDEX
GL_MAP2_NORMAL
GL_MAP2_TEXTURE_COORD_1
GL_MAP2_TEXTURE_COORD_2
GL_MAP2_TEXTURE_COORD_3
GL_MAP2_TEXTURE_COORD_4
GL_MAP2_VERTEX_3
GL_MAP2_VERTEX_4
GL_COEFF
GL_DOMAIN
GL_ORDER
GL_FOG_HINT
GL_LINE_SMOOTH_HINT
GL_PERSPECTIVE_CORRECTION_HINT
GL_POINT_SMOOTH_HINT
GL_POLYGON_SMOOTH_HINT
GL_DONT_CARE
GL_FASTEST
GL_NICEST
GL_SCISSOR_TEST
GL_SCISSOR_BOX
GL_MAP_COLOR
GL_MAP_STENCIL
GL_INDEX_SHIFT
GL_INDEX_OFFSET
GL_RED_SCALE
GL_RED_BIAS
GL_GREEN_SCALE
GL_GREEN_BIAS
GL_BLUE_SCALE
GL_BLUE_BIAS
GL_ALPHA_SCALE
GL_ALPHA_BIAS
GL_DEPTH_SCALE
GL_DEPTH_BIAS
GL_PIXEL_MAP_S_TO_S_SIZE
GL_PIXEL_MAP_I_TO_I_SIZE
GL_PIXEL_MAP_I_TO_R_SIZE
GL_PIXEL_MAP_I_TO_G_SIZE
GL_PIXEL_MAP_I_TO_B_SIZE
GL_PIXEL_MAP_I_TO_A_SIZE
GL_PIXEL_MAP_R_TO_R_SIZE
GL_PIXEL_MAP_G_TO_G_SIZE
GL_PIXEL_MAP_B_TO_B_SIZE
GL_PIXEL_MAP_A_TO_A_SIZE
GL_PIXEL_MAP_S_TO_S
GL_PIXEL_MAP_I_TO_I
GL_PIXEL_MAP_I_TO_R
GL_PIXEL_MAP_I_TO_G
GL_PIXEL_MAP_I_TO_B
GL_PIXEL_MAP_I_TO_A
GL_PIXEL_MAP_R_TO_R
GL_PIXEL_MAP_G_TO_G
GL_PIXEL_MAP_B_TO_B
GL_PIXEL_MAP_A_TO_A
GL_PACK_ALIGNMENT
GL_PACK_LSB_FIRST
GL_PACK_ROW_LENGTH
GL_PACK_SKIP_PIXELS
GL_PACK_SKIP_ROWS
GL_PACK_SWAP_BYTES
GL_UNPACK_ALIGNMENT
GL_UNPACK_LSB_FIRST
GL_UNPACK_ROW_LENGTH
GL_UNPACK_SKIP_PIXELS
GL_UNPACK_SKIP_ROWS
GL_UNPACK_SWAP_BYTES
GL_ZOOM_X
GL_ZOOM_Y
GL_TEXTURE_ENV
GL_TEXTURE_ENV_MODE
GL_TEXTURE_1D
GL_TEXTURE_2D
GL_TEXTURE_WRAP_S
GL_TEXTURE_WRAP_T
GL_TEXTURE_MAG_FILTER
GL_TEXTURE_MIN_FILTER
GL_TEXTURE_ENV_COLOR
GL_TEXTURE_GEN_S
GL_TEXTURE_GEN_T
GL_TEXTURE_GEN_MODE
GL_TEXTURE_BORDER_COLOR
GL_TEXTURE_WIDTH
GL_TEXTURE_HEIGHT
GL_TEXTURE_BORDER
GL_TEXTURE_COMPONENTS
GL_TEXTURE_RED_SIZE
GL_TEXTURE_GREEN_SIZE
GL_TEXTURE_BLUE_SIZE
GL_TEXTURE_ALPHA_SIZE
GL_TEXTURE_LUMINANCE_SIZE
GL_TEXTURE_INTENSITY_SIZE
GL_NEAREST_MIPMAP_NEAREST
GL_NEAREST_MIPMAP_LINEAR
GL_LINEAR_MIPMAP_NEAREST
GL_LINEAR_MIPMAP_LINEAR
GL_OBJECT_LINEAR
GL_OBJECT_PLANE
GL_EYE_LINEAR
GL_EYE_PLANE
GL_SPHERE_MAP
GL_DECAL
GL_MODULATE
GL_NEAREST
GL_REPEAT
GL_CLAMP
GL_S
GL_T
GL_R
GL_Q
GL_TEXTURE_GEN_R
GL_TEXTURE_GEN_Q
GL_VENDOR
GL_RENDERER
GL_VERSION
GL_EXTENSIONS
GL_NO_ERROR
GL_INVALID_VALUE
GL_INVALID_ENUM
GL_INVALID_OPERATION
GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW
GL_OUT_OF_MEMORY
GL_CURRENT_BIT
GL_POINT_BIT
GL_LINE_BIT
GL_POLYGON_BIT
GL_POLYGON_STIPPLE_BIT
GL_PIXEL_MODE_BIT
GL_LIGHTING_BIT
GL_FOG_BIT
GL_DEPTH_BUFFER_BIT
GL_ACCUM_BUFFER_BIT
GL_STENCIL_BUFFER_BIT
GL_VIEWPORT_BIT
GL_TRANSFORM_BIT
GL_ENABLE_BIT
GL_COLOR_BUFFER_BIT
GL_HINT_BIT
GL_EVAL_BIT
GL_LIST_BIT
GL_TEXTURE_BIT
GL_SCISSOR_BIT
GL_ALL_ATTRIB_BITS
GL_RESCALE_NORMAL
GL_CLAMP_TO_EDGE
GL_BLEND_EQUATION
GL_MIN
GL_MAX
GL_FUNC_ADD
GL_FUNC_SUBTRACT
GL_FUNC_REVERSE_SUBTRACT
GL_BLEND_COLOR
GL_TEXTURE0
GL_TEXTURE1
GL_TEXTURE2
GL_TEXTURE3
GL_TEXTURE4
GL_TEXTURE5
GL_TEXTURE6
GL_TEXTURE7
GL_TEXTURE8
GL_TEXTURE9
GL_TEXTURE10
GL_TEXTURE11
GL_TEXTURE12
GL_TEXTURE13
GL_TEXTURE14
GL_TEXTURE15
GL_TEXTURE16
GL_TEXTURE17
GL_TEXTURE18
GL_TEXTURE19
GL_TEXTURE20
GL_TEXTURE21
GL_TEXTURE22
GL_TEXTURE23
GL_TEXTURE24
GL_TEXTURE25
GL_TEXTURE26
GL_TEXTURE27
GL_TEXTURE28
GL_TEXTURE29
GL_TEXTURE30
GL_TEXTURE31
GL_ACTIVE_TEXTURE
GL_CLIENT_ACTIVE_TEXTURE
GL_MAX_TEXTURE_UNITS
GL_NORMAL_MAP
GL_REFLECTION_MAP
GL_TEXTURE_CUBE_MAP
GL_TEXTURE_BINDING_CUBE_MAP
GL_TEXTURE_CUBE_MAP_POSITIVE_X
GL_TEXTURE_CUBE_MAP_NEGATIVE_X
GL_TEXTURE_CUBE_MAP_POSITIVE_Y
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
GL_TEXTURE_CUBE_MAP_POSITIVE_Z
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
GL_PROXY_TEXTURE_CUBE_MAP
GL_MAX_CUBE_MAP_TEXTURE_SIZE
GL_COMPRESSED_ALPHA
GL_COMPRESSED_LUMINANCE
GL_COMPRESSED_LUMINANCE_ALPHA
GL_COMPRESSED_INTENSITY
GL_COMPRESSED_RGB
GL_COMPRESSED_RGBA
GL_TEXTURE_COMPRESSION_HINT
GL_TEXTURE_COMPRESSED_IMAGE_SIZE
GL_TEXTURE_COMPRESSED
GL_NUM_COMPRESSED_TEXTURE_FORMATS
GL_COMPRESSED_TEXTURE_FORMATS
GL_MULTISAMPLE
GL_SAMPLE_ALPHA_TO_COVERAGE
GL_SAMPLE_ALPHA_TO_ONE
GL_SAMPLE_COVERAGE
GL_SAMPLE_BUFFERS
GL_SAMPLES
GL_SAMPLE_COVERAGE_VALUE
GL_SAMPLE_COVERAGE_INVERT
GL_MULTISAMPLE_BIT
GL_TRANSPOSE_MODELVIEW_MATRIX
GL_TRANSPOSE_PROJECTION_MATRIX
GL_TRANSPOSE_TEXTURE_MATRIX
GL_TRANSPOSE_COLOR_MATRIX
GL_COMBINE
GL_COMBINE_RGB
GL_COMBINE_ALPHA
GL_SOURCE0_RGB
GL_SOURCE1_RGB
GL_SOURCE2_RGB
GL_SOURCE0_ALPHA
GL_SOURCE1_ALPHA
GL_SOURCE2_ALPHA
GL_OPERAND0_RGB
GL_OPERAND1_RGB
GL_OPERAND2_RGB
GL_OPERAND0_ALPHA
GL_OPERAND1_ALPHA
GL_OPERAND2_ALPHA
GL_RGB_SCALE
GL_ADD_SIGNED
GL_INTERPOLATE
GL_SUBTRACT
GL_CONSTANT
GL_PRIMARY_COLOR
GL_PREVIOUS
GL_DOT3_RGB
GL_DOT3_RGBA
GL_CLAMP_TO_BORDER
GLboolean
GLbyte
GLubyte
GLshort
GLushort
GLint
GLuint
GLsizei
GLenum
GLbitfield
GLfloat
GLdouble