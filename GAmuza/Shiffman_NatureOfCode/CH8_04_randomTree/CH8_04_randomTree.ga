
/* 
   
 GAmuza 0428 examples
 ---------------------
 Shiffman_NatureOfCode/CH8_04_randomTree.ga
 
 This example is one of the series of GAmuza adaptation to
 Daniel Shiffman <Nature of Code> book examples.
 
 Renders a simple tree-like structure via recursion
 Branching angle calculated as a function of horizontal mouse location
 
 More info: <http://natureofcode.com/>
 
 created by n3m3da | www.d3cod3.org
 
*/

angles = {}
index = 0
angleIndex = 0
isFinished = true

function setup()
	randomTree()
end

function update()
	
end

function draw()
    	gaBackground(1.0,1.0)
    	
    	ofPushMatrix()
    	ofTranslate(OUTPUT_W/2,OUTPUT_H,0)
    	ofSetColor(0)
    	if isFinished then
    		branch(OUTPUT_H/3)
    	end
    	ofPopMatrix()
    	ofDrawBitmapString("Click mouse to generate a new tree",20,OUTPUT_H-20)
end

function randomAngles(len)
	isFinished = false
	len *= 0.66
	if len > 2 then
		angles[angleIndex] = nil
		angles[angleIndex] = {}
		angles[angleIndex].left = ofRandom(0,90)
		angles[angleIndex].right = ofRandom(0,90)
		angleIndex += 1
		randomAngles(len)
		randomAngles(len)
	end
end

function branch(len)
	// Each branch will be 2/3rds the size of the previous one
	sw = ofMap(len,2,OUTPUT_H/3,1,10,true)
	ofSetLineWidth(sw)
	ofLine(0,0,0,-len)
	// Move to the end of that line
	ofTranslate(0,-len,0)
	
	index = 0
	len *= 0.66
	// All recursive functions must have an exit condition!!!!
  	// Here, ours is when the length of the branch is 2 pixels or less
  	if len > 2 then
  		// Save the current state of transformation (i.e. where are we now)
  		ofPushMatrix()
  		ofRotate(angles[index].right)
  		branch(len)
  		// Whenever we get back here, we "pop" in order to restore the previous matrix state
  		ofPopMatrix()
  		
  		// Repeat the same thing, only branch off to the "left" this time!
  		ofPushMatrix()
  		ofRotate(-angles[index].left)
  		branch(len)
  		ofPopMatrix()
  		index += 1
  	end
end

function randomTree()
	angles = nil
	angles = {}
	angleIndex = 0
	randomAngles(OUTPUT_H/3)
	isFinished = true
end

function mouseReleased()
	randomTree()
end

