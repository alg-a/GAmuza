-------------------------------------
-- Mover Class

class 'Mover'

function Mover:__init(m,x,y)
    self.mass = m
    self.loc = ofVec2f(x,y)
    self.vel = ofVec2f(0,0)
    self.acc = ofVec2f(0,0)
end

function Mover:applyForce(force)
    f = ofVec2f()
    f = force / self.mass
    self.acc = self.acc + f
end

function Mover:update()
    self.vel = self.vel + self.acc
    self.loc = self.loc + self.vel
    self.acc = self.acc * 0
end

function Mover:display()
    ofSetColor(0)
    ofNoFill()
    ofCircle(self.loc.x,self.loc.y,self.mass*2)
    ofSetColor(175,200)
    ofFill()
    ofCircle(self.loc.x,self.loc.y,self.mass*2)
end

function Mover:repel(mover)
    force = ofVec2f()
    force = self.loc - mover.loc
    distance = force:length()
    distance = ofClamp(distance,1.0,10000.0)
    force = force:normalize()

    strenght = (g*self.mass*mover.mass) / math.pow(distance,2)
    force = force * (1-strenght)
    return force
end

function Mover:checkEdges()
    if self.loc.x > OUTPUT_W then
        self.loc.x = OUTPUT_W
        self.vel.x = self.vel.x * -0.9
    elseif self.loc.x < 0 then
        self.loc.x = 0
        self.vel.x = self.vel.x * -0.9
    end

    if self.loc.y > OUTPUT_H then
        self.loc.y = OUTPUT_H
        self.vel.y = self.vel.y * -0.9
    elseif self.loc.y < 0 then
        self.loc.y = 0
        self.vel.y = self.vel.y * -0.9
    end
end

