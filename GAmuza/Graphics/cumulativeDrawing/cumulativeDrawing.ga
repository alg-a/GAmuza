
/* 
   
 GAmuza 0431 examples 
 ---------------------
 Graphics/cumulativeDrawing.ga
 
 An advanced drawing example.
 
 created by n3m3da | www.d3cod3.org
 
*/

startPosition = ofVec3f()
currentPosition = ofVec3f()
newPosition = ofVec3f()

angles = {}
numAngles = 0
strokeLength = 50.0

function setup()
	startPosition:set(300,300,0)
	currentPosition:set(300,300,0)
end

function update()
	
end

function draw()
    	gaBackground(0.97,1.0)
    	
    	ofSetColor(0,0,0)
    	ofNoFill()
    	
    	ofBeginShape()
    	walkPoint = ofVec3f(startPosition.x,startPosition.y,0)
    	for i=0, table.getn(angles)-1 do
    		ofVertex(walkPoint.x,walkPoint.y)
    		walkPoint.x += strokeLength * math.cos(angles[i])
    		walkPoint.y += strokeLength * math.sin(angles[i])
    	end
    	ofVertex(walkPoint.x,walkPoint.y)
    	ofEndShape(false)
    	
    	ofFill()
    	ofSetColor(0)
    	ofCircle(newPosition.x, newPosition.y,3)
    	
    	ofSetColor(255,0,0)
    	ofCircle(startPosition.x, startPosition.y,3)
    	
    	ofSetColor(255,0,255)
    	ofCircle(currentPosition.x, currentPosition.y,3)
end

function keyReleased()
	if gaKey() == string.byte(' ') then
		for i=0, table.getn(angles)-1 do
			angles[i] *= 0.98
		end
	else
		angles = {}
		currentPosition:set(300,300,0)
	end
end

function mouseMoved()
	diffy = gaMouseY() - currentPosition.y
	diffx = gaMouseX() - currentPosition.x
	_angle = math.atan2(diffy, diffx)
	newPosition.x = currentPosition.x + strokeLength * math.cos(_angle)
	newPosition.y = currentPosition.y + strokeLength * math.sin(_angle)
end

function mousePressed()
	diffy = gaMouseY() - currentPosition.y
	diffx = gaMouseX() - currentPosition.x
	_angle = math.atan2(diffy, diffx)
	currentPosition.x = currentPosition.x + strokeLength * math.cos(_angle)
	currentPosition.y = currentPosition.y + strokeLength * math.sin(_angle)
	angles[numAngles] = _angle
	numAngles += 1
end

