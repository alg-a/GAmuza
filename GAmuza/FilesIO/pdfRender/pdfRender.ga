
/* 
   
 GAmuza 0.4.1 examples 
 ---------------------
 FilesIO/pdfRender.ga
 
 This example show how to render output graphic directly to a .pdf file.
 
 Original example from openFrameworks:
 <of_folder/examples/graphics/pdfExample/>
 
 created by n3m3da | www.d3cod3.org
 
*/

grabber = ofVideoGrabber()

font = ofTrueTypeFont()
frames = {}
image = ofImage()
boxTrail = {}

oneShot = false
pdfRendering = false
_angle = 0
exportFolder = gaDataPath("export/")

function setup()
	grabber:setDeviceID(0)
	grabber:initGrabber(320,240)
	font:loadFont(gaImportFile("Anonymous_Pro_B.ttf"),24,true,false,true)
end

function update()
	grabber:update()
    	if grabber:isFrameNew() then
    		image:setFromPixels(grabber:getPixelsRef())
    	end
	
	_angle = _angle + 1    
end

function draw()
    	gaBackground(0.0,1.0)
    	
    	if oneShot then
    		ofBeginSaveScreenAsPDF(string.format("%s_screenshot-%s.pdf", exportFolder,ofGetTimestampString()),true,false,ofGetCurrentViewport())
    	end
    	
    	ofSetColor(255)
    	ofRect(0,0,OUTPUT_W,OUTPUT_H)
    	
    	ofSetColor(54)
    	ofDrawBitmapString("PDF RENDER EXAMPLE", 32, 32)
    	if pdfRendering then
    		ofDrawBitmapString("press 'r' to stop pdf multipage rendering", 32, 92)
    	else
    		ofDrawBitmapString("press r to start pdf multipage rendering\npress s to save a single screenshot as pdf to disk", 32, 92)
    	end
    	
    	ofFill()
    	ofSetColor(54)
    	ofDrawBitmapString("TTF Font embedded into pdf as vector shapes", 32, 460)
    	
    	if oneShot or pdfRendering then
    		ofSetColor(54)
    		font:drawStringAsShapes("Elapsed Ms: ",32,500)
    		ofSetColor(245,58,135)
    		font:drawStringAsShapes(tostring(ofGetElapsedTimeMillis()), 32 + font:getStringBoundingBox("Current Frame: ", 0, 0).width + 9, 500)
    	else
    		ofSetColor(54)
    		font:drawString("Elapsed Ms: ",32,500)
    		ofSetColor(245,58,135)
    		font:drawString(tostring(ofGetElapsedTimeMillis()), 32 + font:getStringBoundingBox("Current Frame: ", 0, 0).width + 9, 500)
    	end
    	
    	ofSetColor(54)
	ofDrawBitmapString("Images can also be embedded into pdf", OUTPUT_W-340, 280)
    	ofSetColor(255)
    	image:draw(OUTPUT_W-340,20)
    	
    	// lets draw a box
    	ofSetColor(245,58,135)
    	boxBounds = ofRectangle(32, 500, OUTPUT_W-32, 250)
    	noiseX = ofNoise(ofGetElapsedTimef()/600,200)
    	noiseY = ofNoise(ofGetElapsedTimef()/800,-900)
    	
    	ofFill()
    	
    	ofPushMatrix()
    		xx = ofMap(noiseX, 0, 1, 32, 32 + boxBounds.width, true)
    		yy = ofMap(noiseY, 0, 1, 500, 500 + boxBounds.height, true)
    		
    		ofTranslate(xx,yy,0)
    		ofRotate(_angle)
    		ofRect(0,0,30,30)
    	ofPopMatrix()
    	
    	if oneShot then
    		ofEndSaveScreenAsPDF()
    		oneShot = false
    	end
end

function keyReleased()
	if gaKey() == string.byte('r') then
		pdfRendering = not pdfRendering
		if pdfRendering then
			ofBeginSaveScreenAsPDF(string.format("%s_recording-%s.pdf", exportFolder,ofGetTimestampString()),true,false,ofGetCurrentViewport())
		else
			ofEndSaveScreenAsPDF()
		end
	end
	
	if not pdfRendering and gaKey() == string.byte('s') then
		oneShot = true
	end
end

